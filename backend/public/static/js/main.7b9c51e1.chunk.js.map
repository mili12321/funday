{"version":3,"sources":["store/reducers/userReducer.js","store/reducers/systemReducer.js","store/reducers/workspaceReducer.js","store/reducers/boardReducer.js","store/reducers/index.js","store/store.js","services/httpService.js","services/userService.js","store/actions/userActions.js","store/actions/systemActions.js","cmps/GoogleOauth.jsx","pages/Login.jsx","cmps/LoginModal.jsx","pages/Home.jsx","pages/About.jsx","data/shortColorPicker.js","data/iconsPicker.js","cmps/CreateWorkspace.jsx","cmps/PopupModal.jsx","cmps/PinCheckbox.jsx","cmps/WorkspaceList.jsx","cmps/ForwardModal.jsx","cmps/ToolbarOptionsModal.jsx","cmps/BoardToolbar.jsx","services/workspaceService.js","store/actions/workspaceActions.js","cmps/AvailableFoldersList.jsx","cmps/BoardPreview.jsx","cmps/BoardList.jsx","cmps/CreateBoard.jsx","cmps/FolderPreview.jsx","cmps/FolderList.jsx","cmps/WorkspaceIconPicker.jsx","cmps/UpdateWorkspace.jsx","cmps/ToolbarMenuActionsBtnModal.jsx","cmps/ToolbarMenuActionsBtn.jsx","cmps/Search.jsx","services/boardService.js","cmps/FavoriteBoards.jsx","cmps/BoardToolbarMenu.jsx","cmps/BoardHeader.jsx","cmps/UpdateLabelName.jsx","cmps/StatusLabelPreview.jsx","data/colorPicker.js","cmps/TaskStatus.jsx","data/stickers.js","cmps/TaskText.jsx","cmps/TaskCheckBox.jsx","cmps/TaskConversation.jsx","cmps/OwnerModal.jsx","cmps/Task.jsx","cmps/TableColumnPreview.jsx","cmps/TablePreview.jsx","cmps/BoardMain.jsx","cmps/NewWorkspaceBoardMain.jsx","cmps/BoardDetails.jsx","cmps/ConversationModal.jsx","services/folderService.js","pages/Workspace.jsx","services/cloudinarySerivice.js","cmps/UploadImg.jsx","routes.js","pages/UserDetails.jsx","cmps/Navbar.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["localLoggedinUser","sessionStorage","user","JSON","parse","initialState","loggedInUser","users","isLoading","workspaces","currWorkspace","boards","currBoard","checkedTasks","boardWorkspace","conversationLocation","board","statusLabelList","lastSeen","rootReducer","combineReducers","system","state","action","type","filter","_id","userId","workspace","workspaceId","map","baords","baord","newBoard","currCheckedTask","task","taskId","location","baordId","newLabel","label","labelId","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","BASE_URL","axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","login","logout","signup","getUsers","httpService","getById","remove","update","removeFavBoard","addFavBoard","loginByGoogle","guestLogin","newUser","_handleLogin","userCred","clear","setItem","stringify","email","password","boardId","favBoards","_boardId","loadUsers","dispatch","userService","updateUser","toggleFavUserBoardList","length","_GoogleOauth","responseGoogle","userCreds","profileObj","avatar","imageUrl","username","givenName","props","closeModal","assign","clientId","buttonText","onSuccess","this","onFailure","cookiePolicy","Component","mapDispatchToProps","GoogleOauth","connect","_Login","msg","loginCred","signupCred","section","loginHandleChange","ev","target","name","value","setState","prevState","signupHandleChange","doLogin","preventDefault","then","doSignup","signupCreds","removeUser","onSignup","signupSection","onSubmit","className","onChange","placeholder","maxLength","loginSection","Fragment","canvasClassName","params","particles","number","density","enable","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","onClick","addFavMovieTxt","Login","LoginModal","isShown","onOpenModal","stopPropagation","React","_Home","showComponent","history","pathname","push","onGuestLogin","id","Home","withRouter","About","colorsPicker","iconsPicker","CreateWorkspace","setIsShown","addNewWorkspace","useState","newWorkspaceName","setNewWorkspaceName","newWorkspaceColor","setNewWorkspaceColor","newWorkspaceIcon","setNewWorkspaceIcon","isOpenModal","setIsOpenModal","inputEl","useRef","useEffect","setTimeout","current","focus","style","backgroundColor","tabIndex","onBlur","color","icon","onFocus","document","execCommand","ref","onKeyDown","key","PopupModal","children","PinCheckbox","useDispatch","useSelector","pinnedWorkspaces","includes","checked","setChecked","handleChange","unpinWorkspace","pinWorkspace","defaultChecked","WorkspaceList","onMoveObject","object","isCheckbox","search","setSearch","listOfWorkspaces","setListOfWorkspaces","e","toLowerCase","img","ForwardModal","btn","setMoveToObject","isFolderModal","toggleShownForwardModal","isWorkspaceIconPicker","itemList","moveToObject","onMouseOver","onMouseLeave","ToolbarOptionsModal","setIsOpenToolbarOptionsModal","onSortWorkspces","isSorted","onMouseDown","BoardToolbar","BsLightning","BsStar","BsThreeDots","onGettingCurrentWorkspace","onSetToolbarMenu","allWorkspaces","setWorkspaces","activeBtn","setActiveBtn","activeBtnClass","setActiveBtnClass","isOpenToolbarOptionsModal","isShownPinWorkspaceModal","setIsShownPinWorkspaceModal","btnEl","setIsSorted","pinedworkspaces","setPinedworkspaces","array","sort","b","localeCompare","idx","curr","val","workspaceService","query","save","add","addLabel","getStatusLabelList","editLabel","removeLabel","filterBy","addedWorkspace","isLastSeen","getCurrBoard","loadWorkspaces","updateWorkspace","updateCurrWorkspace","err","updateTaskConversation","updateCurrBoard","AvailableFoldersList","onMoveBoardToFolder","folders","folder","BoardPreview","onGettingCurrentBoard","CgViewComfortable","removeBoard","editBoard","moveBoard","moveBoardToFolder","scroll","cmp","dimensions","setDimensions","setCurrWorkspace","boardRef","onGetCurrWorkspace","theWorkspace","forEach","_board","getBoundingClientRect","bottom","setBoardName","isUpdateName","setIsUpdateName","boardName","isShownMoveToWorkspaceModal","setIsShownMoveToWorkspaceModal","updateBoardName","blur","title","toggleModal","top","BoardList","index","CreateBoard","addNewBoard","newBoardName","setNewBoardName","FolderPreview","IoMdArrowDropdown","addBoardInFolder","removeFolder","updateFolder","moveFolder","isNewFolderCreated","onEndNewFolderUpdating","isFolderOpen","setIsFolderOpen","folderName","setFolderName","folderRef","newFolder","updateFolderName","FolderList","WorkspaceIconPicker","newWorkspace","UpdateWorkspace","deleteWorkspace","onManageWorkspace","workspaceColor","setWorkspaceColor","workspaceIcon","setWorkspaceIcon","workspaceName","setWorkspaceName","ToolbarMenuActionsBtnModal","btnName","addNewFloder","content","getBtnOptions","ToolbarMenuActionsBtn","getBtnValue","Search","setFilteredFolders","setFilteredBoards","isSearchActive","setSearchActive","inputRef","item","boardService","addBoard","Date","now","toString","Math","desc","createdAt","lastUpdated","uniqId","activities","isPrivate","owner","tableColumns","taskKey","tables","tasks","conversations","package","milestone","policyState","timeline","from","to","tags","files","weight","dateCompleted","progress","_folder","boardToRemove","currFolder","addFolder","folderId","addTable","newTable","repeat","removeTable","tableId","table","updateTable","updatedTable","addTask","currTable","userInput","newTask","byUser","date","getTime","removeTask","updateTask","updatedTask","substr","FavoriteBoards","favBoardsIds","workspaceBoards","setWorkspaceBoards","folderBoards","setFolderBoards","favoriteWorkspaceBoards","setFavoriteWorkspaceBoards","favoriteFolderBoards","setFavoriteFolderBoards","cuurBoard","updatedWorkspace","newWorkspaceToUpdate","folderWorkspace","newFolderToUpdate","boardInsideFolder","isBoardInsideFolder","cuurFolde","BoardToolbarMenu","IoIosArrowForward","isToolbarMenuClose","onToggleToolbarMenu","IoIosArrowBack","onGettingCurrentBoardInWorkspace","toolbarActiveBtn","setScroll","filteredFolders","filteredBoards","width","height","onScroll","_BoardHeader","createRef","focusText","handleChangeBoardName","handleChangeBoardDesc","changeToContentEditable","innerRef","editableBoardName","html","disabled","updatedBoard","onEditBoard","editableBoardDesc","prevProps","match","onAddNewTable","getFavBoardStyle","src","alt","BoardHeader","UpdateLabelName","isUpdateLabelName","handelChangeLabelName","updateLabel","onUpdateLabelName","statusLabel","editableLabelName","select","StatusLabelPreview","isUpdateLabelColor","newLabelColor","currLabel","onToggleUpdateLabelColor","hideColorPicker","onChangeNewLabelColor","currColor","onRemoveNewLabelColor","onSaveColor","BsDroplet","provided","draggableProps","dragHandleProps","tabindex","onRemoveLabel","gridRowStart","gridRowEnd","onMouseEnter","TaskStatus","isStatusModalOpen","isEditLabelsModalOpen","boardCopy","toggleStatusModal","closeStatusModal","closeEditLabelsModal","onEditTask","openEditLabelsModal","onAddNewLabel","newstatusLabelList","toggleUpdateLabel","handleDragEnd","destination","source","draggableId","statusLabelListCopy","splice","FaPencilAlt","onDragEnd","droppableId","droppableProps","TiDelete","stickers","customCategory","class","TaskText","setUpdatingText","text","setText","isUpdating","setUpdateText","isShowModal","setShowModal","sticker","dangerouslySetInnerHTML","__html","result","em","emoji","temp","searchStr","replace","replaceWithSticker","TaskCheckBox","check","setCheck","checkBox","toggleCheck","TaskConversation","openConversationModal","setConversations","OwnerModal","owners","setOwners","newUsers","setNewUsers","order","itemsArray","itemOrder","orderedArray","A","B","indexOf","IdList","getUserName","i","getLine","srcset","removeOwner","updateTaskOwner","Task","taskKeys","isDragging","onEditTable","unCheckTasks","currTask","setTask","isShowOptionsModal","setIsShowOptionsModal","setIsUpdating","isOwnerModalShown","setToggleOwnerModal","isUpdatingText","timePassString","isChecked","setCheckTask","editableTaskName","modalEl","addCheckedTasks","handleChangeName","getTaskValue","month","getMonth","day","getDate","getMonthName","getColumnStyle","TableColumnPreview","currTableColumn","isDivOnFocus","handleChangeGroupName","handleChangeGroupTitle","tableColumn","toggleFocusOnDiv","bool","dragHandle","isOpenTableColorModal","closeTableColorModal","isExpand","toggleExpandeTable","editableGroupName","editableGroupTitle","IoMdNotifications","TablePreview","HiPlusCircle","onAddNewTask","onRemoveTask","isShrink","onShrink","newTaskName","setNewTaskName","isInputBtnVisable","setIsInputBtnVisable","isShowTableOptionsModal","setIsShowTableOptionsModal","isHover","setIsHover","setIsOpenTableColorModal","tableCopy","setTableCopy","setExpandTable","allOwners","setAllOwners","allTablestatuses","setAllTablestatuses","statusTitles","setStatusTitles","statusesSum","setStatusesSum","colorModal","isShowAddColumnModal","setToggleAddColumnModal","idList","uniqIdList","Set","list","statusesNameInUse","sortedList","sortedStatusesNameInUse","uniq","tablestatuses","num","cleanInput","toggleHover","addColumn","newColumn","itemCopy","prev","borderColor","updateTableColor","snapshot","isDraggingOver","onKeyUp","keyCode","addNewTaskKeyUp","split","join","round","_BoardMain","onRemoveCheckedTasks","ids","BsPlus","BoardMain","NewWorkspaceBoardMain","setIsShowModal","isUpdateDesc","setIsUpdateDesc","workspaceDesc","setWorkspaceDesc","nameInputEl","descInputEl","onUpdateDesc","BoardDetails","isNewWorkspaceCreated","ConversationModal","isOpenConversationModal","setCurrTable","setCurrTask","isActiveInput","setActiveInput","isReplyActive","setReply","setMsg","inuptRef","getUserById","onAddMsg","trim","newConversations","likes","replys","editorBtns","attachmentBtns","cols","rows","conversation","backgroundImage","cur","folderService","_Workspace","getCurrFolder","onToggleFolder","updateBoard","cuurFolder","isMain","addWorkspace","removeWorkspace","editableName","newworkspace","Workspace","cloudinaryService","uploadImg","UPLOAD_URL","formData","FormData","append","fetch","body","json","UploadImg","itemName","setImg","logoImg","onUploadImg","cloudImg","imgUrl","secure_url","routes","path","component","setName","isUpdate","setUpdate","icons","userDetails","onUpdating","Navbar","useHistory","hash","viewBox","fill","xmlns","clipPath","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fillRule","App","route","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sOAAIA,EAAoB,KACpBC,eAAeC,OAAMF,EAAoBG,KAAKC,MAAMH,eAAeC,OAEvE,IAAMG,EAAe,CACnBC,aAAcN,EACdO,MAAO,ICLT,IAAMF,EAAe,CACnBG,WAAW,G,QCDPH,EAAe,CACjBI,WAAY,GACZC,cAAc,GACdC,OAAO,GACPC,UAAW,GACXC,aAAa,GACbC,eAAe,GACfC,qBAAqB,ICPzB,IAAMV,EAAe,CACjBW,MAAM,GACNC,gBAAgB,GAChBC,SAAS,8CCGb,IAOeC,EAPKC,YAAgB,CAClCC,OHHa,WAA8C,IAApCC,EAAmC,uDAA3BjB,EAAckB,EAAa,uDAAJ,GACtD,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAO,2BAAKF,GAAZ,IAAmBd,WAAW,IAChC,IAAK,eACH,OAAO,2BAAKc,GAAZ,IAAmBd,WAAW,IAChC,QAAS,OAAOc,IGFlBpB,KJAK,WAAyD,IAApCoB,EAAmC,uDAA3BjB,EAAckB,EAAa,uDAAJ,GACzD,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,2BAAKF,GAAZ,IAAmBhB,aAAciB,EAAOrB,OAC1C,IAAK,cACH,OAAO,2BACFoB,GADL,IAEEf,MAAOe,EAAMf,MAAMkB,QAAO,SAACvB,GAAD,OAAUA,EAAKwB,MAAQH,EAAOI,YAE5D,IAAK,YACH,OAAO,2BAAKL,GAAZ,IAAmBf,MAAOgB,EAAOhB,QAEnC,IAAK,cAEL,IAAK,gBAEL,IAAK,mBACH,OAAO,2BAAKe,GAAZ,IAAmBhB,aAAciB,EAAOrB,OAC1C,QACE,OAAOoB,IIlBXM,UFCK,WAAyD,IAA/BN,EAA8B,uDAAtBjB,EAAckB,EAAQ,uCAC3D,OAAQA,EAAOC,MACX,IAAK,iBACD,OAAO,2BACAF,GADP,IAEIb,WAAYc,EAAOd,aAE3B,IAAK,wBACD,OAAO,2BACJa,GADH,IAEAZ,cAAea,EAAOK,YAE1B,IAAK,yBACD,OAAO,2BACJN,GADH,IAEAR,eAAgBS,EAAOK,YAE3B,IAAK,gBACD,IAAMnB,EAAU,sBAAOa,EAAMb,YAAb,CAAyBc,EAAOK,YAChD,OAAO,2BACAN,GADP,IAEIb,aACAC,cAAea,EAAOK,YAE9B,IAAK,mBACD,OAAO,2BACAN,GADP,IAEIb,WAAYa,EAAMb,WAAWgB,QAAO,SAACG,GAAD,OAAeA,EAAUF,MAAQH,EAAOM,iBAEpF,IAAK,mBACD,OAAO,2BACAP,GADP,IAEIb,WAAYa,EAAMb,WAAWqB,KAAI,SAAAF,GAAS,OAAIA,EAAUF,MAAQH,EAAOK,UAAUF,IAAIH,EAAOK,UAAUA,OAE9G,IAAK,gBACD,OAAO,2BACAN,GADP,IAEIX,OAAQW,EAAMZ,cAAcqB,OAAOD,KAAK,SAAAE,GAAK,OAAGA,EAAMN,MAAQH,EAAOU,SAASP,IAAIH,EAAOU,SAASD,OAE1G,IAAK,aACD,OAAO,2BACAV,GADP,IAEIX,OAAO,GAAD,mBAAMW,EAAMZ,cAAcqB,QAA1B,CAAkCR,EAAOU,aAEvD,IAAK,gBACD,OAAO,2BACAX,GADP,IAEIX,OAAQW,EAAMZ,cAAcqB,OAAON,QAAQ,SAAAO,GAAK,OAAGA,EAAMN,MAAQH,EAAOU,SAASP,SAEzF,IAAK,eAKL,IAAK,YACD,OAAO,2BACAJ,GADP,IAEIV,UAAWW,EAAOP,QAE1B,IAAK,mBACD,OAAO,2BACAM,GADP,IAEIT,aAAa,GAAD,mBAAMS,EAAMT,cAAZ,CAAyBU,EAAOW,oBAEpD,IAAK,sBACD,OAAO,2BACAZ,GADP,IAEIT,aAAcS,EAAMT,aAAaY,QAAO,SAAAU,GAAI,OAAEA,EAAKT,MAAMH,EAAOa,YAExE,IAAK,2BACD,OAAO,2BACAd,GADP,IAEIP,qBAAsBQ,EAAOc,WAErC,QACI,OAAOf,IE3EjBN,MDJK,WAAqD,IAA/BM,EAA8B,uDAAtBjB,EAAckB,EAAQ,uCACvD,OAAQA,EAAOC,MACX,IAAK,YACD,OAAO,2BACAF,GADP,IAEIN,MAAOO,EAAOP,QAEtB,IAAK,sBACD,OAAO,2BACAM,GADP,IAEIJ,SAAUK,EAAOe,UAGzB,IAAK,wBACD,OAAO,2BACAhB,GADP,IAEIL,gBAAiBM,EAAON,kBAEhC,IAAK,wBACD,IAAMA,EAAe,sBAAOK,EAAML,iBAAb,CAA8BM,EAAOgB,WAC1D,OAAO,2BAAIjB,GAAX,IAAkBL,oBACtB,IAAK,2BACD,OAAO,2BACAK,GADP,IAEIL,gBAAiBK,EAAML,gBAAgBa,KAAI,SAAAU,GAAK,OAAIA,EAAMd,MAAQH,EAAOiB,MAAMd,IAAIH,EAAOiB,MAAMA,OAExG,IAAK,2BACD,OAAO,2BACAlB,GADP,IAEIL,gBAAiBK,EAAML,gBAAgBQ,QAAO,SAACe,GAAD,OAAWA,EAAMd,MAAQH,EAAOkB,aAEtF,QACI,OAAOnB,MEjCboB,EAAmBC,OAAOC,sCAAwCC,IAE3DC,EAAQC,YACnB5B,EACAuB,EAAiBM,YAAgBC,O,yECP7BC,EACoC,QAEtCC,E,OAAQC,EAAMC,OAAO,CACvBC,iBAAiB,IAGJ,WACTC,EAAUC,GACZ,OAAOC,EAAKF,EAAU,MAAOC,IAFlB,WAIRD,EAAUC,GACb,OAAOC,EAAKF,EAAU,OAAQC,IALnB,WAOTD,EAAUC,GACZ,OAAOC,EAAKF,EAAU,MAAOC,IARlB,WAUND,EAAUC,GACf,OAAOC,EAAKF,EAAU,SAAUC,I,SAIrBC,E,8EAAf,WAAoBF,GAApB,+BAAAG,EAAA,6DAA8BC,EAA9B,+BAAuC,MAAOH,EAA9C,+BAAqD,KAArD,kBAEsBL,EAAM,CACtBS,IAAI,GAAD,OAAKV,GAAL,OAAgBK,GACnBI,SACAH,SALN,cAEUK,EAFV,yBAOWA,EAAIL,MAPf,sCASIM,QAAQC,IAAR,qBACgBJ,EADhB,yCACuDJ,EADvD,wBAC+EC,IAE/EM,QAAQE,IAAR,MACI,KAAIC,UAAY,KAAIA,SAASC,OAbrC,+D,sBCtBe,OACbC,QACAC,O,2CACAC,O,4CACAC,SAUF,WACE,OAAOC,EAAgB,SAVvBC,QAaF,SAAiB7C,GACf,OAAO4C,EAAA,eAAwB5C,KAb/B8C,OAeF,SAAgB9C,GACd,OAAO4C,EAAA,eAA2B5C,KAflC+C,O,4CACAC,e,8CACAC,Y,8CACAC,c,4CACAC,W,wFAcF,WAAsB5E,GAAtB,eAAAwD,EAAA,sEACwBa,EAAA,eAAwBrE,EAAKwB,KAAOxB,GAD5D,cACQ6E,EADR,yBAESC,EAAaD,IAFtB,4C,+BAKeZ,E,8EAAf,WAAqBc,GAArB,eAAAvB,EAAA,sEACqBa,EAAiB,aAAcU,GADpD,YACQ/E,EADR,iDAGW8E,EAAa9E,IAHxB,4C,kEAOA,WAAsB+E,GAAtB,eAAAvB,EAAA,sEACqBa,EAAiB,cAAeU,GADrD,cACQ/E,EADR,yBAES8E,EAAa9E,IAFtB,4C,kEAIA,sBAAAwD,EAAA,sEACQa,EAAiB,eADzB,OAEEtE,eAAeiF,QAFjB,4C,kEAKA,WAA6BD,GAA7B,eAAAvB,EAAA,sEACqBa,EAAiB,qBAAsBU,GAD5D,cACQ/E,EADR,yBAES8E,EAAa9E,IAFtB,4C,sBAKA,SAAS8E,EAAa9E,GAEpB,OADAD,eAAekF,QAAQ,OAAQhF,KAAKiF,UAAUlF,IACvCA,E,4CAGT,4BAAAwD,EAAA,+EAEyBS,EAAM,CAAEkB,MAAO,kBAAmBC,SAAU,UAFrE,cAEYpF,EAFZ,yBAGaA,GAHb,sCAKM4D,QAAQC,IAAI,wCALlB,+D,kEAUA,WAA2B7D,EAAKqF,GAAhC,eAAA7B,EAAA,6DACExD,EAAKsF,UAAL,CAAkBD,GAAlB,mBAA8BrF,EAAKsF,YADrC,SAEwBjB,EAAA,eAAwBrE,EAAKwB,KAAOxB,GAF5D,cAEQ6E,EAFR,yBAGSC,EAAaD,IAHtB,4C,kEAKA,WAA8B7E,EAAKqF,GAAnC,eAAA7B,EAAA,6DACExD,EAAKsF,UAAYtF,EAAKsF,UAAU/D,QAAO,SAAAgE,GAAQ,OAAEA,IAAWF,KAD9D,SAEwBhB,EAAA,eAAwBrE,EAAKwB,KAAOxB,GAF5D,cAEQ6E,EAFR,yBAGSC,EAAaD,IAHtB,4C,sBCrEO,SAASW,IACd,8CAAO,WAAOC,GAAP,eAAAjC,EAAA,sEAGHiC,ECPG,CAAEnE,KAAM,kBDIR,SAIiBoE,EAAYtB,WAJ7B,OAIG/D,EAJH,OAKHoF,EAAS,CAAEnE,KAAM,YAAajB,UAL3B,gDAOHuD,QAAQC,IAAI,gCAAZ,MAPG,yBAWH4B,ECZG,CAAEnE,KAAM,iBDCR,4EAAP,sDA4CK,SAAS4C,IACd,8CAAO,WAAOuB,GAAP,SAAAjC,EAAA,sEACCkC,EAAYxB,SADb,OAELuB,EAAS,CAAEnE,KAAM,WAAYtB,KAAM,OAF9B,2CAAP,sDAaK,SAAS4E,IACd,8CAAO,WAAMa,GAAN,eAAAjC,EAAA,+EAEoBkC,EAAYd,aAFhC,OAEO5E,EAFP,OAGCyF,EAAS,CAAEnE,KAAM,WAAYtB,SAH9B,sDAKC4D,QAAQC,IAAI,0CALb,8DAAP,sDAWK,SAAS8B,EAAWd,GACzB,8CAAO,WAAOY,GAAP,eAAAjC,EAAA,sEACckC,EAAYlB,OAAOK,GADjC,OACC7E,EADD,OAELyF,EAAS,CAAEnE,KAAM,cAAetB,SAF3B,2CAAP,sDAMK,SAAS4F,GAAuBxF,EAAaiF,GAEhD,OADwBjF,EAAakF,UAAU/D,QAAO,SAAAgE,GAAQ,OAAEA,IAAWF,KACxDQ,OAAO,EACxB,uCAAO,WAAMJ,GAAN,eAAAjC,EAAA,+EAEkBkC,EAAYjB,eAAerE,EAAaiF,GAF1D,OAEKrF,EAFL,OAGDyF,EAAS,CAAEnE,KAAM,mBAAoBtB,SAHpC,gDAKD4D,QAAQC,IAAI,0CAAZ,MALC,yDAAP,sDASA,uCAAO,WAAO4B,GAAP,eAAAjC,EAAA,+EAEkBkC,EAAYhB,YAAYtE,EAAaiF,GAFvD,OAEKrF,EAFL,OAGDyF,EAAS,CAAEnE,KAAM,gBAAiBtB,SAHjC,gDAKD4D,QAAQC,IAAI,uCAAZ,MALC,yDAAP,sD,4CEzFOiC,GAAb,4MACIC,eAAiB,SAAChC,GACd,IAAMiC,EAAY,CACdb,MAAOpB,EAASkC,WAAWd,MAC3Be,OAAOnC,EAASkC,WAAWE,SAC3BC,SAAUrC,EAASkC,WAAWI,WAElC,EAAKC,MAAM3B,cAAcqB,GACzB,EAAKM,MAAMC,aACX9D,OAAON,SAASqE,OAAO,eAT/B,uDAaQ,OACG,8BACK,cAAC,eAAD,CACIC,SAAS,2EACTC,WAAW,oBACXC,UAAWC,KAAKb,eAChBc,UAAWD,KAAKb,eAChBe,aAAc,6BApBlC,GAAkCC,aAgC5BC,GAAqB,CACvBrC,cFkBG,SAAuBqB,GAC5B,8CAAO,WAAOP,GAAP,eAAAjC,EAAA,sEACckC,EAAYf,cAAcqB,GADxC,OACChG,EADD,OAELyF,EAAS,CAAEnE,KAAM,WAAYtB,SAFxB,2CAAP,wDEjBWiH,GAAcC,aAVH,SAAC9F,GACrB,MAAO,CACLf,MAAOe,EAAMpB,KAAKK,MAClBD,aAAcgB,EAAMpB,KAAKI,aACzBE,UAAWc,EAAMD,OAAOb,aAMsB0G,GAAzBE,CAA6CpB,IC1BlEqB,G,4MACJ/F,MAAQ,CACNgG,IAAK,GACLC,UAAW,CACTlC,MAAO,GACPC,SAAU,IAEZkC,WAAY,CACVnC,MAAO,GACPC,SAAU,GACVgB,SAAU,IAEZmB,SAAS,G,EAGXC,kBAAoB,SAACC,GAAQ,IAAD,EACFA,EAAGC,OAAnBC,EADkB,EAClBA,KAAMC,EADY,EACZA,MACd,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BT,UAAU,2BACLS,EAAUT,WADN,mBAENM,EAAOC,S,EAKdG,mBAAqB,SAACN,GAAQ,IAAD,EACHA,EAAGC,OAAnBC,EADmB,EACnBA,KAAMC,EADa,EACbA,MACd,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BR,WAAW,2BACNQ,EAAUR,YADL,mBAEPK,EAAOC,S,EAKdI,Q,uCAAU,WAAOP,GAAP,qBAAAjE,EAAA,yDACRiE,EAAGQ,iBADK,EAEoB,EAAK7G,MAAMiG,UAA/BlC,EAFA,EAEAA,MAAOC,EAFP,EAEOA,SACVD,GAAUC,EAHP,yCAIC,EAAKyC,SAAS,CAAET,IAAK,gCAJtB,OAMFpB,EAAY,CAAEb,QAAOC,YACd,EAAKkB,MAAMrC,MAAM+B,GACzBkC,MAAK,SAAA5E,GACP,IAAGA,EAKF,OAAO,EAAKuE,SAAS,CAAET,IAAK,8BAJ5B,EAAKS,SAAS,CAAER,UAAW,CAAElC,MAAO,GAAIC,SAAU,MAClD,EAAKkB,MAAMC,aACX9D,OAAON,SAASqE,OAAO,iBAZnB,2C,wDAmBV2B,S,uCAAW,WAAOV,GAAP,uBAAAjE,EAAA,yDACTiE,EAAGQ,iBADM,EAE6B,EAAK7G,MAAMkG,WAAzCnC,EAFC,EAEDA,MAAOC,EAFN,EAEMA,SAAUgB,EAFhB,EAEgBA,SACpBjB,GAAUC,GAAagB,EAHnB,yCAIA,EAAKyB,SAAS,CAAET,IAAK,8BAJrB,OAMHgB,EAAc,CAAEjD,QAAOC,WAAUgB,YACvC,EAAKE,MAAMnC,OAAOiE,GAClB,EAAKP,SAAS,CAAEP,WAAY,CAAEnC,MAAO,GAAIC,SAAU,GAAIgB,SAAU,MACjE,EAAKE,MAAMC,aACX9D,OAAON,SAASqE,OAAO,cAVd,2C,wDAkBX6B,WAAa,SAAC5G,GACZ,EAAK6E,MAAM+B,WAAW5G,I,EAGxB6G,SAAW,WACT,EAAKT,SAAS,CAAEN,SAAU,EAAKnG,MAAMmG,W,uDAIrC,IAAIgB,EACF,uBAAMC,SAAU5B,KAAKuB,SAAUM,UAAU,mBAAzC,UACE,uBACEA,UAAU,cACVnH,KAAK,OACLqG,KAAK,QACLC,MAAOhB,KAAKxF,MAAMkG,WAAWnC,MAC7BuD,SAAU9B,KAAKmB,mBACfY,YAAY,UAEd,uBACA,uBACEF,UAAU,cACVd,KAAK,WACLrG,KAAK,WACLsG,MAAOhB,KAAKxF,MAAMkG,WAAWlC,SAC7BsD,SAAU9B,KAAKmB,mBACfY,YAAY,aAEd,uBACA,uBACEF,UAAU,cACVnH,KAAK,OACLqG,KAAK,WACLC,MAAOhB,KAAKxF,MAAMkG,WAAWlB,SAC7BsC,SAAU9B,KAAKmB,mBACfY,YAAY,WACZC,UAAU,OAEZ,uBACA,wBAAQH,UAAU,YAAlB,uBAGAI,EACF,uBAAML,SAAU5B,KAAKoB,QAASS,UAAU,kBAAxC,UACE,uBACEA,UAAU,cACVnH,KAAK,OACLqG,KAAK,QACLC,MAAOhB,KAAKxF,MAAMiG,UAAUlC,MAC5BuD,SAAU9B,KAAKY,kBACfmB,YAAY,UAEd,uBACA,uBACEF,UAAU,cACVnH,KAAK,WACLqG,KAAK,WACLC,MAAOhB,KAAKxF,MAAMiG,UAAUjC,SAC5BsD,SAAU9B,KAAKY,kBACfmB,YAAY,aAEd,uBACA,wBAAQF,UAAU,YAAlB,sBAIIrI,EAAiBwG,KAAKN,MAAtBlG,aACR,OACE,eAAC,IAAM0I,SAAP,WACE,cAAC,KAAD,CACEC,gBAAgB,UAChBC,OAAQ,CACNC,UAAW,CACTC,OAAQ,CACNtB,MAAO,IACPuB,QAAS,CACPC,QAAQ,IAGZC,KAAM,CACJzB,MAAO,EACP0B,QAAQ,EACRC,KAAM,CACJC,MAAO,EACPC,SAAU,KAGdC,YAAa,CACXN,QAAQ,GAEVO,KAAM,CACJL,QAAQ,EACRE,MAAO,EACPI,UAAW,MACXC,SAAU,QAGdC,cAAe,CACbC,OAAQ,CACNC,QAAS,CACPZ,QAAQ,EACRa,KAAM,UAERC,QAAS,CACPd,QAAQ,EACRa,KAAM,YAGVE,MAAO,CACLC,OAAQ,CACNC,SAAU,IACVC,SAAU,EACVjB,KAAM,EACNkB,QAAS,GAEXC,QAAS,CACPH,SAAU,IACVC,SAAU,QAKpB,sBAAK7B,UAAU,aAAf,UACA,wBAAQA,UAAU,cAAcgC,QAAS7D,KAAKN,MAAMC,WAApD,eAGE,oBAAIkC,UAAU,cAAd,SACE,sBACEA,UAAS,sBACP7B,KAAKN,MAAMoE,eAAiB,WAAa,IAF7C,UAIE,0CACA,qBAAKjC,UAAU,eAAf,kDAKJ,oBAAIA,UAAU,MAAd,SAAqB7B,KAAKxF,MAAMgG,MAGhC,sBAAKqB,UAAU,YAAf,WAEIrI,GAAgBwG,KAAKxF,MAAMmG,QAAUsB,EAAeN,EACtD,sBAAKE,UAAU,YAAf,oBACM7B,KAAKxF,MAAMmG,QAAU,0BAA4B,IAAM,OAE7D,qBAAKkB,UAAU,eAAf,SACA,cAACxB,GAAD,CAAawB,UAAU,mBAAmBlC,WAAYK,KAAKN,MAAMC,eAEjE,qBAAKkC,UAAU,gBAAgBgC,QAAS7D,KAAK0B,SAA7C,mBACE1B,KAAKxF,MAAMmG,QAAU,cAAgB,gBAIzC,iC,GAlOWR,aAiPfC,GAAqB,CACzB/C,MHhOK,SAAe+B,GACpB,8CAAO,WAAOP,GAAP,eAAAjC,EAAA,+EAEgBkC,EAAYzB,MAAM+B,GAFlC,cAEGhG,EAFH,OAGHyF,EAAS,CAAEnE,KAAM,WAAYtB,SAH1B,kBAIIA,GAJJ,gCAMH4D,QAAQC,IAAI,4BAAZ,MANG,yDAAP,uDGgOAK,SACAC,OHvNK,SAAgB6B,GACrB,8CAAO,WAAOP,GAAP,eAAAjC,EAAA,sEACckC,EAAYvB,OAAO6B,GADjC,OACChG,EADD,OAELyF,EAAS,CAAEnE,KAAM,WAAYtB,SAFxB,2CAAP,uDGuNAqI,WH9OK,SAAoB5G,GACzB,8CAAO,WAAOgE,GAAP,SAAAjC,EAAA,+EAEGkC,EAAYnB,OAAO9C,GAFtB,OAGHgE,EAAS,CAAEnE,KAAM,cAAeG,WAH7B,+CAKHmC,QAAQC,IAAI,iCAAZ,MALG,wDAAP,uDG8OA2B,YACAZ,cAGW+F,GAAQzD,aAhBG,SAAC9F,GACvB,MAAO,CACLf,MAAOe,EAAMpB,KAAKK,MAClBD,aAAcgB,EAAMpB,KAAKI,aACzBE,UAAWc,EAAMD,OAAOb,aAYkB0G,GAAzBE,CAA6CC,ICtQrDyD,GAAb,4MACExJ,MAAQ,CACNyJ,SAAS,GAFb,EAIEtE,WAAa,WACX,EAAKsB,SAAS,CAAEgD,SAAS,IACzB,EAAKvE,MAAMwE,eANf,uDAQY,IACAD,EAAYjE,KAAKxF,MAAjByJ,QACR,OACE,qBACEpC,UAAS,wBAAmBoC,EAAU,GAAK,QAC3CJ,QAAS7D,KAAKL,WAFhB,SAGE,qBAAKkC,UAAU,sBAAsBgC,QAAS,SAAChD,GAAD,OAAQA,EAAGsD,mBAAzD,SACE,cAACJ,GAAD,CAAOpE,WAAYK,KAAKL,qBAflC,GAAgCyE,IAAMjE,WCKzBkE,GAAb,4MACI7J,MAAO,CACH8J,eAAe,GAFvB,EAIIJ,YAAY,WACR,EAAKjD,SAAS,CACVqD,eAAgB,EAAK9J,MAAM8J,iBANvC,EASIhH,OAAO,WACuC,YAAvC,EAAKoC,MAAM6E,QAAQhJ,SAASiJ,UAC3B,EAAK9E,MAAM6E,QAAQE,KAAK,KACxB,EAAK/E,MAAMpC,UAEX,EAAKoC,MAAMpC,UAdvB,EAkBIoH,aAlBJ,sBAkBmB,sBAAA9H,EAAA,sEACL,EAAK8C,MAAM1B,aADN,OAEXnC,OAAON,SAASqE,OAAO,cAFZ,2CAlBnB,uDAwBQ,OACI,sBAAKiC,UAAU,YAAf,UACI,sBAAKA,UAAU,YAAf,WACE7B,KAAKN,MAAMlG,cACb,qBAAKqI,UAAU,2BAA2BgC,QAAS7D,KAAKkE,YAAxD,oBAEClE,KAAKN,MAAMlG,cAAgB,sBAAKqI,UAAU,YAAf,mBAAkC7B,KAAKN,MAAMlG,aAAagG,YACrFQ,KAAKN,MAAMlG,cAAc,qBAAKmL,GAAG,aAAad,QAAS7D,KAAK1C,OAAnC,wBAGxB0C,KAAKN,MAAMlG,cAAe,qBAAKqI,UAAU,YAAf,SAC5B,qBAAKA,UAAU,2BAA2BgC,QAAS7D,KAAK0E,aAAxD,8BAIC1E,KAAKxF,MAAM8J,eAAe,cAAC,GAAD,CAAYJ,YAAalE,KAAKkE,qBAvCzE,GAA2B/D,aAkDrBC,GAAqB,CACvB9C,SACAU,cAES4G,GAAOtE,aAVI,SAAA9F,GACpB,MAAO,CACHhB,aAAcgB,EAAMpB,KAAKI,aACzBC,MAAOe,EAAMpB,KAAKK,SAOmB2G,GAAzBE,CAA6CuE,YAAWR,KC3D/DS,GAAb,uKAEQ,OACI,4CAHZ,GAA2B3E,a,0BCFd4E,GAAe,CACxB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WCrBSC,GAAc,CACvB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KCbG,SAASC,GAAT,GAAwD,IAA9BC,EAA6B,EAA7BA,WAAWC,EAAkB,EAAlBA,gBAAkB,EAEdC,mBAAS,iBAFK,oBAEpDC,EAFoD,KAEnCC,EAFmC,OAGZF,mBAAS,WAHG,oBAGpDG,EAHoD,KAGlCC,EAHkC,OAIdJ,mBAAS,KAJK,oBAIpDK,EAJoD,KAInCC,EAJmC,OAKxBN,oBAAS,GALe,oBAKpDO,EALoD,KAKxCC,EALwC,KAOpDC,EAAUC,mBAChBC,qBAAU,WACNC,YAAW,WACPH,EAAQI,QAAQC,UACjB,KACJ,IAUH,OACA,sBAAKrE,UAAU,uCAAf,UAEI,qBAAKA,UAAU,oBAAf,8BACA,sBACIA,UAAU,iBACVsE,MAAO,CAACC,gBAAgB,GAAD,OAAIb,IAC3B1B,QAAS,WAAK+B,GAAe,IAC7BS,SAAS,IACTC,OAAQ,WAAKV,GAAe,IALhC,UAOIH,GACCE,GAAa,sBAAK9D,UAAU,sBAAf,UACX,8BAAK,cAAC,KAAD,CAAaA,UAAU,4BAC5B,0CAEH8D,GAAa,sBAAK9D,UAAU,4CAAf,UACT,qBAAKA,UAAU,aAAf,8BACA,qBAAKA,UAAU,yBAAf,SACKkD,GAAa/J,KAAI,SAAAuL,GAAK,OACnB,qBAAK1E,UAAU,kBAAkBsE,MAAO,CAACC,gBAAgB,GAAD,OAAIG,IAC3D1C,QAAS,kBAAI2B,EAAqBe,IADnC,SAGMhB,IAAoBgB,GAAO,cAAC,KAAD,WAIzC,qBAAK1E,UAAU,aAAf,kBACA,qBAAKA,UAAU,cAAf,SACKmD,GAAYhK,KAAI,SAAAwL,GAAI,OACjB,qBAAK3E,UAAU,OACfsE,MAAO,CAACC,gBAAgB,GAAD,OAAIb,IAC1B1B,QAAS,kBAAI6B,EAAoBc,IAFlC,SAIIA,eAMpB,qBAAK3E,UAAU,4BAAf,4BACA,uBACIA,UAAU,iBACVnH,KAAK,OACLsG,MAAOqE,EACPvD,SAjDgB,SAACjB,GACrByE,EAAoBzE,EAAGC,OAAOE,QAiD1ByF,QAvDU,WACdT,YAAW,WACPU,SAASC,YAAY,aAAa,EAAO,QAC1C,IAqDCC,IAAKf,EACLgB,UAAW,SAAChG,GACR,GAAe,UAAXA,EAAGiG,IAAiB,CACpB,GAAGzB,EAAiBpG,OAAO,EAAE,OAC7BkG,EAAgBE,EAAiBE,EAAkBE,GACnDP,GAAW,OAIvB,sBAAKrD,UAAU,iBAAf,UACI,qBAAKA,UAAU,aAAagC,QAAU,WAAKqB,GAAW,IAAtD,oBACA,qBAAKrD,UAAU,UAAUgC,QAAS,WAC/BwB,EAAiBpG,OAAO,IAC3BkG,EAAgBE,EAAiBE,EAAkBE,GACnDP,GAAW,KAHX,oC,aCpFL,SAAS6B,GAAT,GAA4C,IAAvB7B,EAAsB,EAAtBA,WAAW8B,EAAW,EAAXA,SACnC,OACI,qBAAKnF,UAAS,gBAAd,SACI,sBAAKA,UAAU,gBAAgBgC,QAAU,SAAChD,GAAD,OAAQA,EAAGsD,mBAApD,UACI,qBAAKtC,UAAU,oBAAoBgC,QAAU,WAAKqB,GAAW,IAA7D,SAAuE,cAAC,KAAD,CAAgBrD,UAAU,WAChGmF,O,+BCJV,SAASC,GAAT,GAAkC,IAAZnM,EAAW,EAAXA,UAEnB+D,EAAWqI,cACX1N,EAAe2N,aAAY,SAAA3M,GAAK,OAAIA,EAAMpB,KAAKI,gBAHjB,EAIN4L,mBAAS5L,EAAa4N,iBAAiBC,SAASvM,EAAUF,MAJpD,oBAI7B0M,EAJ6B,KAIpBC,EAJoB,KAYpC,SAASC,EAAazM,GAClBuM,EAcJ,SAAwBvM,GACpB,IAAMkD,EAAQ,2BACPzE,GADM,IAET4N,iBAAiB5N,EAAa4N,iBAAiBzM,QAAO,SAAAgK,GAAE,OAAEA,IAAK5J,OAEnE8D,EAASE,EAAWd,IAnBZwJ,CAAe1M,GAG3B,SAAsBA,GAClB,IAAMkD,EAAQ,2BACPzE,GADM,IAET4N,iBAAiB,GAAD,mBACT5N,EAAa4N,kBADJ,CAEZrM,MAGR8D,EAASE,EAAWd,IAXgByJ,CAAa3M,GAsBrD,OA5BAgL,qBAAU,WACNwB,EAAW/N,EAAa4N,iBAAiBC,SAASvM,EAAUF,QAC7D,CAACE,EAAUtB,EAAa4N,mBA2BvB,uBAAO1M,KAAK,WACJmH,UAAU,WACV8F,eAAgBL,EAChBxF,SAAU,kBAAI0F,EAAa1M,EAAUF,QCvC9C,SAASgN,GAAT,GAMJ,IALCC,EAKF,EALEA,aACAC,EAIF,EAJEA,OACAC,EAGF,EAHEA,WACAC,EAEF,EAFEA,OACAC,EACF,EADEA,UAGMtO,EAAawN,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUnB,cAClDC,EAAgBuN,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUlB,iBAH7D,EAIkDwL,mBACnC,iBAAT0C,EACAnO,EACAA,EAAWgB,QAAO,SAAAG,GAAS,OAAEA,EAAUF,MAAMhB,EAAcgB,QAPjE,oBAISsN,EAJT,KAI2BC,EAJ3B,KAgBE,OAPApC,qBAAU,WAENoC,EADS,iBAATL,GAAyBC,EACLpO,EAEhBA,EAAWgB,QAAO,SAAAG,GAAS,OAAEA,EAAUF,MAAMhB,EAAcgB,UAEhE,CAAChB,EAAcD,EAAWmO,EAAOC,IAEhC,gCACI,uBAAOrN,KAAK,SAASqH,YAAY,mBAAmBF,UAAU,6BAC9DC,SAAU,SAACsG,GAAD,OAAOH,EAAUG,EAAEtH,OAAOE,UAEhCkH,EAAiBlN,KAAI,SAAAF,GAAS,OAC1BA,EAAUiG,KAAKsH,cAAchB,SAASW,EAAOK,eAC7C,sBACAxG,UAAS,uDAAkDkG,EAAW,iBAAiB,IAEvFlE,QAAS,WACFkE,GAGHF,EAAa/M,IAPjB,UAUI,gCACI,qBACA+G,UAAU,iBACVsE,MAAO,CAACC,gBAAgBtL,EAAUyL,OAFlC,SAGEzL,EAAUwN,MACZ,sBAAOzG,UAAU,iBAAjB,SAAmC/G,EAAUiG,UAEjDgH,GACD,cAACd,GAAD,CAAanM,UAAWA,MAhBtBA,EAAUF,KAoBf,WCpDb,SAAS2N,GAAT,GAKH,IAJAvB,EAID,EAJCA,SAASwB,EAIV,EAJUA,IAAIC,EAId,EAJcA,gBAAgBC,EAI9B,EAJ8BA,cAC7BC,EAGD,EAHCA,wBAAwBC,EAGzB,EAHyBA,sBACxBC,EAED,EAFCA,SAASC,EAEV,EAFUA,aAAab,EAEvB,EAFuBA,UAEvB,EAC+B7C,oBAAS,GADxC,oBACQnB,EADR,KACiBiB,EADjB,KAOC,OAJAa,qBAAU,WACN4C,EAAwB1E,KACzB,CAACA,EAAQ0E,IAGR,sBAAK9G,UAAU,4BACfkH,YAAa,kBAAI7D,GAAW,IAC5B8D,aAAc,WACV9D,GAAW,GACRwD,GACCD,EAAgB,OAEnBI,GAAUC,IAAeb,EAAU,KAPxC,UAUG,sBACApG,UAAS,uDAAkDoC,EAAQ,aAAa,GAAvE,KADT,UAGMuE,EACF,cAAC,KAAD,CAAmB3G,UAAU,YAGzBoC,GACA,qBACApC,UAAS,8BAAyB+G,EAAsB,mBAAmB,gBAAlE,gCACPC,GAAUC,EAAa,aAAa,GAD7B,yBADT,SAKM9B,OChClB,SAASiC,GAAT,GAMJ,IALC/D,EAKF,EALEA,WACAgE,EAIF,EAJEA,6BACAP,EAGF,EAHEA,wBACAQ,EAEF,EAFEA,gBACAC,EACF,EADEA,SACF,EAE8BhE,mBAAS,IAFvC,oBAES4C,EAFT,KAEiBC,EAFjB,KAIE,OACA,sBAAKpG,UAAU,+DAAf,UACI,sBAAKA,UAAU,6BAA6BwH,YAAa,WACrDnE,GAAW,GACXgE,GAA6B,IAFjC,UAKI,cAAC,KAAD,CAAuBrH,UAAU,SAClC,wDAEH,eAAC0G,GAAD,CACAC,IAAK,gCACG,cAAC,KAAD,CAAW3G,UAAU,SACrB,qDAGR8G,wBAAyBA,EACzBE,UAAU,EACVZ,UAAWA,EARX,UAUI,qBAAKpG,UAAU,sBAAf,6CACA,cAAC+F,GAAD,CACAG,YAAc,EACdC,OAAQA,EACRC,UAAWA,OAGf,sBAAKpG,UAAU,6BACdwH,YAAa,WACVF,IACAD,GAA6B,IAHjC,UAMI,cAAC,KAAD,CAAerH,UAAU,SACzB,sDAAkBuH,EAAS,UAAU,gBAArC,kBC7CL,SAASE,GAAT,GAAuH,IAAhGC,EAA+F,EAA/FA,YAAaC,EAAkF,EAAlFA,OAAQC,EAA0E,EAA1EA,YAAaC,EAA6D,EAA7DA,0BAA0BvE,EAAmC,EAAnCA,gBAAgBwE,EAAmB,EAAnBA,iBAChGC,EAAgBzC,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUnB,cACrDH,EAAe2N,aAAY,SAAA3M,GAAK,OAAIA,EAAMpB,KAAKI,gBAFoE,EAGtF4L,mBAASwE,EAAcjP,QACtD,SAAAG,GAAS,OAAEtB,EAAa4N,iBAAiBC,SAASvM,EAAUF,SAJyD,oBAGlHjB,EAHkH,KAGvGkQ,EAHuG,KAMnHjQ,EAAgBuN,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUlB,iBAN8D,EAOvFwL,mBAASxL,EAAcgB,KAPgE,oBAOlHkP,EAPkH,KAOvGC,EAPuG,OAQ7E3E,qBAR6E,oBAQlH4E,EARkH,KAQlGC,EARkG,OAS3F7E,oBAAS,GATkF,oBASlHnB,EATkH,KASzGiB,EATyG,OAUvDE,oBAAS,GAV8C,oBAUlH8E,EAVkH,KAUvFhB,EAVuF,OAWzD9D,oBAAS,GAXgD,oBAWlH+E,EAXkH,KAWxFC,EAXwF,KAYnHC,EAAQvE,mBAZ2G,EAazFV,oBAAS,GAbgF,oBAalHgE,EAbkH,KAaxGkB,EAbwG,OAc3ElF,oBAAS,GAdkE,oBAclHmF,EAdkH,KAcjGC,EAdiG,KAgBzHzE,qBAAU,WACN8D,EAAcD,EAAcjP,QACxB,SAAAG,GAAS,OAAEtB,EAAa4N,iBAAiBC,SAASvM,EAAUF,WAEjE,CAACpB,EAAaA,EAAa4N,iBAAiBwC,IAE/C7D,qBAAU,WACNgE,EAAanQ,EAAcgB,OAC5B,CAAChB,EAAcD,IAElBoM,qBAAU,WACNkE,EAAkBH,GAClBH,EAAiBG,KAClB,CAACA,EAAUH,IAEd5D,qBAAU,WACFoE,GAMAnE,YAAW,WACJqE,GAAOA,EAAMpE,SACZoE,EAAMpE,QAAQC,UAEnB,KAER,CAACiE,IAqBJ,OAXApE,qBAAU,WACN,GAAGqD,EAAS,CACR,IAAIqB,EAAK,YAAO9Q,GAChB8Q,EAAMC,MAAK,SAAC9N,EAAG+N,GAAJ,OAAU/N,EAAEmE,KAAK6J,cAAcD,EAAE5J,SAC5CyJ,EAAmBC,QAEnBD,EAAmB7Q,KAExB,CAACyP,EAASzP,IAGR4Q,EAEL,sBAAK1I,UAAU,gBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,cAAC0H,EAAD,CACA1H,UAAS,uBAAmC,cAAjBmI,EAA6B,WAAW,IACnEnG,QAAS,kBAAIkG,EAAa,gBAE1B,sBAAMlI,UAAU,aAAhB,6BAEJ,sBAAKA,UAAU,eAAf,UACI,cAAC2H,EAAD,CACA3H,UAAS,uBAAmC,aAAjBmI,EAA4B,WAAW,IAClEnG,QAAS,kBAAIkG,EAAa,eAE1B,sBAAMlI,UAAU,aAAhB,gCAGA0I,EAAgBvP,KAAI,SAACF,EAAU+P,GAAX,OAChB,qBACAhJ,UAAS,4BAAuBmI,IAAiBlP,EAAUF,IAAI,WAAW,IAC1EiJ,QAAS,kBAAIkG,EAAajP,EAAUF,MAFpC,SAII,qBACAiH,UAAU,iBACVgC,QAAS,kBAAI6F,EAA0B5O,IACvCqL,MAAO,CAACC,gBAAgBtL,EAAUyL,OAHlC,SAIEzL,EAAUwN,OARNxN,EAAUF,WAahC,sBAAKiH,UAAU,oBAAf,UACI,qBAAKA,UAAU,eACfwE,SAAS,IACTxC,QAAS,WAAKqF,GAA6B,SAAA4B,GAAI,OAAGA,MAClDxE,OAAQ,WACJ4C,EAA6BiB,IAEjCvD,IAAKyD,EANL,SAQI,cAACZ,EAAD,CACA5H,UAAS,uBAAkBqI,EAA0B,WAAW,QAInEA,GACG,cAACjB,GAAD,CACAC,6BAA8BA,EAC9BhE,WAAYA,EACZyD,wBAtEkB,SAACoC,GAC3BX,EAA4BW,IAsEpB5B,gBAnEZ,WACImB,GAAY,SAAAQ,GAAI,OAAGA,MAmEX1B,SAAUA,OAIjBnF,GAAS,cAAC8C,GAAD,CAAY7B,WAAYA,EAAxB,SACN,cAACD,GAAD,CAAiBC,WAAYA,EAAYC,gBAAiBA,SA1DrC,8C,sBCrEpB6F,GAAmB,CAC5BC,SACAvN,QAiBJ,SAAiB3C,GACb,OAAO0C,EAAA,oBAA6B1C,KAjBpCmQ,KAoBJ,SAAcpQ,GACV,OAAO2C,EAAA,oBAA6B3C,EAAUF,KAAOE,IApBrD6C,OAwBJ,SAAgB5C,GACZ,OAAO0C,EAAA,oBAAgC1C,KAxBvCoQ,I,6CACAC,SA4CJ,SAAkB3P,GACf,IAAItB,EAAkBkR,KAEtB,OADAlR,EAAe,sBAAOA,GAAP,CAAwBsB,KA7CtC6P,UAgDJ,SAAmB7P,GACf,IAAItB,EAAkBkR,KAEtB,OADAlR,EAAgBa,KAAI,SAAAU,GAAK,OAAEA,EAAMd,MAAMa,EAASb,IAAIa,EAASC,KACtDvB,GAlDPoR,YAoDJ,SAAqB5P,GACjB,IAAIxB,EAAkBkR,KAEtB,OADAlR,EAAkBA,EAAgBQ,QAAO,SAAAe,GAAK,OAAEA,EAAMd,MAAMe,OAjDhE,SAASsP,GAAMO,GAGX,OAAO/N,EAAgB,a,8CAgB3B,WAAmB3C,GAAnB,eAAA8B,EAAA,sEACkCa,EAAiB,YAAa3C,GADhE,cACU2Q,EADV,yBAEYA,GAFZ,4C,oEAMA,8BAAA7O,EAAA,sEAC6BqO,KAD7B,cACUtR,EADV,gBAG4BA,EAAWqB,KAAI,SAAAF,GAAS,OAAEA,EAAUjB,OAAOc,QAAO,SAAAT,GAAK,OAAqB,IAAnBA,EAAMwR,iBAAoB,GAH/G,cAGU5R,EAHV,yBAIWA,GAJX,4C,sBAOA,SAASuR,KAGN,O,2CAFcM,GAEDxR,gBC/CT,SAASyR,GAAeJ,GAE3B,8CAAO,WAAM3M,GAAN,eAAAjC,EAAA,sEAECiC,EhBNH,CAAEnE,KAAM,kBgBIN,SAG0BsQ,GAAiBC,MAAMO,GAHjD,OAGO7R,EAHP,OAICkF,EAAS,CAAEnE,KAAM,iBAAkBf,eAJpC,gDAMCqD,QAAQC,IAAI,0CAAZ,MAND,yBAQC4B,EhBTH,CAAEnE,KAAM,iBgBCN,4EAAP,sDAyBG,SAASmR,GAAgB/Q,GAC5B,8CAAO,WAAM+D,GAAN,SAAAjC,EAAA,+EAEOoO,GAAiBE,KAAKpQ,GAF7B,OAGC+D,EAAS,CAAEnE,KAAM,mBAAoBI,cAHtC,+CAKCkC,QAAQC,IAAI,2CAAZ,MALD,wDAAP,sDAsBG,SAAS6O,GAAoBhR,GAChC,8CAAO,WAAO+D,GAAP,SAAAjC,EAAA,sDACL,IACEiC,EAAS,CAAEnE,KAAM,wBAAyBI,cAC1C,MAAOiR,GACP/O,QAAQC,IAAI,+CAAgD8O,GAJzD,2CAAP,sDAkBG,SAASC,GAAuBzQ,GACrC,8CAAO,WAAOsD,GAAP,SAAAjC,EAAA,sDACL,IACEiC,EAAS,CAAEnE,KAAM,2BAA4Ba,aAC7C,MAAOwQ,GACP/O,QAAQC,IAAI,kDAAmD8O,GAJ5D,2CAAP,sDAyDK,SAASE,GAAgB/R,GAC5B,8CAAO,WAAM2E,GAAN,SAAAjC,EAAA,sDACH,IACIiC,EAAS,CAAEnE,KAAM,eAAgBR,UACpC,MAAM6R,GACH/O,QAAQC,IAAI,wCAAyC8O,GAJtD,2CAAP,sDC/HG,SAASG,GAAT,GAIJ,IAHCC,EAGF,EAHEA,oBACAnE,EAEF,EAFEA,OACAC,EACF,EADEA,UAEMtO,EAAawN,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUnB,cAExD,OACI,gCACK,uBAAOe,KAAK,SAASqH,YAAY,gBAAiBF,UAAU,6BAC5DC,SAAU,SAACsG,GAAD,OAAOH,EAAUG,EAAEtH,OAAOE,UAEjCrH,EAAWqB,KAAI,SAAAF,GAAS,OACpBA,EAAUsR,QAAQpR,KAAI,SAAAqR,GAAM,OACxBA,EAAOtL,KAAKsH,cAAchB,SAASW,EAAOK,eAC1C,sBACIxG,UAAU,mCAIVgC,QAAS,kBAAIsI,EAAoBrR,EAAUuR,IAL/C,UAOI,cAAC,KAAD,CAAiBxK,UAAU,SAC3B,+BAAOwK,EAAOtL,SAJTsL,EAAOzR,KAOhB,cCjBjB,SAAS0R,GAAT,GAWH,IAVApS,EAUD,EAVCA,MACAqS,EASD,EATCA,sBACAC,EAQD,EARCA,kBACAC,EAOD,EAPCA,YACAC,EAMD,EANCA,UACAC,EAKD,EALCA,UACAC,EAID,EAJCA,kBACA9E,EAGD,EAHCA,OACA+E,EAED,EAFCA,OACAC,EACD,EADCA,IAGMnT,EAAawN,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUnB,cAClDG,EAAYqN,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUhB,aACjDN,EAAe2N,aAAY,SAAA3M,GAAK,OAAIA,EAAMpB,KAAKI,gBAJtD,EAKqC4L,mBAAS,MAL9C,oBAKQ2H,EALR,KAKoBC,EALpB,OAM2C5H,mBAAS,MANpD,oBAMuB6H,GANvB,WAOOC,EAAWpH,iBAAO,MAPzB,EAQ6BV,mBAAS,IARtC,oBAQQ4C,EARR,KAQgBC,EARhB,KASOpJ,EAAWqI,cAEXiG,EAAmB,WACrB,IF0B6BrS,EE1BzBsS,EAAe,KACnBzT,EAAW0T,SAAQ,SAAAvS,GAAS,OACxBA,EAAUjB,OAAOwT,SAAQ,SAAAC,GACfA,EAAO1S,MAAMV,EAAMU,MACrBwS,EAActS,SAMtBsS,GACAzT,EAAW0T,SAAQ,SAAAvS,GAAS,OACxBA,EAAUsR,QAAQiB,SAAQ,SAAAhB,GAAM,OAC5BA,EAAOxS,OAAOwT,SAAQ,SAAAC,GAEXA,EAAO1S,MAAMV,EAAMU,MAClBwS,EAActS,YAOtCmS,EAAiBG,GACjBvO,GFE6B/D,EEFCsS,EFGlC,uCAAO,WAAOvO,GAAP,SAAAjC,EAAA,sDACL,IACEiC,EAAS,CAAEnE,KAAM,yBAA0BI,cAC3C,MAAOiR,GACP/O,QAAQC,IAAI,gDAAiD8O,GAJ1D,2CAAP,yDEQAhG,qBAAU,WAPViH,EAAcE,GAAYA,EAASjH,QAC/BiH,EAASjH,QAAQsH,wBAAwBC,OAAO,IAAhD,2BACQN,EAASjH,QAAQsH,yBADzB,IACiDC,OAAON,EAASjH,QAAQsH,wBAAwBC,OAAO,MAClGN,EAASjH,QAAQsH,wBACrB,MAKH,CAACV,IAEJ9G,qBAAU,WACN0H,EAAavT,EAAM6G,QACpB,CAAC7G,IArDL,MAuDuCkL,oBAAS,GAvDhD,oBAuDQO,EAvDR,KAuDqBC,EAvDrB,OAwDyCR,oBAAS,GAxDlD,oBAwDQsI,EAxDR,KAwDsBC,EAxDtB,OAyDmCvI,mBAASlL,EAAM6G,MAzDlD,oBAyDQ6M,EAzDR,KAyDmBH,EAzDnB,OA0DyCrI,mBAAS,MA1DlD,oBA0DQ0D,EA1DR,KA0DsBL,EA1DtB,KA2DO5C,EAAUC,mBA3DjB,EA6DuEV,oBAAS,GA7DhF,oBA6DQyI,EA7DR,KA6DqCC,GA7DrC,KA6FC/H,qBAAU,WACF8H,GACA7H,YAAW,WACLkH,GAAUA,EAASjH,SACrBiH,EAASjH,QAAQC,UAElB,KAER,CAAC2H,IAMJ,OAAK3T,EAEL,sBACA2H,UAAS,8BACP8D,EAAY,aAAa,GADlB,kBAEP+H,EAAa,iBAAiB,GAFvB,iBAGP5T,EAAUc,MAAMV,EAAMU,IAAI,SAAS,GAH5B,UAKRiJ,QAAS,kBACN0I,EAAsBrS,IAEzBmM,SAAS,IACTC,OAAQ,WACJV,EAAeiI,IAEnBjH,IAAKsG,EAbN,UAeI,sBAAKrL,UAAU,eAAf,UACI,cAAC2K,EAAD,CAAmB3K,UAAS,eAAU6L,EAAa,iBAAiB,MACnEA,EACG,uBACA7L,UAAU,0BACVnH,KAAK,OACLsG,MAAO4M,EACP9L,SA/DZ,SAA0BjB,GACtB4M,EAAa5M,EAAGC,OAAOE,QA+Df4F,IAAKf,EACLS,OAAQ,WACJqH,GAAgB,GA/DhC,WACI,IAAMxS,EAAQ,2BACPjB,GADO,IAEV6G,KAAK6M,IAET/O,EAASoN,GAAgB9Q,IACzBuR,EAAUvR,GA0DE4S,IAEJlH,UAAW,SAAChG,GACO,UAAXA,EAAGiG,KACHjG,EAAGC,OAAOkN,UAKlB,sBACAC,MAAOL,EAAU3O,OAAO,GAAG2O,EAAU,GACrC/L,UAAS,UAAK+L,EAAU3O,OAAO,GAAG,sBAAsB,IAFxD,SAIK2O,OAIb,cAAC,KAAD,CAAa/L,UAAS,sBAAiB6L,EAAa,OAAO,IAAM7J,QAAS,SAAChD,GACvEsM,IACGD,EAASjH,QAAQsH,wBAAwBC,OAAO,IAC/CR,EAAc,2BAAIE,EAASjH,QAAQsH,yBAAtB,IAA8CC,OAAON,EAASjH,QAAQsH,wBAAwBC,OAAO,OAC7GN,EAASjH,QAAQsH,wBAAwBC,OAAO,IAEjDR,EADDF,EACe,2BAAII,EAASjH,QAAQsH,yBAAtB,IAA8CC,OAAON,EAASjH,QAAQsH,wBAAwBC,OAAO,EAAE,MAEtG,2BAAIN,EAASjH,QAAQsH,yBAAtB,IAA8CC,OAAON,EAASjH,QAAQsH,wBAAwBC,OAAO,KAGtHR,EAAcE,EAASjH,QAAQsH,yBApG3C,SAAqB1M,GACjBA,EAAGsD,kBACHyB,GAAe,SAAAkF,GAAI,OAAGA,KAoGlBoD,CAAYrN,GACX7D,QAAQC,IAAIiQ,EAASjH,QAAQsH,4BAGlC5H,GACA,sBAAK9D,UAAU,6DACfsE,MAAO,CAACgI,IAAI,GAAD,OAAKpB,EAAWA,EAAWS,OAAO,IAAI,EAAtC,OADX,UAGY,sBAAM3L,UAAU,6BAA6BgC,QAAS,WAClD+B,GAAe,GACf+H,GAAgB,GAChB3H,YAAW,WACPH,EAAQI,QAAQC,UACjB,IALP,UAOI,cAAC,KAAD,CAAUrE,UAAU,SACpB,mDAEJ,sBAAKA,UAAU,6BAA6BgC,QAhG7B,WAC3BhF,EAASG,GAAuBxF,EAAaU,EAAMU,MACnDgL,GAAe,IA8FH,UACI,cAAC,KAAD,CAAe/D,UAAU,SACzBrI,EAAakF,UAAU2I,SAASnN,EAAMU,KAAM,yDAC5C,uDAEJ,eAAC2N,GAAD,CACAC,IAAK,gCACG,cAAC,KAAD,CAA6B3G,UAAU,SACvC,8CAGR4G,gBAAiBA,EACjBC,eAAe,EACfC,wBA5Fc,SAACoC,GAC3B+C,GAA+B/C,IA4FnBjC,aAAcA,EACdb,UAAWA,EAVX,WAYMa,GAAc,sBAAKjH,UAAU,+CAA+CgC,QAAS,WAAK4E,EAAgB,WAA5F,UACZ,cAAC,KAAD,CAA6B5G,UAAU,SACvC,sDAEFiH,GAAc,sBAAKjH,UAAU,6BAA6BgC,QAAS,WAAK4E,EAAgB,cAA1E,UACZ,cAAC,KAAD,CAA6B5G,UAAU,SACvC,wDAEFiH,GAAc,8BACZ,sBAAKjF,QAAS,WAAK4E,EAAgB,OAAQ5G,UAAU,sBAArD,UACI,0CAAaiH,KACb,qBAAMjH,UAAU,6BAAhB,uBAGQ,cAAfiH,GAA6B,cAAClB,GAAD,CAC1BC,aAxIxB,SAAqB/M,GACjB6R,EAAU7R,EAAUZ,GACpB0L,GAAe,IAuIKkC,OAAQA,EACRE,OAAQA,EACRC,UAAWA,IAEC,WAAfa,GAAyB,cAACoD,GAAD,CAAsBC,oBAzIpE,SAA6BrR,EAAUuR,GACnCO,EAAkB9R,EAAUuR,EAAOnS,GACnC0L,GAAe,IAwICoC,OAAQA,EACRC,UAAWA,OAGf,qBAAKpG,UAAU,qBAAf,SACI,sBAAKA,UAAU,6BAA6BgC,QAAS,WACjD4I,EAAYvS,EAAMU,KAClBgL,GAAe,IAFnB,UAII,cAAC,KAAD,CAAU/D,UAAU,SACpB,qDA5HL,6CC/HhB,SAASuM,GAAT,GAWH,IAVAvU,EAUD,EAVCA,OACA0S,EASD,EATCA,sBACAC,EAQD,EARCA,kBACAC,EAOD,EAPCA,YACAC,EAMD,EANCA,UACAC,EAKD,EALCA,UACAC,EAID,EAJCA,kBACA9E,EAGD,EAHCA,OACA+E,EAED,EAFCA,OACAC,EACD,EADCA,IAKA,OAAKjT,EAEH,mCACEA,EAAOmB,KAAI,SAACd,EAAMmU,GAAP,OACL,cAAC/B,GAAD,CACApS,MAAOA,EACPqS,sBAAuBA,EACvBC,kBAAmBA,EACnB/C,YAAaA,KACbgD,YAAaA,EACbC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnB9E,OAAQA,EACR+E,OAAQA,EACRC,IAAKA,SAfK,6CCjBjB,SAASwB,GAAT,GAAgD,IAA1BpJ,EAAyB,EAAzBA,WAAWqJ,EAAc,EAAdA,YAAc,EAEdnJ,mBAAS,aAFK,oBAE5CoJ,EAF4C,KAE/BC,EAF+B,KAG5C5I,EAAUC,mBAChBC,qBAAU,WACNC,YAAW,WACPH,EAAQI,QAAQC,UACjB,KACJ,IASH,OACA,sBAAKrE,UAAU,sBAAf,UACI,qBAAKA,UAAU,oBAAf,0BACA,uBACIA,UAAU,iBACVnH,KAAK,OACLsG,MAAOwN,EACP1M,SAVgB,SAACjB,GACrB4N,EAAgB5N,EAAGC,OAAOE,QAUtByF,QAhBU,WACdT,YAAW,WACPU,SAASC,YAAY,aAAa,EAAO,QAC1C,IAcCC,IAAKf,EACLgB,UAAW,SAAChG,GACR,GAAe,UAAXA,EAAGiG,IAAiB,CACpB,GAAG0H,EAAavP,OAAO,EAAE,OACzBsP,EAAYC,GACZtJ,GAAW,OAIvB,sBAAKrD,UAAU,iBAAf,UACI,qBAAKA,UAAU,aAAagC,QAAU,WAAKqB,GAAW,IAAtD,oBACA,qBAAKrD,UAAU,UAAUgC,QAAS,WAC/B2K,EAAavP,OAAO,IACvBsP,EAAYC,GACZtJ,GAAW,KAHX,gCC3BL,SAASwJ,GAAT,GAkBH,IAjBArC,EAiBD,EAjBCA,OACAsC,EAgBD,EAhBCA,kBACAnC,EAeD,EAfCA,kBACAD,EAcD,EAdCA,sBACAqC,EAaD,EAbCA,iBACAC,EAYD,EAZCA,aACAC,EAWD,EAXCA,aACArC,EAUD,EAVCA,YACAC,EASD,EATCA,UACAqC,EAQD,EARCA,WACApC,EAOD,EAPCA,UACAC,EAMD,EANCA,kBACAC,EAKD,EALCA,OACAwB,EAID,EAJCA,MACAW,EAGD,EAHCA,mBACAC,EAED,EAFCA,uBACA7C,EACD,EADCA,QACD,EACyChH,oBAAS,GADlD,oBACQ8J,EADR,KACsBC,EADtB,OAEuC/J,oBAAS,GAFhD,oBAEQO,EAFR,KAEqBC,EAFrB,OAGmDR,oBAAS,GAH5D,iCAIyCA,oBAAS,IAJlD,oBAIQsI,EAJR,KAIsBC,EAJtB,OAKqCvI,mBAASiH,EAAOtL,MALrD,oBAKQqO,EALR,KAKoBC,EALpB,OAM+BjK,oBAAS,GANxC,oBAMQnB,EANR,KAMiBiB,EANjB,KAOOW,EAAUC,mBAPjB,EASqCV,mBAAS,MAT9C,oBASQ2H,EATR,KASoBC,EATpB,KAUOsC,EAAYxJ,iBAAO,MAV1B,EAYuEV,oBAAS,GAZhF,oBAYQyI,EAZR,KAYqCC,EAZrC,OAc6B1I,mBAAS,IAdtC,qBAcQ4C,GAdR,MAcgBC,GAdhB,MAwBClC,qBAAU,WACHsI,IAAQjC,EAAQnN,OAAO,GAAG+P,IACzBrB,GAAgB,GAChB3H,YAAW,WACPH,EAAQI,QAAQC,UACjB,MAER,CAACmI,EAAMjC,EAAQnN,OAAO+P,IAGzBjJ,qBAAU,WAjBViH,EAAcsC,GAAaA,EAAUrJ,QACjCqJ,EAAUrJ,QAAQsH,wBAAwBC,OAAO,IAAjD,2BACQ8B,EAAUrJ,QAAQsH,yBAD1B,IACkDC,OAAO8B,EAAUrJ,QAAQsH,wBAAwBC,OAAO,MACpG8B,EAAUrJ,QAAQsH,wBACtB,MAeH,CAACV,IAEJ9G,qBAAU,WACNsJ,EAAchD,EAAOtL,QACtB,CAACsL,IAiCJtG,qBAAU,WACF8H,GACA7H,YAAW,WACLsJ,GAAWA,EAAUrJ,SACvBqJ,EAAUrJ,QAAQC,UAEnB,KAER,CAAC2H,IAOJ,OAAKxB,EAED,qCACA,gCACI,sBACIxK,UAAS,6DAEP8D,EAAY,aAAa,GAFlB,8BAGP+H,EAAa,iBAAiB,IAChCrH,SAAW2I,EAAyB,KAAJ,EAChC1I,OAAQ,WACJV,EAAeiI,IAEnBjH,IAAK0I,EATT,UAWG,sBACCzL,QA/DS,WACjBsL,GAAgB,SAAAlJ,GAAO,OAAKA,MA+DpBpE,UAAU,eAFX,UAIMqN,EACG,cAACP,EAAD,CAAmB9M,UAAS,eAAU6L,EAAa,iBAAiB,MACpE,cAAC,KAAD,CAAoB7L,UAAS,eAAU6L,EAAa,iBAAiB,MAExEA,EACG,uBACA7L,UAAU,2BACVnH,KAAK,OACLsG,MAAOoO,EACPtN,SAlEpB,SAA0BjB,GACtBwO,EAAcxO,EAAGC,OAAOE,QAkER4F,IAAKf,EACLS,OAAQ,WACJqH,GAAgB,GAlExC,WACI,IAAM4B,EAAS,2BACRlD,GADQ,IAEXtL,KAAKqO,IAETN,EAAaS,GA8DOC,GACAP,KAEJpI,UAAW,SAAChG,GACO,UAAXA,EAAGiG,KACHjG,EAAGC,OAAOkN,UAKlB,sBACAC,MAAOmB,EAAWnQ,OAAO,GAAGmQ,EAAW,GACvCvN,UAAS,UAAKuN,EAAWnQ,OAAO,GAAG,uBAAuB,IAF1D,SAGEmQ,OAGX,cAAC,KAAD,CAAavN,UAAS,sBAAiB6L,EAAa,OAAO,IAAO7J,QAAS,SAAChD,GACrEyO,EAAUrJ,QAAQsH,wBAAwBC,OAAO,IAC/CR,EAAc,2BAAIsC,EAAUrJ,QAAQsH,yBAAvB,IAA+CC,OAAO8B,EAAUrJ,QAAQsH,wBAAwBC,OAAO,OAEpHR,EAAcsC,EAAUrJ,QAAQsH,yBAhGpD,SAAqB1M,GACjBA,EAAGsD,kBACHyB,GAAe,SAAAkF,GAAI,OAAGA,KAgGXoD,CAAYrN,MAGhB8E,GACA,sBAAK9D,UAAU,+DACfsE,MAAO,CAACgI,IAAI,GAAD,OAAKpB,EAAWA,EAAWS,OAAO,IAAI,EAAtC,OADX,UAGK,sBAAK3L,UAAU,6BAA6BgC,QAAS,WAEjDqB,GAAW,GACXU,GAAe,IAHnB,UAKI,cAAC4G,EAAD,CAAmB3K,UAAU,SAC7B,6DAEJ,sBAAMA,UAAU,6BAA6BgC,QAAS,WAClD+B,GAAe,GACf+H,GAAgB,GAChB3H,YAAW,WACPH,EAAQI,QAAQC,UACjB,IALP,UAOI,cAAC,KAAD,CAAUrE,UAAU,SACpB,oDAEJ,cAAC0G,GAAD,CACAC,IAAK,gCACG,cAAC,KAAD,CAA6B3G,UAAU,SACvC,wDAGR8G,wBA1Fc,SAACoC,GAC3B+C,EAA+B/C,IA0FnBlC,UAAU,EACVZ,UAAWA,GARX,SAUI,cAACL,GAAD,CACAC,aAlHpB,SAAsB/M,GAClBiU,EAAWjU,EAAUuR,GACrBzG,GAAe,IAiHCoC,OAAQA,GACRC,UAAWA,OAGf,qBAAKpG,UAAU,qBAAf,SACI,sBAAKA,UAAU,6BAA6BgC,QAAS,WACjDgL,EAAaxC,EAAOzR,KACpBgL,GAAe,IAFnB,UAII,cAAC,KAAD,CAAU/D,UAAU,SACpB,4DAKfqN,GACA,qBAAKrN,UAAU,kBAAf,SACCwK,EAAOxS,OAAOoF,OAAO,GACnB,cAACmP,GAAD,CACKvU,OAAQwS,EAAOxS,OACf0S,sBAAuBA,EACvBC,kBAAmBA,EACnBC,YAAaA,EACbC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnB9E,OAAO,eACP+E,OAAQA,KAXsBR,EAAOzR,OAxGxCyR,EAAOzR,KA4HhBqJ,GAAS,cAAC8C,GAAD,CAAY7B,WAAYA,EAAxB,SACN,cAACoJ,GAAD,CAAaC,YAnJrB,SAAqBX,GACjBgB,EAAiBvC,EAAOuB,IAkJmB1I,WAAYA,SAhIvC,6CClHjB,SAASuK,GAAT,GAiBH,IAhBArD,EAgBD,EAhBCA,QACAuC,EAeD,EAfCA,kBACAnC,EAcD,EAdCA,kBACAD,EAaD,EAbCA,sBACAqC,EAYD,EAZCA,iBACAC,EAWD,EAXCA,aACAC,EAUD,EAVCA,aACArC,EASD,EATCA,YACAC,EAQD,EARCA,UACAqC,EAOD,EAPCA,WACApC,EAMD,EANCA,UACAC,EAKD,EALCA,kBACAC,EAID,EAJCA,OACAmC,EAGD,EAHCA,mBACAC,EAED,EAFCA,uBAKA,OAAK7C,EAEH,mCACEA,EAAQpR,KAAI,SAACqR,EAAOgC,GAAR,OAER,cAACK,GAAD,CACArC,OAAQA,EACRD,QAASA,EACTuC,kBAAmBA,EACnBnC,kBAAmBA,EACnBD,sBAAuBA,EACvBqC,iBAAkBA,EAClBC,aAAcA,EACdC,aAAcA,EACdrC,YAAaA,EACbC,UAAWA,EACXqC,WAAYA,EACZpC,UAAWA,EACXC,kBAAmBA,EACnBC,OAAQA,EACRwB,MAAOA,EACPW,mBAAoBA,EACpBC,uBAAwBA,SAtBX,6C,aClBlB,SAASS,GAAT,GAAiD,IAAnB7D,EAAkB,EAAlBA,gBAE3B/Q,EAAYqM,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUlB,iBAFJ,EAGLwL,mBAAStK,EAAUyL,OAHd,oBAG7ChB,EAH6C,KAG3BC,EAH2B,OAIPJ,mBAAStK,EAAUwN,KAJZ,oBAI7C7C,EAJ6C,KAI5BC,EAJ4B,KA+BnD,OAzBAK,qBAAU,WACNP,EAAqB1K,EAAUyL,OAC/Bb,EAAoB5K,EAAUwN,OAC/B,CAACxN,IAEJiL,qBAAU,WACN,GAAGR,IAAoBzK,EAAUyL,MAAM,CACnC,IAAMoJ,EAAa,2BACZ7U,GADW,IAEdyL,MAAMhB,IAEVsG,EAAgB8D,MAErB,CAACpK,EAAkBsG,EAAgB/Q,IAEtCiL,qBAAU,WACN,GAAGN,IAAmB3K,EAAUwN,IAAI,CAChC,IAAMqH,EAAa,2BACZ7U,GADW,IAEdwN,IAAI7C,IAERoG,EAAgB8D,MAErB,CAAClK,EAAiBoG,EAAgB/Q,IAGrC,qCACI,qBAAK+G,UAAU,aAAf,8BACI,qBAAKA,UAAU,yBAAf,SACKkD,GAAa/J,KAAI,SAAAuL,GAAK,OACnB,qBAAK1E,UAAU,kBAAkBsE,MAAO,CAACC,gBAAgB,GAAD,OAAIG,IAC3D1C,QAAS,kBAAI2B,EAAqBe,IADnC,SAGMhB,IAAoBgB,GAAO,cAAC,KAAD,WAI7C,qBAAK1E,UAAU,aAAf,kBACI,qBAAKA,UAAU,cAAf,SACKmD,GAAYhK,KAAI,SAAAwL,GAAI,OACjB,qBAAK3E,UAAU,OACfsE,MAAO,CAACC,gBAAgB,GAAD,OAAIb,IAC3B1B,QAAS,kBAAI6B,EAAoBc,IAFjC,SAIIA,YC9CjB,SAASoJ,GAAT,GAAwG,IAA9E/D,EAA6E,EAA7EA,gBAAgBgE,EAA6D,EAA7DA,gBAAgBnG,EAA6C,EAA7CA,0BAA0BoG,EAAmB,EAAnBA,kBACjFjR,EAAWqI,cACX1N,EAAe2N,aAAY,SAAA3M,GAAK,OAAIA,EAAMpB,KAAKI,gBAE/CoQ,EAAgBzC,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUnB,cAJ+C,EAKvEyL,mBAASwE,EAAcjP,QACtD,SAAAG,GAAS,OAAEtB,EAAa4N,iBAAiBC,SAASvM,EAAUF,SAN0C,oBAKnGjB,EALmG,KAKxFkQ,EALwF,KASpG/O,EAAYqM,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUlB,iBATmD,EAUlEwL,mBAAStK,EAAUyL,OAV+C,oBAUpGwJ,EAVoG,KAUrFC,EAVqF,OAWpE5K,mBAAStK,EAAUwN,KAXiD,oBAWpG2H,EAXoG,KAWtFC,EAXsF,OAYlE9K,oBAAS,GAZyD,oBAYnGsI,EAZmG,KAYrFC,EAZqF,OAahEvI,mBAAStK,EAAUiG,MAb6C,oBAanGoP,EAbmG,KAapFC,EAboF,OAcpEhL,oBAAS,GAd2D,oBAcnGO,EAdmG,KActFC,EAdsF,KAepGC,EAAUC,mBAf0F,EAkBpCV,oBAAS,GAlB2B,oBAkBnGyI,EAlBmG,KAkBtEC,EAlBsE,KAmBpGzD,EAAQvE,mBAEdC,qBAAU,WACN8D,EAAcD,EAAcjP,QACxB,SAAAG,GAAS,OAAEtB,EAAa4N,iBAAiBC,SAASvM,EAAUF,WAEjE,CAACpB,EAAaA,EAAa4N,iBAAiBwC,IAE/C7D,qBAAU,WACNiK,EAAkBlV,EAAUyL,OAC5B2J,EAAiBpV,EAAUwN,KAC3B8H,EAAiBtV,EAAUiG,QAC5B,CAACjG,IAqBJiL,qBAAU,WACF8H,GAMA7H,YAAW,WACJqE,GAAOA,EAAMpE,SACZoE,EAAMpE,QAAQC,UAEnB,KAER,CAAC2H,IAKJ,OACA,sBAAKhM,UAAS,0BAAqB8D,EAAY,aAAa,IAA5D,UACI,qBAAK9D,UAAU,mBAAmBsE,MAAO,CAACC,gBAAgB,GAAD,OAAI2J,IAA7D,SAAiFE,IAChFvC,EACD,uBACIhT,KAAK,OACLmH,UAAU,uBACVb,MAAOmP,EACPrO,SA7CR,SAA0BjB,GACtBuP,EAAiBvP,EAAGC,OAAOE,QA6CvB4F,IAAKf,EACLS,OAAQ,WACJqH,GAAgB,GAChB,IAAMgC,EAAY,2BACX7U,GADW,IAEdiG,KAAKoP,IAENA,EAAclR,OAAO,EACpB4M,EAAgB8D,GAEhBS,EAAiBtV,EAAUiG,OAGnC8F,UAAW,SAAChG,GACO,UAAXA,EAAGiG,KACHjG,EAAGC,OAAOkN,UAKtB,qBACAC,MAAOkC,EAAclR,OAAO,GAAGkR,EAAc,GAC7CtO,UAAS,yBAAoBsO,EAAclR,OAAO,GAAG,sBAAsB,IAF3E,SAGEkR,IAEF,sBAAKtO,UAAS,iEAA4D8D,EAAY,WAAW,IACjGU,SAAS,IACTC,OAAQ,kBAAIV,GAAe,IAC3BgB,IAAKyD,EAHL,UAKI,cAAC,KAAD,CAAaxI,UAAU,mBACvBgC,QAAS,WACL+B,GAAe,SAAAkF,GAAI,OAAGA,QAGzBnF,GAAa,sBAAK9D,UAAU,oEAAf,UACP,sBAAKA,UAAU,6BACdgC,QAAS,WACL8J,GAAgB,GAChB3H,YAAW,WACPH,EAAQI,QAAQC,UACjB,GACHN,GAAe,IANpB,UASI,cAAC,KAAD,CAAU/D,UAAU,SACpB,uDAEJ,cAAC0G,GAAD,CACCC,IAAK,gCACE,cAAC,KAAD,CAAqB3G,UAAU,SAC9B,kDAGR8G,wBAlEc,SAACoC,GAC3B+C,EAA+B/C,IAkEnBnC,uBAAuB,EAPxB,SASI,cAAC8G,GAAD,CAAqB7D,gBAAiBA,MAM1C,sBAAKhK,UAAU,6BACdgC,QAAS,YA1GzB,SAAwB9I,GACpB,IAAMkD,EAAQ,2BACPzE,GADM,IAET4N,iBAAiB5N,EAAa4N,iBAAiBzM,QAAO,SAAAgK,GAAE,OAAEA,IAAK5J,OAEnE8D,EAASE,EAAWd,IACpBtE,EAAWqB,KAAI,SAAAF,GAAS,OACpBA,EAAUjB,OAAOmB,KAAI,SAAAd,GAAK,OACH,IAAnBA,EAAMwR,WACFhC,EAA0B5O,GACzB,WAiGG2M,CAAe3M,EAAUF,KACzBgL,GAAe,IAHpB,UAMI,cAAC,KAAD,CAAW/D,UAAU,SACrB,gEAEJ,sBAAKA,UAAU,6BACfgC,QAAS,WACRiM,IACAlK,GAAe,IAHhB,UAMI,cAAC,KAAD,CAAmB/D,UAAU,SAC7B,uDAEJ,sBAAKA,UAAU,6BACdgC,QAAS,WACLgM,EAAgB/U,EAAUF,KAC1BgL,GAAe,IAHpB,UAMI,cAAC,KAAD,CAAU/D,UAAU,SACpB,gEC5KhB,SAASwO,GAAT,GAKH,IAJAC,EAID,EAJCA,QAEAC,GAED,EAHChC,YAGD,EAFCgC,cACArL,EACD,EADCA,WA4CA,OACI,mCACA,qBAAKrD,UAAU,4CAAf,SA1CgB,WAChB,IAAI2O,EAAU,GACd,OAAOF,GACH,IAAK,MACDE,EAAQ/L,KACR,qCACI,sBAAK5C,UAAU,2CACdgC,QAAS,WAAKqB,GAAW,IAD1B,UAII,cAAC,KAAD,CAAmBrD,UAAU,SAC7B,gDAEJ,sBAAKA,UAAU,wBAAwBgC,QAAS0M,EAAhD,UACI,cAAC,KAAD,CAAmB1O,UAAU,SAC7B,qDAIR,MACJ,IAAK,UAOL,IAAK,SACD2O,EAAQ/L,KACR,mCACI6L,KAGJ,MACJ,QACIE,EAAQ/L,KAAK,IAGrB,OAAO+L,EAKHC,O,aCjDL,SAASC,GAAT,GAIH,IAHAJ,EAGD,EAHCA,QACA/B,EAED,EAFCA,YACAgC,EACD,EADCA,aACD,EACuCnL,oBAAS,GADhD,oBACQO,EADR,KACqBC,EADrB,OAE+BR,oBAAS,GAFxC,oBAEQnB,EAFR,KAEiBiB,EAFjB,KA4BC,OACI,qCACJ,sBAAKrD,UAAU,sBACfwE,SAAS,IACRC,OAAQ,WAAKV,GAAe,IAF7B,UAIMD,GAAa,cAAC0K,GAAD,CACdC,QAASA,EACT/B,YAAaA,EACbgC,aAAcA,EACdrL,WAAYA,IAEb,qBAAKrD,UAAS,0BAAqB8D,EAAY,SAAS,IAAM9B,QAAS,WAAK+B,GAAe,SAAAkF,GAAI,OAAGA,MAAlG,SArCc,WACd,IAAI0F,EAAU,GACd,OAAOF,GACH,IAAK,MACDE,EAAQ/L,KACR,qCACI,cAAC,KAAD,CAAqB5C,UAAU,SAC/B,2CAGJ,MACJ,IAAK,UACD2O,EAAQ/L,KACR,qCACI,cAAC,KAAD,CAAU5C,UAAU,SACpB,+CAGJ,MACJ,QACI2O,EAAQ/L,KAAK,IAGrB,OAAO+L,EAeFG,QAIR1M,GAAS,cAAC8C,GAAD,CAAY7B,WAAYA,EAAxB,SACF,cAACoJ,GAAD,CAAaC,YAAaA,EAAcrJ,WAAYA,S,aCrDzD,SAAS0L,GAAT,GAKH,IAJA5I,EAID,EAJCA,OACAC,EAGD,EAHCA,UACA4I,EAED,EAFCA,mBACAC,EACD,EADCA,kBAEMlX,EAAgBuN,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUlB,iBAD5D,EAE2CwL,oBAAS,GAFpD,oBAEQ2L,EAFR,KAEwBC,EAFxB,KAGOC,EAAWnL,mBAgCjB,OA9BAC,qBAAU,WACN8K,EACIjX,EAAcwS,QAAQzR,QAAO,SAACuW,GAAD,OACzBA,EAAKnQ,KAAKsH,cAAchB,SAASW,EAAOK,qBAIjD,CAACL,EAAQpO,EAAcwS,QAAQyE,IAElC9K,qBAAU,WACN+K,EACIlX,EAAcC,OAAOc,QAAO,SAACuW,GAAD,OACxBA,EAAKnQ,KAAKsH,cAAchB,SAASW,EAAOK,qBAGjD,CAACL,EAAQpO,EAAcC,OAAOiX,IAgB7B,mCACEC,EAiBF,qBAAKlP,UAAU,SAAf,SACI,uBACI+E,IAAKqK,EACLpP,UAAU,wBACVnH,KAAK,SACLqH,YAAY,SACZD,SAAU,SAACsG,GAAD,OAAOH,EAAUG,EAAEtH,OAAOE,QACpCsF,OAAQ,SAAC8B,GACe,KAAjBA,EAAEtH,OAAOE,OACZgQ,GAAgB,IAEpBnK,UAAW,SAAChG,GACO,UAAXA,EAAGiG,KACHjG,EAAGC,OAAOkN,YA7BtB,qBAAKnM,UAAU,sBACXgC,QAAS,WACLmN,GAAgB,GAChBhL,YAAW,WACHiL,GAAUA,EAAShL,SAClBgL,EAAShL,QAAQC,UAEvB,IAPX,SAUI,sBAAKrE,UAAU,kBAAf,UACI,cAAC,KAAD,CAAiBA,UAAU,SAC3B,iDC1Db,IAAMsP,GAAe,CACxBzT,QAkBJ,SAAiB/D,EAAW8E,GACxB,IAAIvE,EAAO,GACXP,EAAWqB,KAAI,SAAAF,GAAS,OACpBA,EAAUjB,OAAOmB,KAAI,SAAAsS,GAAM,OACFpT,EAArBoT,EAAO1S,MAAM6D,EAAc6O,EAAa,WAG5CpT,GACAP,EAAWqB,KAAI,SAAAF,GAAS,OACpBA,EAAUsR,QAAQpR,KAAI,SAAAqR,GAAM,OACxBA,EAAOxS,OAAOmB,KAAI,SAAAsS,GAAM,OACCpT,EAArBoT,EAAO1S,MAAM6D,EAAc6O,EAAa,cAKxD,OAAOpT,GAjCPkX,SAoCJ,SAAkBxX,EAAegU,GAC7B,IAAMzS,EAAW,CACbP,IAAMyW,KAAKC,MAAMC,SAAS,IAAMC,KAAK9O,SAAS6O,SAAS,IACvD7F,YAAa,EACb3K,KAAO6M,EACP6D,KAAO,wBACPC,UAAYL,KAAKC,MACjBK,YAAc,KACdxX,gBAAiB,CACT,CACIS,IAAMgX,KACNrL,MAAM,UACNxF,KAAK,iBAET,CACInG,IAAMgX,KACNrL,MAAM,UACNxF,KAAK,QAET,CACInG,IAAMgX,KACNrL,MAAM,UACNxF,KAAK,WAET,CACInG,IAAMgX,KACNrL,MAAM,kBACNxF,KAAK,UAGb8Q,WAAa,GACbC,WAAY,EACZC,MAAQ,GACRC,aAAe,CACX,CACIpX,IAAKgX,KACL3D,MAAQ,cACRvT,KAAO,cACPuX,QAAU,QAEd,CACIrX,IAAKgX,KACL3D,MAAQ,YACRvT,KAAO,mCACPuX,QAAU,SAEd,CACIrX,IAAMgX,KACN3D,MAAQ,YACRvT,KAAO,WACPuX,QAAU,UAEd,CACIrX,IAAMgX,KACN3D,MAAQ,OACRvT,KAAO,SACPuX,QAAU,cAGlBC,OAAS,CACL,CACItX,IAAMgX,KACN7Q,KAAO,cACPwF,MAAQ,UACRmL,UAAYL,KAAKC,MACjBK,YAAc,GACdQ,MAAQ,CACJ,CACIvX,IAAMgX,KACN7Q,KAAO,SACP2Q,UAAWL,KAAKC,MAChBc,cAAgB,GAChBC,QAAU,GACVN,MAAQ,GACRO,UAAY,GACZlV,OAAS,CACL2D,KAAO,OACPwF,MAAQ,oBAEZgM,YAAc,CACVxR,KAAO,GACPwF,MAAQ,IAEZiM,SAAW,CACPC,KAAO,GACPC,GAAK,IAEThP,SAAW,GACXiP,KAAO,GACPC,MAAQ,GACRC,OAAS,GACTC,cAAgB,KAChBC,SAAW,GACXpB,YAAc,IAElB,CACI/W,IAAMgX,KACN7Q,KAAO,SACP2Q,UAAWL,KAAKC,MAChBc,cAAgB,GAChBC,QAAU,GACVN,MAAQ,GACRO,UAAY,GACZlV,OAAS,CACL2D,KAAO,gBACPwF,MAAQ,qBAEZgM,YAAc,CACVxR,KAAO,GACPwF,MAAQ,IAEZiM,SAAW,CACPC,KAAO,GACPC,GAAK,IAEThP,SAAW,GACXiP,KAAO,GACPC,MAAQ,GACRC,OAAS,GACTC,cAAgB,KAChBC,SAAW,GACXpB,YAAc,IAElB,CACI/W,IAAKgX,KACL7Q,KAAO,SACP2Q,UAAWL,KAAKC,MAChBc,cAAgB,GAChBC,QAAU,GACVN,MAAQ,GACRO,UAAY,GACZlV,OAAS,CACL2D,KAAO,GACPwF,MAAQ,sBAEZgM,YAAc,CACVxR,KAAO,GACPwF,MAAQ,IAEZiM,SAAW,CACPC,KAAO,GACPC,GAAK,IAEThP,SAAW,GACXiP,KAAO,GACPC,MAAQ,GACRC,OAAS,GACTC,cAAgB,KAChBC,SAAW,GACXpB,YAAc,MAI1B,CACI/W,IAAKgX,KACL7Q,KAAO,cACPwF,MAAQ,UACRmL,UAAYL,KAAKC,MACjBK,YAAc,GACdQ,MAAQ,CACJ,CACIvX,IAAMgX,KACN7Q,KAAO,SACP2Q,UAAWL,KAAKC,MAChBc,cAAgB,GAChBC,QAAU,GACVN,MAAQ,GACRO,UAAY,GACZlV,OAAS,CACL2D,KAAO,GACPwF,MAAQ,sBAEZgM,YAAc,CACVxR,KAAO,GACPwF,MAAQ,IAEZiM,SAAW,CACPC,KAAO,GACPC,GAAK,IAEThP,SAAW,GACXiP,KAAO,GACPC,MAAQ,GACRC,OAAS,GACTC,cAAgB,KAChBC,SAAW,GACXpB,YAAc,IAElB,CACI/W,IAAMgX,KACN7Q,KAAO,SACP2Q,UAAWL,KAAKC,MAChBc,cAAgB,GAChBC,QAAU,GACVN,MAAQ,GACRO,UAAY,GACZlV,OAAS,CACL2D,KAAO,GACPwF,MAAQ,sBAEZgM,YAAc,CACVxR,KAAO,GACPwF,MAAQ,IAEZiM,SAAW,CACPC,KAAO,GACPC,GAAK,IAEThP,SAAW,GACXiP,KAAO,GACPC,MAAQ,GACRC,OAAS,GACTC,cAAgB,KAChBC,SAAW,GACXpB,YAAc,QAMhChC,EAAe/V,EAErB,OADA+V,EAAa9V,OAAb,sBAA0B8V,EAAa9V,QAAvC,CAA8CsB,IACvCwU,GAjQPf,iBAoQJ,SAA0BhV,EAAcyS,GAA+B,IAAxBuB,EAAuB,uDAAb,YAC/CzS,EAAW,CACbP,IAAMyW,KAAKC,MAAMC,SAAS,IAAMC,KAAK9O,SAAS6O,SAAS,IACvD7F,YAAa,EACb3K,KAAO6M,EACP6D,KAAO,wBACPC,UAAYL,KAAKC,MACjBK,YAAc,KACdxX,gBAAiB,CACT,CACIS,IAAMgX,KACNrL,MAAM,UACNxF,KAAK,iBAET,CACInG,IAAMgX,KACNrL,MAAM,UACNxF,KAAK,QAET,CACInG,IAAMgX,KACNrL,MAAM,UACNxF,KAAK,WAET,CACInG,IAAMgX,KACNrL,MAAM,kBACNxF,KAAK,UAGb8Q,WAAa,GACbC,WAAY,EACZC,MAAQ,GACRC,aAAe,CACX,CACIpX,IAAKgX,KACL3D,MAAQ,cACRvT,KAAO,cACPuX,QAAU,QAEd,CACIrX,IAAKgX,KACL3D,MAAQ,YACRvT,KAAO,mCACPuX,QAAU,SAEd,CACIrX,IAAMgX,KACN3D,MAAQ,YACRvT,KAAO,WACPuX,QAAU,UAEd,CACIrX,IAAMgX,KACN3D,MAAQ,OACRvT,KAAO,SACPuX,QAAU,cAGlBC,OAAS,CACL,CACItX,IAAMgX,KACN7Q,KAAO,cACPwF,MAAQ,UACRmL,UAAYL,KAAKC,MACjBK,YAAc,GACdQ,MAAQ,CACJ,CACIvX,IAAMgX,KACN7Q,KAAO,SACP2Q,UAAWL,KAAKC,MAChBc,cAAgB,GAChBC,QAAU,GACVN,MAAQ,GACRO,UAAY,GACZlV,OAAS,CACL2D,KAAO,OACPwF,MAAQ,oBAEZgM,YAAc,CACVxR,KAAO,GACPwF,MAAQ,IAEZiM,SAAW,CACPC,KAAO,GACPC,GAAK,IAEThP,SAAW,GACXiP,KAAO,GACPC,MAAQ,GACRC,OAAS,GACTC,cAAgB,KAChBC,SAAW,GACXpB,YAAc,IAElB,CACI/W,IAAMgX,KACN7Q,KAAO,SACP2Q,UAAWL,KAAKC,MAChBc,cAAgB,GAChBC,QAAU,GACVN,MAAQ,GACRO,UAAY,GACZlV,OAAS,CACL2D,KAAO,gBACPwF,MAAQ,qBAEZgM,YAAc,CACVxR,KAAO,GACPwF,MAAQ,IAEZiM,SAAW,CACPC,KAAO,GACPC,GAAK,IAEThP,SAAW,GACXiP,KAAO,GACPC,MAAQ,GACRC,OAAS,GACTC,cAAgB,KAChBC,SAAW,GACXpB,YAAc,IAElB,CACI/W,IAAKgX,KACL7Q,KAAO,SACP2Q,UAAWL,KAAKC,MAChBc,cAAgB,GAChBC,QAAU,GACVN,MAAQ,GACRO,UAAY,GACZlV,OAAS,CACL2D,KAAO,GACPwF,MAAQ,sBAEZgM,YAAc,CACVxR,KAAO,GACPwF,MAAQ,IAEZiM,SAAW,CACPC,KAAO,GACPC,GAAK,IAEThP,SAAW,GACXiP,KAAO,GACPC,MAAQ,GACRC,OAAS,GACTC,cAAgB,KAChBC,SAAW,GACXpB,YAAc,MAI1B,CACI/W,IAAKgX,KACL7Q,KAAO,cACPwF,MAAQ,UACRmL,UAAYL,KAAKC,MACjBK,YAAc,GACdQ,MAAQ,CACJ,CACIvX,IAAMgX,KACN7Q,KAAO,SACP2Q,UAAWL,KAAKC,MAChBc,cAAgB,GAChBC,QAAU,GACVN,MAAQ,GACRO,UAAY,GACZlV,OAAS,CACL2D,KAAO,GACPwF,MAAQ,sBAEZgM,YAAc,CACVxR,KAAO,GACPwF,MAAQ,IAEZiM,SAAW,CACPC,KAAO,GACPC,GAAK,IAEThP,SAAW,GACXiP,KAAO,GACPC,MAAQ,GACRC,OAAS,GACTC,cAAgB,KAChBC,SAAW,GACXpB,YAAc,IAElB,CACI/W,IAAMgX,KACN7Q,KAAO,SACP2Q,UAAWL,KAAKC,MAChBc,cAAgB,GAChBC,QAAU,GACVN,MAAQ,GACRO,UAAY,GACZlV,OAAS,CACL2D,KAAO,GACPwF,MAAQ,sBAEZgM,YAAc,CACVxR,KAAO,GACPwF,MAAQ,IAEZiM,SAAW,CACPC,KAAO,GACPC,GAAK,IAEThP,SAAW,GACXiP,KAAO,GACPC,MAAQ,GACRC,OAAS,GACTC,cAAgB,KAChBC,SAAW,GACXpB,YAAc,QAMlCpC,EAAS,eAAOlD,GAMpB,OALAkD,EAAU1V,OAAV,sBAAuB0V,EAAU1V,QAAjC,CAAwCsB,IAExCvB,EAAcwS,QAAUxS,EAAcwS,QAAQpR,KAAI,SAAAgY,GAAO,OACrDA,EAAQpY,MAAM2U,EAAU3U,IAAI2U,EAAUyD,KAEnCpZ,GAreP6S,YAweJ,SAAqB7S,EAAe6E,GAChC,IAAIwU,EAAe,KACftD,EAAe,GAOnB,GANA/V,EAAcC,OAAOwT,SAAQ,SAAAC,GAAM,OAC/BA,EAAO1S,MAAM6D,EACbwU,EAAc,eAAI3F,GAElB,QAED2F,EAECtD,EAAa,2BACN/V,GADK,IAERC,OAAQD,EAAcC,OAAOc,QAAO,SAAA2S,GAAM,OACtCA,EAAO1S,MAAM6D,YASrB,GALA7E,EAAcwS,QAAQiB,SAAQ,SAAAhB,GAAM,OAChCA,EAAOxS,OAAOwT,SAAQ,SAAAC,GAAM,OACxBA,EAAO1S,MAAM6D,EAAQwU,EAAc3F,EAAO,WAG/C2F,EAAc,CAEb,IAAIC,EAAa,GACjBtZ,EAAcwS,QAAQiB,SAAQ,SAAAhB,GAAM,OAChCA,EAAOxS,OAAOwT,SAAQ,SAAAC,GAAM,OAAEA,EAAO1S,MAAMqY,EAAcrY,IACzDsY,EAAW7G,EAEX,WAGJsD,EAAa,2BACN/V,GADK,IAERwS,QAAQxS,EAAcwS,QAAQpR,KAAI,SAAAqR,GAAM,OACpCA,EAAOzR,MAAMsY,EAAWtY,IACxByR,EAAM,2BACCA,GADD,IAEFxS,OAAQwS,EAAOxS,OAAOc,QAAO,SAAA2S,GAAM,OAC/BA,EAAO1S,MAAMqY,EAAcrY,SAInCyR,OAKhB,OAAOsD,GAxhBPwD,UA4hBJ,SAAmBvZ,GACf,IAAM2V,EAAY,CACd3U,IAAMyW,KAAKC,MAAMC,SAAS,IAAMC,KAAK9O,SAAS6O,SAAS,IACvDxQ,KAAO,aACPlH,OAAS,IAEP8V,EAAe/V,EAErB,OADA+V,EAAavD,QAAb,sBAA2BuD,EAAavD,SAAxC,CAAgDmD,IACzCI,GAniBPd,aAsiBJ,SAAsBjV,EAAewZ,GACjC,IAAMzD,EAAe/V,EAErB,OADA+V,EAAavD,QAAUuD,EAAavD,QAAQzR,QAAO,SAAA0R,GAAM,OAAEA,EAAOzR,MAAMwY,KACjEzD,GAxiBPb,aA0iBJ,SAAsBlV,EAAe2V,GACjC,IAAMI,EAAe/V,EAErB,OADA+V,EAAavD,QAAUuD,EAAavD,QAAQpR,KAAI,SAAAqR,GAAM,OAAEA,EAAOzR,MAAM2U,EAAU3U,IAAI2U,EAAUlD,KACtFsD,GA5iBP0D,SAkjBJ,SAAkBvZ,GACd,IAAMwZ,EAAW,CACb1Y,IAAMyW,KAAKC,MAAMC,SAAS,IAAMC,KAAK9O,SAAS6O,SAAS,IAAM,IAAIgC,OAAO,IACxExS,KAAO,YACPwF,MAAQ,qBACRmL,UAAYL,KAAKC,MACjBK,YAAc,GACdQ,MAAQ,IAENhX,EAAWrB,EAEjB,OADAqB,EAAS+W,OAAT,CAAoBoB,GAApB,mBAAgCnY,EAAS+W,SAClC/W,GA5jBPqY,YA+jBJ,SAAqBC,EAAQ3Z,GACzB,IAAMqB,EAAWrB,EAEjB,OADAqB,EAAS+W,OAAS/W,EAAS+W,OAAOvX,QAAO,SAAA+Y,GAAK,OAAEA,EAAM9Y,MAAM6Y,KACrDtY,GAjkBPwY,YAokBJ,SAAqB7Z,EAAU8Z,GAS3B,OARc,2BACP9Z,GADO,IAEVoY,OAAQpY,EAAUoY,OAAOlX,KAAI,SAAA0Y,GAAK,OAC9BA,EAAM9Y,MAAMgZ,EAAahZ,IACzBgZ,EACCF,QAzkBTG,QAilBJ,SAAiBC,EAAUha,EAAUia,EAAU3a,GAC3C,IAAM4a,EAAU,CACZpZ,IAAMyW,KAAKC,MAAMC,SAAS,IAAMC,KAAK9O,SAAS6O,SAAS,IAAM,IAAIgC,OAAO,IACxExS,KAAOgT,EACPrC,UAAYL,KAAKC,MACjBc,cAAgB,GAChBC,QAAU,GACVN,MAAQ,GACRO,UAAY,GACZlV,OAAS,CACL2D,KAAO,GACPwF,MAAQ,sBAEZgM,YAAc,CACVxR,KAAO,GACPwF,MAAQ,IAEZiM,SAAW,CACPC,KAAO,GACPC,GAAK,IAEThP,SAAW,GACXiP,KAAO,GACPC,MAAQ,GACRC,OAAS,GACTC,cAAgB,KAChBC,SAAW,GACXpB,YAAc,CACVsC,OAAS7a,EACT8a,MAAO,IAAI7C,MAAO8C,YAG1BH,EAAQjC,MAAMtN,KAAKrL,EAAKwB,KACxB,IAAMO,EAAWrB,EAIjB,OAHAqB,EAAS+W,OAAOlX,KAAI,SAAA0Y,GAAK,OACrBA,EAAM9Y,MAAMkZ,EAAUlZ,IAAI8Y,EAAMvB,MAAM1N,KAAKuP,GAASN,KAEjDvY,GArnBPiZ,WAgpBJ,SAAoB9Y,EAAOwY,EAAUha,GACjC,IAAMwZ,EAAQ,2BACPQ,GADO,IAEV3B,MAAM2B,EAAU3B,MAAMxX,QAAO,SAAAU,GAAI,OAAEA,EAAKT,MAAMU,OAWlD,OATc,2BACPxB,GADO,IAEVoY,OAAQpY,EAAUoY,OAAOlX,KAAI,SAAA0Y,GAAK,OAC9BA,EAAM9Y,MAAM0Y,EAAS1Y,IACrB0Y,EACCI,QAzpBTW,WAwnBJ,SAAoBP,EAAUha,EAAUwa,EAAYlb,GAkBhD,OAjBAkb,EAAY3C,YAAY,CACpBsC,OAAS7a,EACT8a,MAAM,IAAI7C,MAAO8C,WAEP,2BACPra,GADO,IAEVoY,OAAQpY,EAAUoY,OAAOlX,KAAI,SAAA0Y,GAAK,OAC9BA,EAAM9Y,MAAMkZ,EAAUlZ,IAAtB,2BACG8Y,GADH,IACUvB,MACVuB,EAAMvB,MAAMnX,KAAI,SAAAK,GAAI,OAChBA,EAAKT,MAAM0Z,EAAY1Z,IACvB0Z,EAAYjZ,OAGfqY,SA0Bb,SAAS9B,KAIL,MAAO,IAAMJ,KAAK9O,SAAS6O,SAAS,IAAIgD,OAAO,EAAG,GC5qB/C,SAASC,GAAT,GAQJ,IAPCjI,EAOF,EAPEA,sBACAC,EAMF,EANEA,kBACAK,EAKF,EALEA,OAMMrT,EAAe2N,aAAY,SAAA3M,GAAK,OAAIA,EAAMpB,KAAKI,gBAC/Cib,EAAetN,aAAY,SAAA3M,GAAK,OAAIA,EAAMpB,KAAKI,aAAakF,aAC5D/E,EAAawN,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUnB,cAClDK,EAAiBmN,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUd,kBACtD6E,EAAWqI,cALnB,EAQgD9B,mBAAS,IARzD,oBAQSsP,EART,KAQ0BC,EAR1B,OAS0CvP,mBAAS,IATnD,oBASSwP,EATT,KASuBC,EATvB,OAWgEzP,mBAAS,IAXzE,oBAWS0P,EAXT,KAWkCC,EAXlC,OAY0D3P,mBAAS,IAZnE,oBAYS4P,EAZT,KAY+BC,EAZ/B,KAeQxI,EAAY,SAAChO,GACf,IAAMkR,EAAewB,GAAa1E,YAAYzS,EAAgByE,GAC9DI,EAASgN,GAAgB8D,IACzB9Q,EAASiN,GAAoB6D,KAI3BhD,EAAU,SAACgD,EAAauF,GAC1B,GAAGlb,EAAeY,MAAM+U,EAAa/U,IAAI,CACrC,IAAMua,EAAmBhE,GAAa1E,YAAYzS,EAAgBkb,EAAUta,KACtEwa,EAAqB,2BACpBD,GADmB,IAEtBtb,OAAO,GAAD,mBAAKsb,EAAiBtb,QAAtB,CAA8Bqb,MAExCrW,EAASgN,GAAgBuJ,IACzBvW,EAASiN,GAAoBsJ,QAC5B,CACD3I,EAAYyI,EAAUta,KACtB,IAAMwa,EAAqB,2BACpBzF,GADmB,IAEtB9V,OAAO,GAAD,mBAAK8V,EAAa9V,QAAlB,CAA0Bqb,MAEpCrW,EAASgN,GAAgBuJ,IACzBvW,EAASiN,GAAoBsJ,MAI/BxI,EAAkB,SAACyI,EAAgB9F,EAAU2F,GAC/C,IAAMC,EAAmBhE,GAAa1E,YAAYzS,EAAgBkb,EAAUta,KAC5EiE,EAASgN,GAAgBsJ,IACzBtW,EAASiN,GAAoBqJ,IAC7B,IAAMG,EAAkB,2BACjB/F,GADgB,IAEnB1V,OAAO,GAAD,mBAAK0V,EAAU1V,QAAf,CAAuBqb,MAEjC,GAAGC,EAAiBva,MAAMya,EAAgBza,IAAI,CAC1C,IAAM+U,EAAewB,GAAarC,aAAaqG,EAAkBG,GACjEzW,EAASgN,GAAgB8D,IACzB9Q,EAASiN,GAAoB6D,QAC5B,CACD,IAAMA,EAAewB,GAAarC,aAAauG,EAAiBC,GAChEzW,EAASgN,GAAgB8D,IACzB9Q,EAASiN,GAAoB6D,MAKrC,SAASjD,EAAUvR,GACX,IAAIwU,EAAe3V,EACfub,EAAoB,CACpBC,qBAAoB,EACpBC,UAAU,MAEd9F,EAAavD,QAAQpR,KAAI,SAAAqR,GAAM,OAC3BA,EAAOxS,OAAOmB,KAAI,SAAAd,GAAK,OACnBA,EAAMU,MAAQO,EAASP,IAAI2a,EAAkB,2BACtCA,GADqC,IAExCC,qBAAoB,EACpBC,UAAUpJ,IAEb,WAGNkJ,EAAkBC,oBAEjB7F,EAAY,2BACL3V,GADK,IAERoS,QAASpS,EAAeoS,QAAQpR,KAAI,SAAAqR,GAAM,OACtCA,EAAOzR,MAAM2a,EAAkBE,UAAU7a,IAAzC,2BACGyR,GADH,IACWxS,OACXwS,EAAOxS,OAAOmB,KAAI,SAAAd,GAAK,OACnBA,EAAMU,MAAQO,EAASP,IACvBO,EAASjB,OAEZmS,OAMTsD,EAAa9V,OAAS8V,EAAa9V,OAAOmB,KAAI,SAAAd,GAAK,OAC/CA,EAAMU,MAAQO,EAASP,IAAIO,EAASjB,KAI5C2E,EAASgN,GAAgB8D,IACzB9Q,EAASiN,GAAoB6D,IA8BrC,OA3BA5J,qBAAU,WACN4O,EAAmB,IACnBE,EAAgB,IACbrb,EAAakF,UAAUO,OAAO,GAC7BtF,EAAW0T,SAAQ,SAAAvS,GACf6Z,GAAmB,SAAAzT,GAAS,4BAAOA,GAAP,YAAoBpG,EAAUjB,YAE1DiB,EAAUsR,QAAQpR,KAAI,SAAAqR,GAAM,OACxBwI,GAAgB,SAAA3T,GAAS,4BAAOA,GAAP,YAAoBmL,EAAOxS,oBAKjE,CAACL,EAAaib,EAAa9a,IAM9BoM,qBAAU,WACNgP,EAA2BL,EAAgB/Z,QAAO,SAAAT,GAAK,OAAEua,EAAapN,SAASnN,EAAMU,WACtF,CAAC8Z,EAAgBD,IACpB1O,qBAAU,WACNkP,EAAwBL,EAAaja,QAAO,SAAAT,GAAK,OAAEua,EAAapN,SAASnN,EAAMU,WAChF,CAACga,EAAaH,IAIb,sBAAK5S,UAAU,wBAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,cAAC,KAAD,CAAgBA,UAAU,SAC1B,+CAIAiT,EAAwB7V,OAAO,GAAG+V,EAAqB/V,OAAO,EAC9D,gCAEQ6V,EAAwB7V,OAAO,GAC/B,cAACmP,GAAD,CACAvU,OAAQib,EACRvI,sBAAuBA,EACvBC,kBAAmBA,EACnBC,YAAaA,EACbC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBC,OAAQA,EACRC,IAAI,aAIJkI,EAAqB/V,OAAO,GAC5B,cAACmP,GAAD,CACAvU,OAAQmb,EACRzI,sBAAuBA,EACvBC,kBAAmBA,EACnBC,YAAaA,EACbC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBC,OAAQA,EACR/E,OAAO,eACPgF,IAAI,gBAKZ,sBAAKjL,UAAU,kBAAf,UACI,8BACI,cAAC,KAAD,CAAgBA,UAAU,WAE9B,yDAGA,gGC1Lb,SAAS6T,GAAT,GA2BH,IA1BAC,EA0BD,EA1BCA,kBACAC,EAyBD,EAzBCA,mBACAC,EAwBD,EAxBCA,oBACAC,EAuBD,EAvBCA,eACAhb,EAsBD,EAtBCA,UACA6T,EAqBD,EArBCA,kBACAnC,EAoBD,EApBCA,kBACAD,EAmBD,EAnBCA,sBAEAgC,GAiBD,EAlBCwH,iCAkBD,EAjBCxH,aACAgC,EAgBD,EAhBCA,aACA3B,EAeD,EAfCA,iBACAC,EAcD,EAdCA,aACAC,EAaD,EAbCA,aACArC,EAYD,EAZCA,YACAC,EAWD,EAXCA,UACAqC,EAUD,EAVCA,WACApC,EASD,EATCA,UACAC,EAQD,EARCA,kBACAoC,EAOD,EAPCA,mBACAC,EAMD,EANCA,uBACApD,EAKD,EALCA,gBACAgE,EAID,EAJCA,gBACAnG,EAGD,EAHCA,0BACAoG,EAED,EAFCA,kBACAkG,EACD,EADCA,iBACD,EAEyB5Q,mBAAS,GAFlC,oBAEIyH,EAFJ,KAEYoJ,EAFZ,OAGyB7Q,mBAAS,IAHlC,oBAGI4C,EAHJ,KAGYC,EAHZ,OAK2C7C,mBAAS,IALpD,oBAKI8Q,EALJ,KAKqBrF,EALrB,OAMyCzL,mBAAS,IANlD,oBAMI+Q,EANJ,KAMoBrF,EANpB,KAYC,OAJJ/K,qBAAU,WACN/I,QAAQC,IAAI,SAAS4P,KACtB,CAACA,IAEK/R,EAAUjB,QAAUiB,EAAUsR,QAE/B,qBAAKvK,UAAS,6BAAwB+T,EAAmB,qBAAqB,qBAA9E,SACI,sBAAK/T,UAAU,iBAAf,UAEI,sBAAKA,UAAS,kCAA6B+T,EAAmB,OAAO,SAAW/R,QAASgS,EAAzF,UACKD,EAAoB,cAACD,EAAD,CAAmBxP,MAAO,CAAEiQ,MAAO,OAAQC,OAAQ,UAAY,cAACP,EAAD,CAAgB3P,MAAO,CAAEiQ,MAAO,OAAQC,OAAQ,UACnIT,EAAmB,sBAAM/T,UAAU,aAAhB,6BAAoD,sBAAMA,UAAU,aAAhB,iCAE5E,qBAAKA,UAAS,+BAA0B+T,EAAmB,WAAW,YAAtE,SAC4B,aAAnBI,EACD,cAACxB,GAAD,CACAjI,sBAAuBA,EACvBC,kBAAmBA,EACnBC,YAAaA,EACbC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBC,OAAQA,IAGR,qCACA,sBAAKhL,UAAU,iBAAf,UACI,cAAC+N,GAAD,CACA/D,gBAAiBA,EACjBgE,gBAAiBA,EACjBnG,0BAA2BA,EAC3BoG,kBAAmBA,IAEnB,sBAAKjO,UAAU,oBAAf,UACQ,cAAC6O,GAAD,CACIJ,QAAS,MACT/B,YAAaA,EACbgC,aAAcA,IAElB,cAACG,GAAD,CACIJ,QAAS,YAGb,cAACM,GAAD,CACA5I,OAAQA,EACRC,UAAWA,EACX4I,mBAAoBA,EACpBC,kBAAmBA,UAI/B,qBAAKjP,UAAU,kBAAf,SACI,qBAAKA,UAAS,sBAAd,SACI,sBAAKA,UAAS,sBACVyU,SAAU,WACNtZ,QAAQC,IAAI,UACZgZ,GAAU,SAAAnL,GAAI,OAAEA,EAAK,MAH7B,UAMKhQ,EAAUsR,QAAQnN,OAAO,GACtB,cAACwQ,GAAD,CACIrD,QAAS8J,EACTvH,kBAAmBA,EACnBnC,kBAAmBA,EACnBD,sBAAuBA,EACvBqC,iBAAkBA,EAClBC,aAAcA,EACdC,aAAcA,EACdrC,YAAaA,EACbC,UAAWA,EACXqC,WAAYA,EACZpC,UAAWA,EACXC,kBAAmBA,EACnBC,OAAQA,EACRmC,mBAAoBA,EACpBC,uBAAwBA,IAI9BnU,EAAUjB,OAAOoF,OAAO,GACtB,cAACmP,GAAD,CACIvU,OAAQsc,EACR5J,sBAAuBA,EACvBC,kBAAmBA,EACnBC,YAAaA,EACbC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBC,OAAQA,IAId/R,EAAUjB,OAAOoF,OAAO,GAAGnE,EAAUsR,QAAQnN,OAAO,GAClD,sBAAK4C,UAAU,kBAAf,UACI,qBAAKA,UAAU,aAAf,gCAGA,qBAAKA,UAAU,aAAf,sDA7FW,8C,mDC7B1C0U,GAAb,4MACI/b,MAAM,CACFN,MAAM,GACN6G,KAAK,GACL0Q,KAAK,GACLV,gBAAe,GALvB,EAOIE,SAAW7M,IAAMoS,YAPrB,EA+BIC,UAAY,WACRzQ,YAAW,WACPU,SAASC,YAAY,aAAa,EAAO,QAC1C,IAlCX,EAoCI+P,sBAAwB,SAAC7V,GACrB,EAAKI,SAAS,CAACF,KAAMF,EAAGC,OAAOE,QAC/B,EAAKC,SAAS,CAAE/G,MAAM,2BAAM,EAAKM,MAAMN,OAAlB,IAAyB6G,KAAMF,EAAGC,OAAOE,WAtCtE,EAwCI2V,sBAAsB,SAAC9V,GACnB,EAAKI,SAAS,CAACwQ,KAAM5Q,EAAGC,OAAOE,QAC/B,EAAKC,SAAS,CAAE/G,MAAM,2BAAM,EAAKM,MAAMN,OAAlB,IAAyBuX,KAAM5Q,EAAGC,OAAOE,WA1CtE,EA4CI4V,wBAAwB,SAAC5V,GACjB,IAAIwP,EAAU,GAyDd,MAxDW,SAARxP,EACCwP,EAAQ/L,KACJ,cAAC,KAAD,CACIgC,QAAS,EAAKgQ,UACd5U,UAAU,mBACVgV,SAAU,EAAKC,kBACfC,KAAM,EAAKvc,MAAMuG,KACjBiW,UAAU,EACVlV,SAAU,EAAK4U,sBACfpQ,OAAQ,WAGJ,IAAM2Q,EAAY,2BACX,EAAKvX,MAAMxF,OADA,IAEd6G,KAAM,EAAKvG,MAAMuG,OAErB,EAAKrB,MAAMwX,YAAYD,GACvB,EAAKvX,MAAMuM,gBAAgBgL,IAG/BpQ,UAAW,SAAChG,GACO,UAAXA,EAAGiG,KACHjG,EAAGC,OAAOkN,WAM1BwC,EAAQ/L,KACJ,cAAC,KAAD,CACIgC,QAAS,EAAKgQ,UACd5U,UAAU,mBACVgV,SAAU,EAAKM,kBACfJ,KAAM,EAAKvc,MAAMiX,KACjBuF,UAAU,EACVlV,SAAU,EAAK6U,sBACfrQ,OAAQ,WAIJ,IAAM2Q,EAAY,2BACX,EAAKvX,MAAMxF,OADA,IAEduX,KAAK,EAAKjX,MAAMiX,OAEpB,EAAK/R,MAAMwX,YAAYD,GACvB,EAAKvX,MAAMuM,gBAAgBgL,IAE/BpQ,UAAW,SAAChG,GACO,UAAXA,EAAGiG,KACHjG,EAAGC,OAAOkN,WAOvBwC,GAtGnB,EA8GIxR,uBAAuB,WACpB,EAAKU,MAAMV,uBAAuB,EAAKU,MAAMlG,aAAa,EAAKkG,MAAMxF,MAAMU,MA/GlF,4KASWoF,KAAKN,MAAMxF,QACV8F,KAAKiB,SAAS,CAACF,KAAKf,KAAKN,MAAMxF,MAAM6G,OACrCf,KAAKiB,SAAS,CAACwQ,KAAKzR,KAAKN,MAAMxF,MAAMuX,OACrCzR,KAAKiB,SAAS,CAAC/G,MAAM8F,KAAKN,MAAMxF,SAGpC8F,KAAK8W,kBAAoB1S,IAAMoS,YAC/BxW,KAAKmX,kBAAoB/S,IAAMoS,YAhBvC,wLAkB6BY,EAAWlW,GAlBxC,iEAmBYkW,EAAUC,MAAMjV,OAAOuC,KAAQ3E,KAAKN,MAAM2X,MAAMjV,OAAOuC,KAC3D3E,KAAKiB,SAAS,CAACF,KAAKf,KAAKN,MAAMxF,MAAM6G,OACrCf,KAAKiB,SAAS,CAACwQ,KAAKzR,KAAKN,MAAMxF,MAAMuX,OACrCzR,KAAKiB,SAAS,CAAC/G,MAAM8F,KAAKN,MAAMxF,SAG5Bkd,EAAUld,MAAM6G,OAAUf,KAAKN,MAAMxF,MAAM6G,OAC3Cf,KAAKiB,SAAS,CAACF,KAAKf,KAAKN,MAAMxF,MAAM6G,OACrCf,KAAKiB,SAAS,CAACwQ,KAAKzR,KAAKN,MAAMxF,MAAMuX,OACrCzR,KAAKiB,SAAS,CAAC/G,MAAM8F,KAAKN,MAAMxF,SA5B5C,kJA0GY,GAAG8F,KAAKN,MAAMlG,aAAakF,UAAU2I,SAASrH,KAAKxF,MAAMN,MAAMU,KAC3D,MAAO,QA3GvB,+BAiHc,IAAD,SAIDoF,KAAKN,MAFL4X,EAFC,EAEDA,cACArP,EAHC,EAGDA,UAEG/N,EAAS8F,KAAKxF,MAAdN,MACP,OAAKA,EAEL,sBAAK2H,UAAU,eAAf,UACgB,sBAAKA,UAAU,aAAf,UACI,gCACI,sBAAMA,UAAU,cAAhB,SAEK7B,KAAK4W,wBAAwB,UAElC,sBAAK/U,UAAU,sBAAf,UACI,cAAC,KAAD,CACAA,UAAS,yBAAoB7B,KAAKuX,oBAClC1T,QAAS7D,KAAKhB,yBAEbgB,KAAKN,MAAMlG,aAAakF,UAAU2I,SAASnN,EAAMU,KAAK,sBAAMiH,UAAU,sBAAhB,mCACvD,sBAAMA,UAAU,sBAAhB,oCAGR,gCACI,qBAAKA,UAAU,gBAAf,iBAGA,sBAAKA,UAAU,qBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,qBAAK2V,IAAI,uDAAuDC,IAAI,OAExE,qBAAK5V,UAAU,uBAAf,SACI,qBAAK2V,IAAI,wDAAwDC,IAAI,UAG7E,oDAEJ,sBAAK5V,UAAU,oBAAf,UACI,cAAC,KAAD,IACA,mDAEJ,sBAAKA,UAAU,oBAAf,UACI,cAAC,KAAD,IACA,2CAEJ,qBAAKA,UAAU,mBAAf,4BAGA,qBAAKA,UAAU,qBAAf,SACI,cAAC,KAAD,YAIZ,qBAAKA,UAAU,aAAf,SAEC7B,KAAK4W,wBAAwB,UAE9B,sBAAK/U,UAAU,gBAAf,UACI,gCACI,cAAC,KAAD,CAASsE,MAAO,CAAEiQ,MAAO,OAAQC,OAAQ,UACzC,sBAAMxU,UAAU,aAAhB,4BACA,cAAC,KAAD,CAAgBsE,MAAO,CAAEiQ,MAAO,OAAQC,OAAQ,aAEpD,sBAAKxU,UAAU,mBAAf,UACI,sBAAKgC,QAASyT,EAAd,UACI,4CACA,cAAC,KAAD,CAAgBnR,MAAO,CAAEiQ,MAAO,OAAQC,OAAQ,aAEpD,qBAAKxU,UAAU,wBAAf,SACE7B,KAAKxF,MAAMuW,eAcb,uBAAOlP,UAAU,4BAA4B+E,IAAK5G,KAAKiR,SAAUvW,KAAK,SAASoH,SAAU,SAACsG,GAAD,OAAOH,EAAUG,EAAEtH,OAAOE,QACnHe,YAAY,SACZuE,OAAQ,SAAC8B,GACe,KAAjBA,EAAEtH,OAAOE,OACZ,EAAKC,SAAS,CAAC8P,gBAAe,KAGlClK,UAAW,SAAChG,GACO,UAAXA,EAAGiG,KACHjG,EAAGC,OAAOkN,UAtBlB,sBAAKnK,QAAS,WACV,EAAK5C,SAAS,CAAC8P,gBAAe,IAC/B/K,YAAW,WACJ,EAAKiL,UAAU,EAAKA,SAAShL,SAC3B,EAAKgL,SAAShL,QAAQC,UAE5B,IAENrE,UAAU,oBARV,UAUI,cAAC,KAAD,IACA,+CAiBJ,gCACI,cAAC,KAAD,IACA,6CAEJ,gCACI,cAAC,KAAD,IACA,6CAEJ,gCACI,cAAC,KAAD,IACA,2CAEJ,8BACI,cAAC,KAAD,eA3GT,kDAvH3B,GAAkC1B,aAgP5BC,GAAqB,CACvBwL,kBACAC,mBACA7M,0BACAiN,oBAESyL,GAAcpX,aAbH,SAAA9F,GACpB,MAAO,CACHb,WAAYa,EAAMM,UAAUnB,WAC5BO,MAAOM,EAAMM,UAAUhB,UACvBN,aAAcgB,EAAMpB,KAAKI,gBASmB4G,GAAzBE,CAA6CuE,YAAW0R,K,SCtQtEoB,GAAb,4MACInd,MAAM,CACFod,mBAAkB,EAClBlc,MAAM,IAHd,EASImc,sBAAwB,SAAChX,GACrB,EAAKI,SAAS,CAAEvF,MAAM,2BAAM,EAAKlB,MAAMkB,OAAlB,IAAyBqF,KAAMF,EAAGC,OAAOE,UAAU,WACpE,EAAKtB,MAAMoY,YAAY,EAAKtd,MAAMkB,WAX9C,EAcIqc,kBAAkB,WACd,EAAK9W,SAAS,CAACvF,MAAM,EAAKgE,MAAMsY,cAAa,WACzC,EAAK/W,SAAS,CAAC2W,mBAAkB,IAAM,WACnC,EAAKK,kBAAkBhS,QAAQC,QAC/B,EAAK+R,kBAAkBhS,QAAQiS,gBAlB/C,4KAMQlY,KAAKiB,SAAS,CAACvF,MAAMsE,KAAKN,MAAMsY,cAChChY,KAAKiY,kBAAoB7T,IAAMoS,YAPvC,qIAuBc,IAAD,SAC+BxW,KAAKxF,MAAjCod,EADH,EACGA,kBAAkBlc,EADrB,EACqBA,MAClBsc,EAAgBhY,KAAKN,MAArBsY,YACR,OACI,sBACInW,UAAU,kBACVgC,QAAS7D,KAAK+X,kBAFlB,SAIMH,EACE,uBACA/V,UAAU,0BACVnH,KAAK,OACLsG,MAAOtF,EAAMqF,KACbe,SAAU9B,KAAK6X,sBACfjR,IAAK5G,KAAKiY,kBACV3R,OAAQ,WACJ,EAAKrF,SAAS,CAAC2W,mBAAkB,KAErC/Q,UAAW,SAAChG,GACO,UAAXA,EAAGiG,MACHjG,EAAGC,OAAOkN,OACV,EAAK/M,SAAS,CAAC2W,mBAAkB,QAKzC,+BAAOI,EAAYjX,aAjDvC,GAAqCZ,aCExBgY,GAAb,4MACI3d,MAAM,CACF4d,oBAAmB,EACnBC,cAAc,KACdC,UAAU,IAJlB,EASIC,yBAAyB,SAACD,GACtB,EAAKrX,SAAS,CAACmX,oBAAoB,EAAK5d,MAAM4d,qBAAoB,WAC9D,EAAK1Y,MAAM8Y,gBAAgB,EAAKhe,MAAM4d,uBAE1C,EAAKnX,SAAS,CAACqX,eAbvB,EAeIG,sBAAsB,SAACC,GACnB,EAAKzX,SAAS,CAACoX,cAAcK,KAhBrC,EAkBIC,sBAAsB,WAClB,EAAK1X,SAAS,CAACoX,cAAc,QAnBrC,EAqBIO,YAAY,SAACrS,GACN,EAAK/L,MAAM4d,qBACd,EAAKnX,SAAS,CAACqX,UAAU,2BAAI,EAAK9d,MAAM8d,WAAhB,IAA2B/R,MAAMA,MACzD,EAAKtF,SAAS,CAACmX,oBAAmB,IAAO,WACrC,EAAK1Y,MAAM8Y,gBAAgB,EAAKhe,MAAM4d,oBACtC,EAAK1Y,MAAMoY,YAAY,EAAKtd,MAAM8d,gBA1B9C,4KAOQtY,KAAKiB,SAAS,CAACqX,UAAUtY,KAAKN,MAAMsY,cAP5C,qIA+Bc,IAAD,SACoChY,KAAKxF,MAAtC4d,EADH,EACGA,mBADH,KACsBE,UAC8CtY,KAAKN,OAAtEmZ,EAFH,EAEGA,UAAUb,EAFb,EAEaA,YAAYjT,EAFzB,EAEyBA,aAAa8F,EAFtC,EAEsCA,IAAIiN,EAF1C,EAE0CA,YAAagB,EAFvD,EAEuDA,SAC5D,OACI,qCACA,8CAAKjX,UAAS,kCAA6BgJ,EAAI,EAAE,aAAa,IAAMjE,IAAKkS,EAASjC,UAAciC,EAASC,gBAAzG,cACA,6CAAKlX,UAAU,yBAA6BiX,EAASE,iBAArD,qBAGA,sBACI/K,MAAK,UAAK+J,EAAYjX,MACtBc,UAAS,0BAAqBmW,EAAYjX,KAAK9B,OAAO,GAAG,2BAA2B,IACpFga,SAAS,IAHb,UAKMb,EAKE,sBAAMvW,UAAU,mBAAmBsE,MAAO,CAACC,gBAAgB,GAAD,OAAIpG,KAAKxF,MAAM6d,cAAcrY,KAAKxF,MAAM6d,cAAcL,EAAYzR,QAAU1C,QAAS,kBAAI,EAAK0U,yBAAyBP,IAAjL,SACI,cAACa,EAAD,CAAWhX,UAAS,oBAAmC,UAApBmW,EAAYzR,MAAgB,2BAA2B,QAL9F,sBAAM1E,UAAU,mBAAmBsE,MAAO,CAACC,gBAAgB,GAAD,OAAI4R,EAAYzR,QAAU1C,QAAS,kBAAI,EAAK0U,yBAAyBP,IAA/H,SACI,cAACa,EAAD,CAAWhX,UAAS,oBAAmC,UAApBmW,EAAYzR,MAAgB,2BAA2B,QAWlG,cAAC,GAAD,CAAiByR,YAAaA,EAAaF,YAAaA,OAE5D,sBAAKjW,UAAU,0BAA0BgC,QAAS,kBAAI,EAAKnE,MAAMwZ,cAAclB,EAAYpd,MAA3F,UACI,cAAC,KAAD,IACA,sBAAMiH,UAAU,oBAAhB,kCAIPuW,GACD,qBAAKvW,UAAU,mBAAmBsE,MAAO,CAACgT,aAActO,EAAI,EAAEA,EAAI,EAAEA,EAAI,EAAEuO,WAAWvO,EAAI,EAAEA,EAAI,EAAEA,GAAjG,SACI,qBAAKhJ,UAAU,sBAAf,SACKkD,EAAa/J,KAAI,SAAAuL,GAAK,OACnB,qBACA1E,UAAU,QACVsE,MAAO,CAACC,gBAAgB,GAAD,OAAIG,IAC3B8S,aAAc,kBAAM,EAAKZ,sBAAsBlS,IAC/CyC,aAAc,kBAAM,EAAK2P,yBACzB9U,QAAS,kBAAI,EAAK+U,YAAYrS,oBA3ElD,GAAwCpG,aCJ1B4E,GAAe,CACzB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,S,SCtBSuU,GAAb,4MACI9e,MAAM,CACFL,gBAAgB,GAChBof,mBAAkB,EAClBC,uBAAsB,EACtBnB,cAAc,KACdD,oBAAmB,EACnBE,UAAU,GACVE,iBAAgB,EAChBiB,UAAU,MATlB,EAkBIC,kBAAkB,WACd,EAAKzY,SAAS,CAACsY,mBAAmB,EAAK/e,MAAM+e,qBAnBrD,EAqBII,iBAAiB,WACV,EAAKnf,MAAMgf,wBACd,EAAKvY,SAAS,CAACsY,mBAAkB,IACjC,EAAKK,yBAxBb,EA0BIvF,WAAW,SAACX,EAAMrY,EAAK2c,GACnB,IAAM1D,EAAW,2BACVjZ,GADU,IAEb+B,OAAO4a,IAEX,EAAKtY,MAAMma,WAAWnG,EAAMY,GAC5B,EAAKrT,SAAS,CAACsY,mBAAkB,KAhCzC,EAkCIO,oBAAoB,WAChB,EAAK7Y,SAAS,CAACuY,uBAAsB,KAnC7C,EAqCII,qBAAqB,WACjB,EAAK3Y,SAAS,CAACuY,uBAAsB,KAtC7C,EAwCIf,sBAAsB,SAACC,GACnB,EAAKzX,SAAS,CAACoX,cAAcK,KAzCrC,EA2CIC,sBAAsB,WAClB,EAAK1X,SAAS,CAACoX,cAAc,QA5CrC,EA8CI0B,cAAc,SAACrB,GACkC,KAA1C,EAAKhZ,MAAMxF,MAAMC,gBAAgB8E,QACpC,EAAKgC,SAAS,CACV9G,gBAAgB,GAAD,mBACR,EAAKuF,MAAMxF,MAAMC,iBADT,CAEX,CACIS,KAAK,IAAIyW,MAAQ8C,UAAU5C,WAC3BhL,MAAMmS,EACN3X,KAAK,iBAGf,WACE,IAAM5F,EAAQ,2BAAO,EAAKuE,MAAMxF,OAAlB,IACTC,gBAAgB,GAAD,mBAAK,EAAKuF,MAAMxF,MAAMC,iBAAtB,CAAsC,CAClDS,KAAK,IAAIyW,MAAQ8C,UAAU5C,WAC3BhL,MAAMmS,EACN3X,KAAK,iBAGb,EAAKrB,MAAMwX,YAAY/b,OAjEnC,EAoEI+d,cAAc,SAACvd,GACX,IAAMqe,EAAqB,EAAKxf,MAAML,gBAAgBQ,QAAO,SAAAe,GAAK,OAAEA,EAAMd,MAAMe,KAChF,EAAKsF,SAAS,CACV9G,gBAAgB6f,IAClB,WACE,IAAM7e,EAAQ,2BAAO,EAAKuE,MAAMxF,OAAlB,IACVC,gBAAgB6f,IAEpB,EAAKta,MAAMwX,YAAY/b,OA5EnC,EA+EI2c,YAAY,SAACrc,GACT,IAAMue,EAAqB,EAAKta,MAAMxF,MAAMC,gBAAgBa,KAAI,SAAAU,GAAK,OAAEA,EAAMd,MAAMa,EAASb,IAAIa,EAASC,KACzG,EAAKuF,SAAS,CACV9G,gBAAgB6f,IAClB,WACE,IAAM7e,EAAQ,2BAAO,EAAKuE,MAAMxF,OAAlB,IACVC,gBAAgB6f,IAEpB,EAAKta,MAAMwX,YAAY/b,OAvFnC,EA0FIod,yBAAyB,SAACD,GACtB,EAAKrX,SAAS,CAACmX,oBAAoB,EAAK5d,MAAM4d,qBAC9C,EAAKnX,SAAS,CAACqX,eA5FvB,EA8FIE,gBAAgB,SAACyB,GACVA,EACC,EAAKhZ,SAAS,CAACuX,iBAAgB,IAE/B,EAAKvX,SAAS,CAACuX,iBAAgB,KAlG3C,EAqGI0B,cAAc,YAA0B,IAAxBC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OAC1B,GAAID,IAIDA,EAAY9L,QAAQ+L,EAAO/L,OAAO8L,EAAYE,cAAcD,EAAOC,aAAtE,CAKA,IAAMC,EAAmB,eAAO,EAAK5a,MAAMxF,MAAMC,gBAAgBigB,EAAO/L,QACxE,EAAKpN,SAAS,CACTwY,UAAU,eAAI,EAAKjf,MAAMif,aACtB,WAGC,OAFA,EAAKjf,MAAMif,UAAUtf,gBAAgBogB,OAAOH,EAAO/L,MAAM,GACzD,EAAK7T,MAAMif,UAAUtf,gBAAgBogB,OAAOJ,EAAY9L,MAAO,EAAGiM,GAC3D,EAAK9f,MAAMif,aAG1B,EAAK/Z,MAAMwX,YAAY,EAAK1c,MAAMif,aAxH1C,kLAactf,EAbd,YAaoC6F,KAAKN,MAAMxF,MAAMC,iBAC7C6F,KAAKiB,SAAS,CAAC9G,oBACf6F,KAAKiB,SAAS,CAACwY,UAAUzZ,KAAKN,MAAMxF,QAf5C,qIA0Hc,IAAD,SACkF8F,KAAKxF,MAApF+e,EADH,EACGA,kBAAkBC,EADrB,EACqBA,sBADrB,KAC2Crf,gBAD3C,EAC2Die,mBACApY,KAAKN,OAA7DrE,EAFH,EAEGA,KAAOqY,EAFV,EAEUA,MAAOzB,EAFjB,EAEiBA,QAASuI,EAF1B,EAE0BA,YAAuBtgB,GAFjD,EAEsC2f,WAFtC,EAEiD3f,OAEtD,OAAKmB,EAED,mCACA,sBAAKwG,UAAU,uBACdwE,SAAS,IACTC,OAAQtG,KAAK2Z,iBAFd,UAIA,qBAAK9X,UAAU,mBAAmBsE,MAAO,CAACC,gBAAgB,GAAD,OAAI/K,EAAK+B,OAAOmJ,QAAU1C,QAAS7D,KAAK0Z,kBAAjG,SACI,qBAAK7X,UAAU,uBAAf,SACCxG,EAAK4W,GAASlR,SAInB,sBAAKc,UAAU,mBAAf,UAEI0X,IACKC,GACD,sBAAK3X,UAAU,uBAAf,UACI,qBAAKA,UAAU,8BAAf,SAEI3H,EAAMC,gBAAgBa,KAAI,SAACgd,EAAYnN,GAAb,OACtB,qBACAoD,MAAK,UAAK+J,EAAYjX,MACtBc,UAAS,qBAAgBmW,EAAYjX,KAAK9B,OAAO,GAAG,sBAAsB,IAC1Ega,SAAS,IACT9S,MAAO,CAACC,gBAAgB,GAAD,OAAI4R,EAAYzR,QACvC8C,YAAa,kBAAI,EAAKgL,WAAWX,EAAMrY,EAAK2c,IAL5C,SAOIA,EAAYjX,YAIxB,sBAAKc,UAAU,+BAA+BgC,QAAS7D,KAAK8Z,oBAA5D,UACI,cAACU,EAAD,CAAa3Y,UAAU,uBACvB,yDAIZ0X,GACCC,GACG,sBAAK3X,UAAU,uBAAf,UACI,cAAC,KAAD,CAAkB4Y,UAAWza,KAAKka,cAAlC,SACI,cAAC,KAAD,CAAWQ,YAAY,kBAAvB,SACC,SAAC5B,GAAD,OACG,8CAAKjX,UAAS,2CAAsC,EAAKrH,MAAMge,gBAAgB,qBAAqB,KAAgCM,EAAS6B,gBAA7I,IAA6J/T,IAAKkS,EAASjC,SAA3K,UAEI3c,EAAMC,gBAAgBa,KAAI,SAACgd,EAAY3J,GAAb,OACtB,cAAC,KAAD,CAAiCgM,YAAarC,EAAYpd,IAAKyT,MAAOA,EAAtE,SACK,SAACyK,GAAD,OACG,cAAC,GAAD,CACAA,SAAUA,EACVD,UAAWA,KACX+B,SAAU/B,KACVb,YAAaA,EACbjT,aAAcA,GACdyT,gBAAiB,EAAKA,gBACtB3N,IAAKwD,EACL6K,cAAe,EAAKA,cACpBpB,YAAa,EAAKA,gBAXVE,EAAYpd,QAgB/BV,EAAMC,gBAAgB8E,OAAO,IAAI,qBAAK4C,UAAS,mCAA8B,EAAKrH,MAAM6d,cAAc,GAAG,WAAalS,MAAO,CAACC,gBAAgB,GAAD,OAAI,EAAK5L,MAAM6d,cAAc,EAAK7d,MAAM6d,cAAc,gBAAlK,uBAGjCS,EAAS/W,eAtBgG,yBA2BpH/B,KAAKxF,MAAMge,iBAAiB,qBAAK3W,UAAU,sBAAf,SACzBkD,GAAa/J,KAAI,SAAAuL,GAAK,OACnB,qBACA1E,UAAU,QACVsE,MAAO,CAACC,gBAAgB,GAAD,OAAIG,IAC3B8S,aAAc,kBAAM,EAAKZ,sBAAsBlS,IAC/CyC,aAAc,kBAAM,EAAK2P,yBACzB9U,QAAS,kBAAI,EAAKkW,cAAcxT,WAIxC,qBAAK1E,UAAU,mBAAmBgC,QAAS7D,KAAK4Z,qBAAhD,SACI,sDAnFF,kDA9H1B,GAAgCzZ,aCNnB0a,GAAW,CACpB,CACI9Z,KAAM,WACNuH,IAAI,4BACJwS,eAAgB,KAChBC,MAAM,SAEV,CACIha,KAAM,WACNuH,IAAI,8BACJwS,eAAgB,KAChBC,MAAM,OAEV,CACIha,KAAM,WACNuH,IAAI,8BACJwS,eAAgB,KAChBC,MAAM,UAEV,CACIha,KAAM,UACNuH,IAAI,eACJwS,eAAgB,KAChBC,MAAM,SAEV,CACIha,KAAM,UACNuH,IAAI,eACJwS,eAAgB,KAChBC,MAAM,OAEV,CACIha,KAAM,UACNuH,IAAI,eACJwS,eAAgB,KAChBC,MAAM,QAEV,CACIha,KAAM,WACNuH,IAAI,eACJwS,eAAgB,KAChBC,MAAM,SAEV,CACIha,KAAM,WACNuH,IAAI,eACJwS,eAAgB,KAChBC,MAAM,OAEV,CACIha,KAAM,SACNuH,IAAI,cACJwS,eAAgB,KAChBC,MAAM,QAEV,CACIha,KAAM,YACNuH,IAAI,qBACJwS,eAAgB,KAChBC,MAAM,SAEV,CACIha,KAAM,YACNuH,IAAI,oBACJwS,eAAgB,KAChBC,MAAM,OAEV,CACIha,KAAM,WACNuH,IAAI,gBACJwS,eAAgB,KAChBC,MAAM,QAEV,CACIha,KAAM,aACNuH,IAAI,kBACJwS,eAAgB,KAChBC,MAAM,SAEV,CACIha,KAAM,QACNuH,IAAI,aACJwS,eAAgB,KAChBC,MAAM,OAEV,CACIha,KAAM,gBACNuH,IAAI,qBACJwS,eAAgB,KAChBC,MAAM,QAEV,CACIha,KAAM,iBACNxB,SAAS,yFACTub,eAAgB,OAEpB,CACI/Z,KAAM,SACNxB,SACE,0FACFub,eAAgB,OAEpB,CACI/Z,KAAM,UACNxB,SACE,kFACFub,eAAgB,OAEpB,CACI/Z,KAAM,UACNxB,SACE,2FACFub,eAAgB,OAEpB,CACI/Z,KAAM,cACNxB,SACE,uFACFub,eAAgB,OAEpB,CACI/Z,KAAM,aACNxB,SACE,oGACFub,eAAgB,OAQpB,CACI/Z,KAAM,gBACNxB,SACE,0FACFub,eAAgB,OAEpB,CACI/Z,KAAM,cACNxB,SACE,uFACFub,eAAgB,OAEpB,CACI/Z,KAAM,UACNxB,SACE,mFACFub,eAAgB,QChJjB,SAASE,GAAT,GAA2D,IAAxCnB,EAAuC,EAAvCA,WAAWnG,EAA4B,EAA5BA,MAAMrY,EAAsB,EAAtBA,KAAK4f,EAAiB,EAAjBA,gBAAiB,EACrC7V,mBAAS,IAD4B,oBACtD8V,EADsD,KAChDC,EADgD,OAEzB/V,oBAAS,GAFgB,oBAEtDgW,EAFsD,KAE1CC,EAF0C,OAGzBjW,oBAAS,GAHgB,oBAGtDkW,EAHsD,KAGzCC,EAHyC,KAIvDtK,EAAWnL,mBAEjBC,qBAAU,WACH1K,EAAK6f,MACJC,EAAQ9f,EAAK6f,QAElB,CAAC7f,IAoCJ,OACI,qBACCwG,UAAU,YAAYgC,QApCV,WACbwX,GAAc,GACdJ,GAAgB,GAChBjV,YAAW,WACPiL,EAAShL,QAAQC,UACf,IA8BN,SAKKkV,EACG,sBAAKvZ,UAAU,qBAAf,UACI,uBACAnH,KAAK,OACLoH,SAAU,SAACsG,GAAD,OAAK+S,EAAQ/S,EAAEtH,OAAOE,QAChCA,MAAOka,EACP5U,OAAQ,WAEA,IAAMgO,EAAW,2BACVjZ,GADU,IAEb6f,KAAMA,IAEVrB,EAAWnG,EAAMY,GACjB+G,GAAc,GACdE,GAAa,GACbN,GAAgB,IAGxBrU,IAAKqK,EACLpK,UAAW,SAAChG,GACO,UAAXA,EAAGiG,KACHjG,EAAGC,OAAOkN,UAIlB,uBAAMnM,UAAS,UAAKyZ,EAAY,SAAS,IAAzC,UACI,cAAC,KAAD,CAAYzX,QAAS,kBAAI0X,GAAa,SAAAzQ,GAAI,OAAGA,QAEzCwQ,GAAa,qBAAKzZ,UAAU,iCAAf,SACRgZ,GAAS7f,KAAI,SAAAwgB,GAAO,OACjB,sBACA3X,QAAS,kBAAIsX,GAAQ,SAAArQ,GAAI,OAAEA,EAAK,IAAI0Q,EAAQza,SAD5C,SAG6B,OAAzBya,EAAQV,eACR,mBAAGC,MAAK,UAAKS,EAAQlT,IAAb,YAAoBkT,EAAQT,MAA5B,cAER,qBAAKvD,IAAG,UAAKgE,EAAQjc,UAAYsC,UAAU,UAAU4V,IAAI,kBASjF,qBAAK5V,UAAU,eAAf,SACK,sBAAMA,UAAU,0BAA0B4Z,wBAAyB,CAACC,OA9E5D,SAACF,GACtB,IAAIG,EAASH,EAsBb,OArBAX,GAASxN,SAAQ,SAACuO,GACd,IAAIC,EAAM,GACV,OAAQD,EAAGd,gBACP,IAAK,KACDe,EAAK,oBAAgBD,EAAGtT,IAAnB,YAA0BsT,EAAGb,MAA7B,UACL,MACJ,IAAK,MACDc,EAAK,yCACMD,EAAGrc,SADT,qDAQb,IADA,IAAIuc,EAAO,GACJH,IAAWG,GAAM,CACtBA,EAAOH,EACP,IAAMI,EAAYH,EAAG7a,KACrB4a,EAASA,EAAOK,QAAQD,EAAUF,OAGjCF,EAuDkFM,CAAmBf,UCnG7G,SAASgB,GAAT,GAA+C,IAAxBrC,EAAuB,EAAvBA,WAAWnG,EAAY,EAAZA,MAAMrY,EAAM,EAANA,KAAM,EACvB+J,oBAAS,GADc,oBAC1C+W,EAD0C,KACnCC,EADmC,KAGjDrW,qBAAU,WACH1K,EAAKghB,UACJD,EAAS/gB,EAAKghB,YAEnB,CAAChhB,IAUJ,OACI,qBACAwG,UAAU,iBACVgC,QAAS,kBAXK,SAACkH,GACfqR,EAASrR,GACT,IAAMuJ,EAAW,2BACVjZ,GADU,IAEbghB,SAAUtR,IAEd8O,EAAWnG,EAAMY,GAKJgI,EAAaH,IAF1B,SAII9gB,EAAKghB,SACL,cAAC,KAAD,CAASxa,UAAU,eAClB,KCtBN,SAAS0a,GAAT,GAA+D,IAApCC,EAAmC,EAAnCA,sBAAsBnhB,EAAa,EAAbA,KAAKqY,EAAQ,EAARA,MAAQ,EACxBtO,mBAAS/J,EAAK+W,eADU,oBAC1DA,EAD0D,KAC5CqK,EAD4C,KAE3D5d,EAAWqI,cAMjB,OAJAnB,qBAAU,WACN0W,EAAiBphB,EAAK+W,iBACvB,CAAC/W,IAGA,mCACI,sBAAKwG,UAAU,4BAAf,UACI,cAAC,KAAD,CAAqBA,UAAU,sBAC/BgC,QAAS,WACLhF,EAASmN,GACL,CACI1Q,OAAOD,EAAKT,IACZ6Y,QAAQC,EAAM9Y,OAGtB4hB,OAGHpK,EAAcnT,OAAO,GAAG,qBAAK4C,UAAU,sBAAf,SACpBuQ,EAAcnT,SAEnB,sBAAM4C,UAAU,wBAAhB,qCC1BT,SAAS6a,GAAT,GAIJ,IAHCrhB,EAGF,EAHEA,KACAqY,EAEF,EAFEA,MACAmG,EACF,EADEA,WAEMhb,EAAWqI,cACXzN,EAAQ0N,aAAY,SAAA3M,GAAK,OAAIA,EAAMpB,KAAKK,SAFhD,EAG8B2L,mBAAS,MAHvC,oBAGSuX,EAHT,KAGiBC,EAHjB,OAIkCxX,mBAAS,MAJ3C,oBAISyX,EAJT,KAImBC,EAJnB,OAK8B1X,mBAAS,IALvC,oBAKS4C,EALT,KAKiBC,EALjB,KAOElC,qBAAU,WACNlH,EAASD,OACV,CAACC,IAcJkH,qBAAU,WAEN,IAde0E,EAAOsS,EAAOjW,EAcvBkW,EAAavjB,EAAMkB,QAAO,SAAAvB,GAAI,OAChCiC,EAAK0W,MAAM1K,SAASjO,EAAKwB,QAEvBqiB,EAAS,YAAO5hB,EAAK0W,OACrBmL,GAlBgBH,EAkBoBE,EAlBbnW,EAkBwB,OAlBtC2D,EAkBeuS,GAjBxBtS,MAAM,SAAU9N,EAAG+N,GACvB,IAAIwS,EAAIvgB,EAAEkK,GAAMsW,EAAIzS,EAAE7D,GACtB,OAAIiW,EAAMM,QAAQF,GAAKJ,EAAMM,QAAQD,GAC5B,GAEC,KAGL3S,GAWPmS,EAAUM,KACX,CAAC7hB,EAAK5B,IAETsM,qBAAU,WACF,GAAG4W,EAAO,CACN,IAAMW,EAAS,GACfX,EAAO3hB,KAAI,SAAA+W,GAAK,OACZuL,EAAO7Y,KAAKsN,EAAMnX,QAEtBkiB,EACIrjB,EAAMkB,QAAO,SAAAvB,GAAI,OACZkkB,EAAOjW,SAASjO,EAAKwB,YAIvC,CAACnB,EAAMkjB,IAEV,IAeEY,EAAY,SAACxc,GAEf,IADA,IAAIyP,EAAW,GACNgN,EAAI,EAAGA,EAAIzc,EAAK9B,OAAQue,IAC7BhN,EAAQ/L,KACJ,sBAAM5C,UAAS,UAAKmG,EAAOK,cAAchB,SAAStG,EAAKyc,GAAGnV,eAAe,OAAO,IAAhF,SAAuFtH,EAAKyc,MAGpG,OAAOhN,GAEX,SAASiN,IAEL,IADA,IAAIjN,EAAW,GACNgN,EAAI,EAAGA,EAAI,GAAIA,IACpBhN,EAAQ/L,KACJ,sBAAM5C,UAAU,aAAhB,gBAKR,OAAO2O,EAEP,OACG,qCACK,qBAAK3O,UAAU,mBAAf,SACC8a,GAAQA,EAAO3hB,KAAI,SAAA+W,GAAK,OACpB,sBAAKlQ,UAAU,gBAAf,UACG,qBAAKA,UAAU,WAAW2V,IAAG,UAAKzF,EAAMzS,QAAUmY,IAAI,GAAGiG,OAAO,KAChE,sBAAM7b,UAAU,YAAhB,SAA6BkQ,EAAMvS,WACnC,sBAAMqC,UAAU,cAChBgC,QAAS,kBAnCP,SAAChJ,GACf,IAAMyZ,EAAW,2BACVjZ,GADU,IAEb0W,MAAM1W,EAAK0W,MAAMpX,QAAO,SAAAgK,GAAE,OAAEA,IAAK9J,OAErCgf,EAAWnG,EAAMY,GA8BQqJ,CAAY5L,EAAMnX,MAD/B,uBAMR,uBAAOF,KAAK,OAAOqH,YAAY,aAC/BF,UAAU,oBACVC,SAAU,SAACsG,GAAD,OAAKH,EAAUG,EAAEtH,OAAOE,UAElC,sBAAKa,UAAU,QAAf,UACK4b,IACF,sBAAM5b,UAAU,gBAAhB,sBACE4b,OAEJZ,GAAUA,EAAS7hB,KAAI,SAAA5B,GAAI,OAC5BA,EAAKoG,SAAS6I,cAAchB,SAASW,EAAOK,eACxC,sBAAKxG,UAAU,eAAegC,QAAS,kBA3D7B,SAAChJ,GACnB,IAAMyZ,EAAW,2BACVjZ,GADU,IAEb0W,MAAM,GAAD,mBAAK1W,EAAK0W,OAAV,CAAgBlX,MAEzBgf,EAAWnG,EAAMY,GAsDkCsJ,CAAgBxkB,EAAKwB,MAAhE,UACI,qBAAKiH,UAAU,WAAW2V,IAAG,UAAKpe,EAAKkG,QAAUmY,IAAI,GAAGiG,OAAO,KAC/D,sBAAM7b,UAAU,YAAhB,SACK0b,EAAYnkB,EAAKoG,eAI1B,W,aC1GT,SAASqe,GAAT,GAYJ,IAXCxiB,EAWF,EAXEA,KACAyiB,EAUF,EAVEA,SACApK,EASF,EATEA,MACAxZ,EAQF,EAREA,MACAgd,EAOF,EAPEA,YACA4B,EAMF,EANEA,SACAiF,EAKF,EALEA,WACAvB,EAIF,EAJEA,sBACAwB,EAGF,EAHEA,YACAnE,EAEF,EAFEA,WACAoE,EACF,EADEA,aAEMxkB,EAAQ0N,aAAY,SAAA3M,GAAK,OAAIA,EAAMpB,KAAKK,SACxCD,EAAe2N,aAAY,SAAA3M,GAAK,OAAIA,EAAMpB,KAAKI,gBAC/CO,EAAeoN,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUf,gBAH5D,EAI8BqL,mBAAS/J,GAJvC,oBAIS6iB,EAJT,KAImBC,EAJnB,OAKsD/Y,oBAAS,GAL/D,oBAKSgZ,EALT,KAK6BC,EAL7B,OAMsCjZ,oBAAS,GAN/C,oBAMSgW,EANT,KAMqBkD,EANrB,OAOmDlZ,oBAAS,GAP5D,oBAOSmZ,EAPT,KAO4BC,EAP5B,OAQ4CpZ,oBAAS,GARrD,oBAQSqZ,EART,KAQyBxD,EARzB,OASgC7V,oBAAS,IAAIiM,MAAO8C,WATpD,iCAU8C/O,mBAAS,KAVvD,oBAUSsZ,EAVT,aAWoCtZ,oBAAS,IAX7C,oBAWSuZ,EAXT,KAWoBC,EAXpB,OAY8BxZ,mBAAS/J,EAAK0W,OAZ5C,qBAYS4K,GAZT,MAYiBC,GAZjB,MAaQiC,GAAmB/Y,mBACnBuE,GAAQvE,mBACRgZ,GAAUhZ,iBAAO,MACjBjH,GAAWqI,cAEjBnB,qBAAU,WACNlH,GAASD,OACV,CAACC,KAcJkH,qBAAU,WAEN,IAde0E,EAAOsS,EAAOjW,EAcvBkW,EAAavjB,EAAMkB,QAAO,SAAAvB,GAAI,OAChCiC,EAAK0W,MAAM1K,SAASjO,EAAKwB,QAEvBqiB,EAAS,YAAO5hB,EAAK0W,OACrBmL,GAlBgBH,EAkBoBE,EAlBbnW,EAkBwB,OAlBtC2D,EAkBeuS,GAjBxBtS,MAAM,SAAU9N,EAAG+N,GACvB,IAAIwS,EAAIvgB,EAAEkK,GAAMsW,EAAIzS,EAAE7D,GACtB,OAAIiW,EAAMM,QAAQF,GAAKJ,EAAMM,QAAQD,GAC5B,GAEC,KAGL3S,GAWPmS,GAAUM,KACX,CAAC7hB,EAAK5B,EAAMD,IAEfuM,qBAAU,WACN,IzB2E2BzK,EyB3ErBF,EAAkB,CACpBR,IAAIS,EAAKT,IACT8Y,MAAMA,GAGN7U,GADD8f,EzB8DJ,SAAyBvjB,GAC5B,8CAAO,WAAMyD,GAAN,SAAAjC,EAAA,sDACH,IACIiC,EAAS,CAAEnE,KAAM,mBAAoBU,oBACxC,MAAM2Q,GACH/O,QAAQC,IAAI,4CAA6C8O,GAJ1D,2CAAP,sDyB9DiBgT,CAAgB3jB,IzBsEFE,EyBpEKD,EAAKT,IzBqEzC,uCAAO,WAAMiE,GAAN,SAAAjC,EAAA,sDACH,IACIiC,EAAS,CAAEnE,KAAM,sBAAuBY,WAC3C,MAAMyQ,GACH/O,QAAQC,IAAI,+CAAgD8O,GAJ7D,2CAAP,0DyBnEG,CAAC4S,EAAU9f,GAASxD,EAAKT,IAAI8Y,IAEhC3N,qBAAU,WACHkY,GACCW,GAAa,KAElB,CAACX,IAGJlY,qBAAU,WACPoY,EAAQ9iB,KACR,CAACA,IAEJ0K,qBAAU,WACJqY,GACHpY,YAAW,WACVqE,GAAMpE,QAAQC,UACZ,KAEH,CAACkY,IAGJrY,qBAAU,WACJqV,IACF+C,EAAQ9iB,GACRwjB,GAAiB5Y,QAAQC,WAEzB,CAACkV,EAAW/f,IAEhB,IAAMob,GAAY,WACdzQ,YAAW,WACPU,SAASC,YAAY,aAAa,EAAO,QAC1C,IAEDqY,GAAmB,SAACne,GACtBsd,EAAQ,2BACDD,GADA,IAEHnd,KAAMF,EAAGC,OAAOE,UAWlBie,GAAa,SAAChN,GAChB,IAAIzB,EAAU,GACd,OAAOyB,GACH,IAAK,OACDzB,EAAQ/L,KACR,eAAC,IAAMvC,SAAP,WACI,sBAAKL,UAAU,oBAAf,UACI,sBAAMA,UAAS,yBAAqBuZ,EAAW,0BAA0B,IAAzE,SACEA,EACE,uBACAvZ,UAAU,YACV4E,QAASgQ,GACT/b,KAAK,OACLqG,KAAK,OACL6F,IAAKiY,GACL7d,MAAOkd,EAASjM,GAChBnQ,SAAUkd,GACV1Y,OAAQ,WAGJ,IAAMgO,EAAW,2BACVjZ,GADU,IAEb0F,KAAMmd,EAASnd,OAEnB8Y,EAAWnG,EAAMY,GACjBgK,GAAc,IAElBzX,UAAW,SAAChG,GACO,UAAXA,EAAGiG,KACHjG,EAAGC,OAAOkN,UAIlB,sBACAnK,QAAS,WACLhF,GAASmN,GACL,CACI1Q,OAAOD,EAAKT,IACZ6Y,QAAQC,EAAM9Y,OAGtB4hB,KARJ,SAUEnhB,EAAK4W,OAGX,cAAC,KAAD,CAAapQ,UAAU,cAAcgC,QAAS,WAC1Cya,GAAc,SAItB,cAAC/B,GAAD,CACA7I,MAAOA,EACPrY,KAAMA,EACNmhB,sBAAuBA,QAK3B,MACJ,IAAK,QACDhM,EAAQ/L,KACJ,sBAAK5C,UAAS,gCAA2BxG,EAAK4W,GAAShT,OAAO,EAAE,WAAW,aAA3E,UAEI,cAAC,KAAD,CAAkB4C,UAAS,oBAAe0c,EAAkB,SAAS,MAGpEA,GACD,qBAAK1c,UAAU,kCACf+E,IAAKkY,GACLzY,SAAS,IAETC,OAAQ,kBAAIkY,GAAoB,IAJhC,SAMI,cAAC9B,GAAD,CACArhB,KAAMA,EACNwe,WAAYA,EACZnG,MAAOA,EACP8K,oBAAqBA,UAK9BnjB,EAAK4W,GAAShT,OAAO,GAAG0d,GAAO1d,OAAO,EAErCuR,EAAQ/L,KACJ,sBAAK5C,UAAU,kBAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,qBAAK2V,IAAG,UAAKmF,GAAO,GAAGrd,QAAUmY,IAAI,OAGrCpc,EAAK4W,GAAShT,OAAO,EACrB,sBAAK4C,UAAU,eAAf,cACMxG,EAAK4W,GAAShT,OAAO,KAE3B,SAKZuR,EAAQ/L,KACJ,cAAC,KAAD,CAAiB0B,MAAO,CAAEiQ,MAAO,OAAQC,OAAQ,OAAQ9P,MAAM,yBAGvE,MACJ,IAAK,YACD,GAAIlL,EAAK4W,GAIJ,CACD,IAAIiC,EAAO,IAAI7C,KAAKhW,EAAK4W,IACrBiN,EAAQhL,EAAKiL,WAAW,EACxBC,EAAMlL,EAAKmL,UACf7O,EAAQ/L,KACJ,eAAC,IAAMvC,SAAP,WACI,sBAAML,UAAU,QAAhB,SAAyByd,GAAaJ,KACtC,sBAAMrd,UAAU,MAAhB,SAAuBud,aAV/B5O,EAAQ/L,KACJ,UAaR,MACJ,IAAK,OACD+L,EAAQ/L,KACJ,cAACuW,GAAD,CAAUnB,WAAYA,EAAYxe,KAAMA,EAAMqY,MAAOA,EAAOuH,gBAAiBA,KAEjF,MACJ,IAAK,WACDzK,EAAQ/L,KACJ,cAACyX,GAAD,CAAcrC,WAAYA,EAAYxe,KAAMA,EAAMqY,MAAOA,KAE7D,MACJ,IAAK,cACErY,EAAK4W,IAGJzB,EAAQ/L,KACJ,qBAAK5C,UAAU,8BAAf,SACK6c,KAIb,MACJ,QACIlO,EAAQ/L,KAAKpJ,EAAK4W,IAG1B,OAAOzB,GAGX,SAAS8O,GAAaJ,GAClB,OAAOA,GACH,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,OACT,KAAK,GACH,MAAO,MACT,KAAK,GACH,MAAO,MACT,KAAK,GACH,MAAO,MACT,QACE,MAAO,OAIjB,IAAMK,GAAe,SAACxU,GAClB,OAAQA,GACJ,IAAK,OACD,MAAO,aACX,IAAK,WACD,MAAO,iBACX,QACI,MAAO,KAaf,OAAK1P,EAEZ,0DAAKwG,UAAS,4BAAuBkc,EAAW,gBAAgB,IAAMnX,IAAKkS,EAASjC,UAAciC,EAASC,gBAAqBD,EAASE,iBAAzI,cACW,qBACInX,UAAU,kBADd,SAGI,sBAAKA,UAAS,sBAAiBuc,EAAmB,sBAAsB,IAAMva,QAAS,kBAAIwa,GAAsB,IACjHhY,SAAS,IACTO,IAAKyD,GACJ/D,OAAQ,kBAAI+X,GAAsB,IAHnC,UAMI,qBAAKxc,UAAU,6DAAf,SACI,cAAC,KAAD,MAGRuc,GACI,sBAAKvc,UAAU,mCAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,cAAC,KAAD,CAAaA,UAAU,SACvB,sBAAMgC,QAAS,WACXya,GAAc,GACdD,GAAsB,IAF1B,4BAKJ,qBAAKxc,UAAU,qBAAf,SACI,sBAAKA,UAAU,6BAA6BgC,QAAS,kBAnC5D,SAACqa,GACd,IAAM5K,EAAQ,2BACPI,GADO,IAEVvB,MAAMuB,EAAMvB,MAAMxX,QAAO,SAAAU,GAAI,OAAEA,EAAKT,MAAMsjB,EAAStjB,SAEvDojB,EAAY1K,GACZ+K,GAAsB,GA6BuDjK,CAAW/Y,IAApE,UACI,cAAC,KAAD,CAAawG,UAAU,SACvB,uDAOpB,sBAAKA,UAAU,qBAAf,UACKic,EAAS9iB,KAAI,SAACiX,GAAD,MACA,WAAVA,EACA,cAAC,GAAD,CAAYA,QAASA,EAAS5W,KAAMA,EAAMqY,MAAOA,EAAO8G,YAAaA,KAAaX,WAAYA,EAAY3f,MAAOA,EAAOgd,YAAaA,IAGrI,sBAAKrV,UAAS,+BAA0B0d,GAAetN,GAAzC,YAAqDwM,EAAe,gBAAgB,IAClG5a,QAAS,WACS,UAAVoO,IA1PpBuM,GAAoB,SAAA1T,GAAI,OAAGA,KACxBgU,GAAQ7Y,SACP6Y,GAAQ7Y,QAAQC,UAsPR,UAKI,qBAAKrE,UAAS,oCAA+B9H,EAAakF,OAAO,EAAE,OAAO,IAAMkH,MAAO,CAACC,gBAAgB,GAAD,OAAIsN,EAAMnN,QAAjH,SACI,qBAAK1E,UAAS,2BAAsB8c,EAAU,UAAU,IAAM9a,QAAS,kBAAI+a,GAAa,SAAA9T,GAAI,OAAGA,MAA/F,SACK6T,GAAW,cAAC,KAAD,CAASxY,MAAO,CAACI,MAAM,GAAD,OAAImN,EAAMnN,cAGpD,qBAAK1E,UAAS,+BAAoC,SAAVoQ,EAAiB,oBAAoB,IAA7E,SAEKgN,GAAahN,WAI1B,qBAAKpQ,UAAU,gCAzDL,8CCtUnB,IAAM2d,GAAb,4MACIhlB,MAAM,CACFkZ,MAAM,GACNxZ,MAAM,GACNulB,gBAAgB,GAChBC,cAAa,GALrB,EA6BIjJ,UAAY,WACRzQ,YAAW,WACPU,SAASC,YAAY,aAAa,EAAO,QAC1C,IAhCX,EAmCIgZ,sBAAwB,SAAC9e,GACrB,EAAKI,SAAS,CAAEyS,MAAM,2BAAM,EAAKlZ,MAAMkZ,OAAlB,IAAyB3S,KAAMF,EAAGC,OAAOE,WApCtE,EAsCI4e,uBAAuB,SAAC/e,GACpB,EAAKI,SAAS,CAAEwe,gBAAe,2BAAO,EAAK/f,MAAMmgB,aAAlB,IAA+B5R,MAAMpN,EAAGC,OAAOE,UAAS,WACnF,EAAKC,SAAS,CAAE/G,MAAM,2BAAM,EAAKwF,MAAMxF,OAAlB,IAAyB8X,aAC1C,EAAKtS,MAAMxF,MAAM8X,aAAahX,KAAI,SAAA6kB,GAAW,OACzCA,EAAYjlB,MAAM,EAAKJ,MAAMilB,gBAAgB7kB,IAC7C,EAAKJ,MAAMilB,gBAAgBI,aA3C/C,EAgDIC,iBAAiB,SAACC,GACd,EAAK9e,SAAS,CAACye,aAAaK,KAjDpC,EAmDInJ,wBAAwB,SAAC5V,GAAS,IACvBgf,EAAc,EAAKtgB,MAAnBsgB,WACCxP,EAAU,GAyEd,MAxEmB,SAAhBxP,EAAMiR,QACLzB,EAAQ/L,KACJ,sBACA5C,UAAS,UAAK,EAAKnC,MAAMugB,sBAAsB,GAAG,sBAClD5Z,SAAS,IACTxC,QAAS,kBAAK,EAAKic,kBAAiB,IACpCxZ,OAAQ,WAEJ,EAAKwZ,kBAAiB,GACtB,EAAKpgB,MAAMwgB,wBAPf,UAYI,sBAAKre,UAAU,gBAAf,UACM,EAAKnC,MAAMygB,SACb,cAAC,KAAD,CAAiBte,UAAU,aAAagC,QAAS,kBAAI,EAAKnE,MAAM0gB,oBAAmB,MAD7D,cAAC,KAAD,CAAUve,UAAU,aAAagC,QAAS,kBAAI,EAAKnE,MAAM0gB,oBAAmB,MAElG,6CAAMve,UAAU,YAAgBme,EAAWhH,iBAA3C,aACA,cAAC,KAAD,UAGJ,cAAC,KAAD,CACAvS,QAAS,EAAKgQ,UACd5U,UAAS,2BAAsB,EAAKnC,MAAMugB,sBAAsB,QAAQ,IACxEpJ,SAAU,EAAKwJ,kBACftJ,KAAM,EAAKvc,MAAMkZ,MAAM3S,KACvBiW,UAAU,EACVlV,SAAU,EAAK6d,sBACfrZ,OAAQ,WACJ,GAAI,EAAK5G,MAAMgU,MAAM3S,OAAS,EAAKvG,MAAMkZ,MAAM3S,KAA/C,CAEA,IAAM6S,EAAY,2BACX,EAAKlU,MAAMgU,OADA,IAEd3S,KAAM,EAAKvG,MAAMkZ,MAAM3S,OAE3B,EAAKrB,MAAMse,YAAYpK,KAE3B/M,UAAW,SAAChG,GACO,UAAXA,EAAGiG,KACHjG,EAAGC,OAAOkN,cAO1BwC,EAAQ/L,KACJ,cAAC,KAAD,CACIgC,QAAS,EAAKgQ,UACd5U,UAAU,mBACVgV,SAAU,EAAKyJ,mBACfvJ,KAAM,EAAKvc,MAAMilB,gBAAgBxR,MACjC+I,UAAU,EACVlV,SAAU,EAAK8d,uBACftZ,OAAQ,WACH,GAAI,EAAK5G,MAAMmgB,YAAY5R,QAAU,EAAKzT,MAAMilB,gBAAgBxR,MAAhE,CAED,IAAMgJ,EAAY,2BACX,EAAKvX,MAAMxF,OADA,IAEd8X,aAAa,YAAK,EAAKxX,MAAMN,MAAM8X,gBAEvC,EAAKtS,MAAMwX,YAAYD,KAE3BpQ,UAAW,SAAChG,GACO,UAAXA,EAAGiG,KACHjG,EAAGC,OAAOkN,WAOvBwC,GA9HnB,kEAQQxQ,KAAKiB,SAAS,CAACyS,MAAM1T,KAAKN,MAAMgU,QAChC1T,KAAKiB,SAAS,CAAC/G,MAAM8F,KAAKN,MAAMxF,QAChC8F,KAAKiB,SAAS,CAACwe,gBAAgBzf,KAAKN,MAAMmgB,cAC1C7f,KAAKqgB,kBAAoBjc,IAAMoS,YAC/BxW,KAAKsgB,mBAAqBlc,IAAMoS,cAZxC,yCAcuBY,EAAWlW,GACtBA,EAAUue,gBAAgBxR,QAAUjO,KAAKxF,MAAMilB,gBAAgBxR,OAC/DjO,KAAKiB,SAAS,CAAC/G,MAAM8F,KAAKN,MAAMxF,QAEhCkd,EAAUyI,YAAY5R,QAAUjO,KAAKN,MAAMmgB,YAAY5R,OACvDjO,KAAKiB,SAAS,CAAC/G,MAAM8F,KAAKN,MAAMxF,QAEjCkd,EAAUld,QAAU8F,KAAKN,MAAMxF,QAC9B8F,KAAKiB,SAAS,CACV/G,MAAO8F,KAAKN,MAAMxF,QAEtB8F,KAAKiB,SAAS,CAACwe,gBAAgBzf,KAAKN,MAAMmgB,iBAzBtD,+BAiIc,IAAD,EACoD7f,KAAKN,MAA/CmgB,GADV,EACG3lB,MADH,EACU2lB,aAAanM,EADvB,EACuBA,MAAO6M,EAD9B,EAC8BA,kBACnC,OAAKV,EAED,qBAA2Bhe,UAAS,gCAAiD,aAAtBge,EAAY5N,QAAqB,iBAAiB,IAAM9L,MAAO,CAACI,MAAM,GAAD,OAAImN,EAAMnN,QAA9I,SAC2B,cAAtBsZ,EAAY5N,QACT,eAAC,IAAM/P,SAAP,WACI,cAACqe,EAAD,CAAmBpa,MAAO,CAAEiQ,MAAO,OAAQC,OAAQ,UACnD,+BAAOrW,KAAK4W,wBAAwBiJ,QAIxC7f,KAAK4W,wBAAwBiJ,IAR3BA,EAAYjlB,KAFD,kDAnIjC,GAAwCuF,a,UCkBjC,SAASqgB,GAAT,GAoBJ,IAlBC1C,EAkBF,EAlBEA,SACApK,EAiBF,EAjBEA,MACA6M,EAgBF,EAhBEA,kBACAE,EAeF,EAfEA,aACAC,EAcF,EAdEA,aACA7G,EAaF,EAbEA,WACAmE,EAYF,EAZEA,YACA9G,EAWF,EAXEA,YACAyJ,EAUF,EAVEA,aACAnN,EASF,EATEA,YACAgJ,EAQF,EAREA,sBACAwD,EAOF,EAPEA,WACAjC,EAMF,EANEA,WACA6C,EAKF,EALEA,SACAC,EAIF,EAJEA,SACA7Y,EAGF,EAHEA,OACAiW,EAEF,EAFEA,aAIMxkB,GAFR,EADEqf,SAGc3R,aAAY,SAAA3M,GAAK,OAAIA,EAAMpB,KAAKK,UACxCS,EAAQiN,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUhB,aAHrD,EAIwCsL,mBAAS,IAJjD,oBAIS0b,EAJT,KAIsBC,EAJtB,OAKoD3b,oBAAS,GAL7D,oBAKS4b,EALT,KAK4BC,EAL5B,OAMgE7b,oBAAS,GANzE,oBAMS8b,EANT,KAMkCC,EANlC,OAOgC/b,oBAAS,GAPzC,oBAOSgc,EAPT,KAOkBC,EAPlB,OAQ4Djc,oBAAS,GARrE,oBAQS6a,EART,KAQgCqB,EARhC,OASoClc,mBAASsO,GAT7C,oBASS6N,EATT,KASoBC,EATpB,OAUqCpc,oBAAS,GAV9C,oBAUS+a,EAVT,KAUmBsB,EAVnB,QAWoCrc,mBAAS,IAX7C,sBAWSsc,GAXT,MAWoBC,GAXpB,SAYkDvc,mBAAS,IAZ3D,sBAYSwc,GAZT,MAY2BC,GAZ3B,SAa2Czc,mBAAS,IAbpD,sBAaS0c,GAbT,MAawBC,GAbxB,SAcyC3c,mBAAS,IAdlD,sBAcS4c,GAdT,MAcuBC,GAdvB,MAeQC,GAAapc,iBAAO,MAf5B,GAgB0DV,oBAAS,GAhBnE,sBAgBS+c,GAhBT,MAgB+BC,GAhB/B,MAiBQvjB,GAAWqI,cAEjBnB,qBAAU,WACNlH,GAASD,OACV,CAACC,KAGJkH,qBAAU,WACN,IAAIsc,EAAS,GACb3O,EAAMvB,MAAMnX,KAAI,SAAAK,GAAI,OAChBgnB,EAAO,GAAD,mBAAKA,GAAL,YAAiBhnB,EAAK0W,WAEhC,IAAMuQ,EAAU,YAAO,IAAIC,IAAIF,IAC/BV,GACIloB,EAAMkB,QAAO,SAAAvB,GAAI,OACbkpB,EAAWjb,SAASjO,EAAKwB,WAGlC,CAAC8Y,EAAMA,EAAMvB,MAAM2O,EAAYrnB,IAGjCsM,qBAAU,WACP,IAAIyc,EAAO,GACPC,EAAoB,GACxB/O,EAAMvB,MAAMnX,KAAI,SAACK,EAAKwP,GACjB2X,EAAK,GAAD,mBAAMA,GAAN,CAAWnnB,EAAK+B,SACrBqlB,EAAiB,sBAAOA,GAAP,CAAyBpnB,EAAK+B,OAAO2D,UAE1D,IAAM2hB,EAAaF,EAAK9X,MAAK,SAAC9N,EAAG+N,GAAJ,OAAU/N,EAAEmE,KAAK6J,cAAcD,EAAE5J,SAC9DkhB,GAAgBO,EAAKvjB,QAGrB,IAAM0jB,EAA0BF,EAAkB/X,MAAK,SAAC9N,EAAG+N,GAAJ,OAAU/N,EAAEgO,cAAcD,MAC3EiY,EAAI,YAAO,IAAIL,IAAII,IAC1BZ,GAAgBa,GAEf,IAAIC,EAAgB,GACpBD,EAAK5nB,KAAI,SAAAiT,GAAK,OACV4U,EAAc,GAAD,OAAI5U,IAAS,CACtB6U,IAAIJ,EAAW/nB,QAAO,SAAAyC,GAAM,OAAEA,EAAO2D,OAAOkN,KAAOhP,OACnDsH,MAAMmc,EAAW/nB,QAAO,SAAAyC,GAAM,OAAEA,EAAO2D,OAAOkN,KAAO,GAAG1H,UAGhEsb,GAAoBgB,KAErB,CAACnP,EAAMA,EAAMvB,QAEfpM,qBAAU,WACPyb,EAAa9N,KACd,CAACA,IAEJ3N,qBAAU,WACN0b,GAAgBb,KACjB,CAACA,IAEJ7a,qBAAU,WACN8a,EAAS9C,KACV,CAACA,EAAW8C,IAEf,IAAMT,GAAmB,SAACpf,GACtBygB,EAAezgB,IAab+hB,GAAW,WACbhC,EAAe,KAiBbiC,GAAY,WACd3B,GAAW,SAAAvW,GAAI,OAAGA,MActB/E,qBAAU,WACFka,GACAiC,GAAWjc,QAAQC,UAExB,CAAC+Z,IAEJ,IAAMC,GAAqB,WACvBoB,GAAyB,IAoB7B,SAAS2B,GAAUvoB,GACf,IAAIwoB,EAAY,GACZjM,EAAe,GACnB,OAAQvc,GACJ,IAAK,SACDwoB,EAAY,CACRtoB,IAAIyW,KAAKC,MACTrD,MAAM,SACNvT,KAAK,SACLuX,QAAQ,SAEZgF,EAAY,2BACL/c,GADK,IAER8X,aAAa,GAAD,mBAAM9X,EAAM8X,cAAZ,CAAyBkR,MAEzChM,EAAYD,GACZ,MACJ,IAAK,SACDiM,EAAY,CACRtoB,IAAIyW,KAAKC,MACTrD,MAAM,SACNvT,KAAK,SACLuX,QAAQ,UAEZgF,EAAY,2BACL/c,GADK,IAER8X,aAAa,GAAD,mBAAM9X,EAAM8X,cAAZ,CAAyBkR,MAEzChM,EAAYD,GACZ,MACJ,IAAK,OACDiM,EAAY,CACRtoB,IAAIyW,KAAKC,MACTrD,MAAM,OACNvT,KAAK,OACLuX,QAAQ,aAEZgF,EAAY,2BACL/c,GADK,IAER8X,aAAa,GAAD,mBAAM9X,EAAM8X,cAAZ,CAAyBkR,MAEzChM,EAAYD,GACZ,MACJ,IAAK,OACDiM,EAAY,CACRtoB,IAAIyW,KAAKC,MACTrD,MAAM,OACNvT,KAAK,OACLuX,QAAQ,QAEZgF,EAAY,2BACL/c,GADK,IAER8X,aAAa,GAAD,mBAAM9X,EAAM8X,cAAZ,CAAyBkR,MAEzChM,EAAYD,GACZ,MACJ,IAAK,WACDiM,EAAY,CACRtoB,IAAIyW,KAAKC,MACTrD,MAAM,YACNvT,KAAK,WACLuX,QAAQ,YAEZgF,EAAY,2BACL/c,GADK,IAER8X,aAAa,GAAD,mBAAM9X,EAAM8X,cAAZ,CAAyBkR,MAEzChM,EAAYD,GACZ,MACJ,IAAK,cACDiM,EAAY,CACRtoB,IAAIyW,KAAKC,MACTrD,MAAM,eACNvT,KAAK,cACLuX,QAAQ,eAEZgF,EAAY,2BACL/c,GADK,IAER8X,aAAa,GAAD,mBAAM9X,EAAM8X,cAAZ,CAAyBkR,MAEzChM,EAAYD,GAKpBmL,IAAwB,GAI5B,OAAK1O,GAAQxZ,EAET,cAAC,KAAD,CAAiBugB,UA7GD,SAAC,GAAyB,IAAxBN,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OAC/B,GAAID,IAIDA,EAAY9L,QAAQ+L,EAAO/L,OAAO8L,EAAYE,cAAcD,EAAOC,aAAtE,CAIA,IAAM8I,EAAQ,eAAOzP,EAAMvB,MAAMiI,EAAO/L,QACxCmT,GAAa,SAAA4B,GAIT,OAHAA,EAAI,eAAOA,IACNjR,MAAMoI,OAAOH,EAAO/L,MAAM,GAC/B+U,EAAKjR,MAAMoI,OAAOJ,EAAY9L,MAAO,EAAG8U,GACjCC,KAEXpF,EAAYuD,KA6FZ,SACapB,EAAS,sBAAKte,UAAU,QAAf,UACV,sBACIA,UAAU,oBADd,UAGI,sBACIA,UAAU,kBACVwE,SAAS,IACTC,OAAQ,kBAAI6a,GAA2B,IAH3C,UAKI,qBAAKtf,UAAU,oBAAoBwX,aAAc2J,GAAaha,aAAcga,GAA5E,SACI,qBAAKnhB,UAAS,oEAA+Dqf,EAAwB,SAAS,IAC9G/a,MAAOib,EAAQ,CAAChb,gBAAgB,QAAQid,YAAY,GAAD,OAAI3P,EAAMnN,QAAS,CAACH,gBAAgB,GAAD,OAAIsN,EAAMnN,QAChG1C,QAAS,kBAAIsd,GAA2B,SAAArW,GAAI,OAAGA,MAF/C,SAGI,cAAC,KAAD,CAAmBjJ,UAAS,kCAA6Bqf,EAAwB,SAAS,IAAM/a,MAAOib,EAAQ,CAAC7a,MAAM,GAAD,OAAImN,EAAMnN,QAAS,CAACA,MAAM,eAIvJ2a,GACI,sBAAKrf,UAAU,oCAAf,UAEI,sBAAMA,UAAU,6BAAhB,UAEI,cAAC,KAAD,CAAaA,UAAU,SACvB,yDAGJ,sBAAMA,UAAU,6BAChBgC,QAtJJ,WACxByd,GAAyB,GACzBH,GAA2B,IAmJC,UAGI,cAAC,KAAD,CACAtf,UAAU,OACVsE,MAAO,CAACI,MAAMmN,EAAMnN,SAEpB,yDAGJ,qBAAK1E,UAAU,qBAAf,SACI,sBAAKA,UAAU,6BAA6BgC,QAAS,WAjLrE,IAAC4P,IAiLuFC,EAAM9Y,IAhL9G4Y,EAAYC,GACZ0N,GAA2B,IA+KK,UACI,cAAC,KAAD,CAAatf,UAAU,SACvB,qDAMnBoe,GAAuB,sBAAKpe,UAAU,oBAAoB+E,IAAKsb,GAAY7b,SAAS,IAAIC,OAAQ,kBAAIgb,GAAyB,IAAtG,UACpB,qBAAKzf,UAAU,gBAAf,SACQ,cAAC,KAAD,CACIA,UAAU,cACVsE,MAAO,CAACI,MAAMmN,EAAMnN,WAGhC,qBAAM1E,UAAU,iBAAhB,SACKkD,GAAa/J,KAAI,SAAAuL,GAAK,OACnB,qBAAK1E,UAAU,QAAQsE,MAAO,CAACC,gBAAgB,GAAD,OAAIG,IAAU1C,QAAS,kBAzL9E,SAAC0C,GACpB,IAAMqN,EAAY,2BACXF,GADW,IAEdnN,UAEJyX,EAAYpK,GACZ0N,GAAyB,GAmL4EgC,CAAiB/c,cAItG,sBAAK1E,UAAU,sBAAf,UAEQ3H,EAAM8X,aAAahX,KAAI,SAAA6kB,GAAW,OAC9B,cAAC,GAAD,CACI3lB,MAAOA,EACP2lB,YAAaA,EACbnM,MAAOA,EACP6M,kBAAmBA,EACnBvC,YAAaA,EACb9G,YAAaA,EACb+I,sBAAuBA,EACvBC,qBAAsBA,GACtBE,mBAAoBA,GACpBD,SAAUA,EACVH,WAAYA,OAIhB,sBAAKne,UAAU,wBACdwE,SAAS,IACTC,OAAQ,WACJ8b,IAAwB,IAH7B,UAMI,cAAC3B,EAAD,CACA5e,UAAU,iBACVgC,QAAS,WACLue,IAAwB,SAAAtX,GAAI,OAAGA,QAGlCqX,IAAsB,sBAAKtgB,UAAU,uCAAf,UAEpB,qBAAKA,UAAU,QAAf,wBACA,sBAAKA,UAAU,yBAAf,UACK,sBAAKgC,QAAS,kBAAIof,GAAU,WAA5B,UACI,cAAC,KAAD,CAAaphB,UAAU,SACvB,6CAEJ,sBAAKgC,QAAS,kBAAIof,GAAU,aAA5B,UACI,cAAC,KAAD,CAAgBphB,UAAU,SAC1B,+CAEJ,sBAAKgC,QAAS,kBAAIof,GAAU,SAA5B,UACI,cAAC,KAAD,CAAaphB,UAAU,SACvB,2CAEJ,sBAAKgC,QAAS,kBAAIof,GAAU,SAA5B,UACI,cAAC,KAAD,CAAaphB,UAAU,SACvB,2CAEJ,sBAAKgC,QAAS,kBAAIof,GAAU,WAA5B,UACI,cAAC,KAAD,CAAgBphB,UAAU,SAC1B,6CAEJ,sBAAKgC,QAAS,kBAAIof,GAAU,YAA5B,UACI,cAAC,KAAD,CAAmBphB,UAAU,SAC7B,iDAIR,qBAAKA,UAAU,QAAf,0BAEA,sBAAKA,UAAU,yBAAf,UACI,gCACI,cAAC,KAAD,CAAYA,UAAU,SACtB,+CAEJ,sBAAKgC,QAAS,kBAAIof,GAAU,gBAA5B,UACI,cAAC,KAAD,CAAUphB,UAAU,SACpB,mDAEJ,sBAAKgC,QAAS,kBAAIof,GAAU,aAA5B,UACI,cAAC,KAAD,CAAqBphB,UAAU,SAC/B,gDAEJ,gCACI,cAAC,KAAD,CAAWA,UAAU,SACrB,0DAQ5B6R,EAAMvB,MAAMnX,KAAI,SAACK,EAAKgT,GAAN,OAChBhT,EAAK0F,KAAKsH,cAAchB,SAASW,EAAOK,eACxC,mCACA,cAAC,KAAD,CAAWqS,YAAW,oBAAerM,GAArC,SACC,SAACyK,EAASyK,GAAV,OACG,8CAAK1hB,UAAS,mCAA8B0hB,EAASC,eAAe,YAAY,KAC5E1K,EAAS6B,gBADb,IAC6B/T,IAAKkS,EAASjC,SAD3C,UAGI,cAAC,KAAD,CAA0BwD,YAAahf,EAAKT,IAAKyT,MAAOA,EAAxD,SACK,SAACyK,EAAUyK,GAAX,OACG,cAAC1F,GAAD,CACAE,WAAYwF,EAASxF,WACrByF,eAAgBD,EAASC,eACzB1K,SAAUA,EACVzd,KAAMA,EACNyiB,SAAUA,EACVpK,MAAOA,EACPmG,WAAYA,EACZ8G,aAAcA,EACd3C,YAAaA,EACb9jB,MAAOA,EACPgd,YAAaA,EACbsF,sBAAuBA,EACvByB,aAAcA,MAfN5iB,EAAKT,KAmBpBke,EAAS/W,qBAMlB,QAGJ,sBAAKF,UAAU,oBAAf,UACY,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,kBAAkBsE,MAAO,CAACC,gBAAgB,GAAD,OAAIsN,EAAMnN,UAClE,uBACI7L,KAAK,OACLqH,YAAY,QACZF,UAAS,6BAAwB6R,EAAMvB,MAAMlT,OAAO,EAAE,GAAG,mBACzD6C,SAAU,SAACjB,GAAD,OA5V3B,SAACA,GAChBkgB,EAAelgB,EAAGC,OAAOE,OA2VuBwG,CAAa3G,IAC7BG,MAAO8f,EACP2C,QAAS,SAAC5iB,IAhVxB,SAACA,EAAGiT,EAAUgN,GACb,KAAfjgB,EAAG6iB,UACH7iB,EAAGQ,iBACHqf,EAAa5M,EAAUgN,GACvBC,EAAe,KA6UiB4C,CAAgB9iB,EAAG6S,EAAMoN,IAE7Bra,QAAS,SAAC5F,GA7V1CogB,GAAqB,IA8VW3a,OAAQ,SAACzF,GAAD,OA3VxCogB,GAAqB,QACrB8B,QA4V8B/B,GAAmB,qBACrBnf,UAAS,2BAAsBif,EAAY8C,MAAM,KAAKC,KAAK,IAAI5kB,OAAO,EAAE,SAAS,IACjFoK,YAAc,kBAAIqX,EAAahN,EAAMoN,IAFhB,oBAKzB,qBAAKjf,UAAU,2BAE3B,sBAAKA,UAAU,oBAAf,UAEQic,EAAS9iB,KAAI,SAACiX,GAAD,MACC,WAAVA,EACA,qBAAKpQ,UAAU,+CAAf,SACI,qBAAKA,UAAU,qBAAf,SACKigB,GAAa9mB,KAAI,SAACiT,EAAMpD,GAAP,OACjB,sBAEA1E,MAAO,CAACC,gBAAgB,GAAD,OAAIwb,GAAiB,GAAD,OAAI3T,IAAS1H,OAAS6P,MAAM,GAAD,OAAIwL,GAAiB,GAAD,OAAI3T,IAAS6U,IAAId,GAAY,IAAjD,MAFtE,SAGI,uBAAMngB,UAAU,qCAAhB,UACI,+BAAe,KAARoM,EAAW,QAAQA,IAC1B,iCAAO2T,GAAiB,GAAD,OAAI3T,IAAS6U,IAApC,IAA0Cd,MAC1C,iCAAOxQ,KAAKsS,MAAMlC,GAAiB,GAAD,OAAI3T,IAAS6U,IAAId,GAAY,KAA/D,WALHnX,UAYJ,UAAVoH,EACA,qBAAKpQ,UAAU,+CAAf,SACK6f,GAAUziB,OAAO,GAClB,sBAAK4C,UAAU,kBAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,qBAAK2V,IAAG,UAAKkK,GAAU,GAAGpiB,QAAUmY,IAAI,OAGxCiK,GAAUziB,OAAO,EACjB,sBAAK4C,UAAU,eAAf,cACM6f,GAAUziB,OAAO,KAEvB,UAMF,aAAVgT,EACA,qBAAKpQ,UAAU,0CAEf,qBAAKA,UAAU,2BAGvB,qBAAKA,UAAU,6BArPmB6R,EAAM9Y,KAwPhD,qBAAKiH,UAAS,gBAAYse,EAAkB,GAAT,UAAnC,SACI,qBAAKte,UAAU,oBAAf,SACI,qBAAKA,UAAU,wBAAwBsE,MAAO,CAACI,MAAM,GAAD,OAAImN,EAAMnN,QAA9D,SACA,sBACJ1E,UAAS,UAAKoe,EAAsB,GAAG,sBACvC5Z,SAAS,IACTC,OAAQ,WAEJ4Z,MALA,UAUA,sBAAKre,UAAU,gBAAf,UACMse,EACF,cAAC,KAAD,CAAiBte,UAAU,aAAagC,QAAS,kBAAIuc,IAAmB,MAD7D,cAAC,KAAD,CAAUve,UAAU,aAAagC,QAAS,kBAAIuc,IAAmB,MAE5E,6CAAMve,UAAU,YAAgBme,EAAWhH,iBAA3C,aACA,cAAC,KAAD,UAGJ,+BAAOtF,EAAM3S,eApBkC2S,EAAM9Y,OA3P9C,8C,IC1QzBmpB,G,4MAEFvpB,MAAM,CACFN,MAAM,KACN0mB,UAAS,EACT3C,cAAa,G,EAGjB4C,SAAS,SAAC7f,GACN,EAAKC,SAAS,CAAC2f,SAAS5f,K,EAe5BkZ,cAAc,YAA0B,IAAxBC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OAC1B,GAAID,IAIDA,EAAY9L,QAAQ+L,EAAO/L,OAAO8L,EAAYE,cAAcD,EAAOC,aAAtE,CAKA,IAAMkH,EAAS,eAAO,EAAK7hB,MAAMxF,MAAMgY,OAAOkI,EAAO/L,QACrD,EAAKpN,SAAS,CACT/G,MAAM,eAAI,EAAKM,MAAMN,SAClB,WAGC,OAFA,EAAKM,MAAMN,MAAMgY,OAAOqI,OAAOH,EAAO/L,MAAM,GAC5C,EAAK7T,MAAMN,MAAMgY,OAAOqI,OAAOJ,EAAY9L,MAAO,EAAGkT,GAC9C,EAAK/mB,MAAMN,SAG1B,EAAKwF,MAAMwX,YAAY,EAAK1c,MAAMN,S,EAGvC8pB,qBAAsB,WAClB,IAAMC,EAAM,GACN/R,EAAS,GACf,EAAKxS,MAAM3F,aAAasT,SAAQ,SAAA6D,GAC1B+S,EAAIxf,KAAKyM,EAAKtW,KACfsX,EAAOzN,KAAKyM,EAAKwC,UAErBxB,EAAO7E,SAAQ,SAAAqG,GACX,IAAMJ,EAAQ,2BACPI,GADO,IAEVvB,MAAMuB,EAAMvB,MAAMxX,QAAO,SAAAU,GAAI,OAAG4oB,EAAI5c,SAAShM,EAAKT,UAEtD,EAAK8E,MAAMse,YAAY1K,MAE5B,EAAKrS,SAAS,CAACgd,cAAa,K,kEAhD3Bje,KAAKiB,SAAS,CAAC/G,MAAM8F,KAAKN,MAAMxF,U,yCAEjBkd,GACZA,EAAUld,QAAU8F,KAAKN,MAAMxF,OAC9B8F,KAAKiB,SAAS,CACV/G,MAAO8F,KAAKN,MAAMxF,QAGvBkd,EAAUrd,eAAeiG,KAAKN,MAAM3F,cAAciG,KAAKN,MAAM3F,aAAakF,OAAO,GAChFe,KAAKiB,SAAS,CAACgd,cAAa,M,+BAyC1B,IAAD,SAYDje,KAAKN,MAVLxF,EAFC,EAEDA,MACA+kB,EAHC,EAGDA,aACAzL,EAJC,EAIDA,YACAkN,EALC,EAKDA,aACA7G,EANC,EAMDA,WACAmE,EAPC,EAODA,YACA9G,EARC,EAQDA,YACAyJ,EATC,EASDA,aACAnE,EAVC,EAUDA,sBACAxU,EAXC,EAWDA,OAEE8V,EAAW9d,KAAKN,MAAMxF,MAAM8X,aAAahX,KAAI,SAAA6kB,GAAW,OAClDA,EAAY5N,WAExB,OAAK/X,EAEL,cAAC,KAAD,CAAkBugB,UAAWza,KAAKka,cAAlC,SACI,cAAC,KAAD,CAAWQ,YAAaxgB,EAAMU,IAA9B,SACK,SAACke,GAAD,OACG,8CAAKjX,UAAU,cAAiCiX,EAAS6B,gBAAzD,IAAyE/T,IAAKkS,EAASjC,SAAvF,UAEI3c,EAAMgY,OAAOlX,KAAI,SAAC0Y,EAAMrF,GAAP,OACb,cAAC,KAAD,CAA2BgM,YAAa3G,EAAM9Y,IAAKyT,MAAOA,EAA1D,SACK,SAACyK,EAASyK,GAAV,OACI,6CAAK1hB,UAAS,wBAAmB,EAAKrH,MAAMomB,SAAS,SAAS,IAAMha,IAAKkS,EAASjC,UAAciC,EAASC,gBAAzG,aACG,cAACyH,GAAD,CACAzC,WAAYwF,EAASxF,WACpBiC,WAAYlH,EACZgF,SAAUA,EACVpK,MAAOA,EACPuL,aAAcA,EACdsB,kBAAmBA,KACnBE,aAAcA,KACdyD,OAAQA,KACRxD,aAAcA,EACd7G,WAAYA,EACZmE,YAAaA,EACb9G,YAAaA,EACbyJ,aAAcA,EACdnN,YAAaA,EACbgJ,sBAAuBA,EACvBoE,SAAU,EAAKpmB,MAAMomB,SACrBC,SAAU,EAAKA,SACf7Y,OAAQA,EACRiW,aAAc,EAAKzjB,MAAMyjB,oBAtBtBvK,EAAM9Y,QA6B3Bke,EAAS/W,YACT,EAAKrC,MAAM3F,aAAakF,OAAO,GAAG,sBAAK4C,UAAU,mCAAf,UAC/B,qBAAKA,UAAU,sBAAf,SAAsC,EAAKnC,MAAM3F,aAAakF,SAC9D,8BACM,sBAAK4C,UAAU,iBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,QAAf,2BAA+B,EAAKnC,MAAM3F,aAAakF,OAAO,EAAE,IAAI,IAApE,eACA,qBAAK4C,UAAU,iBAAf,SACK,EAAKnC,MAAM3F,aAAaiB,KAAI,SAAAK,GAAI,OAC7B,qBAAKwG,UAAU,gBAI3B,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,KAAD,CAA4BA,UAAU,SACtC,qBAAKA,UAAU,OAAf,0BAEJ,sBAAKA,UAAU,aAAf,UACI,cAAC,KAAD,CAASA,UAAU,OAAOgC,QAAS,EAAKmgB,uBACxC,qBAAKniB,UAAU,OAAf,uBAEJ,sBAAKA,UAAU,aAAf,UACI,cAAC,KAAD,CAA6BA,UAAU,SACvC,qBAAKA,UAAU,OAAf,gCAKlB,qBAAKA,UAAU,YACfgC,QAAS,kBAAI,EAAK5C,SAAS,CAACgd,cAAa,KADzC,SAGE,cAAC,KAAD,YAhEyB/jB,EAAMU,UALhC,kD,GA9EFuF,aAoKnBC,GAAqB,CACvBwL,kBACAC,mBACAI,oBAESkY,GAAY7jB,aAbD,SAAA9F,GACpB,MAAO,CACHb,WAAYa,EAAMM,UAAUnB,WAC5BO,MAAOM,EAAMM,UAAUhB,UACvBN,aAAcgB,EAAMpB,KAAKI,aACzBO,aAAcS,EAAMM,UAAUf,gBAQYqG,GAAzBE,CAA6CuE,YAAWkf,KCnL1E,SAASK,GAAT,GAAmE,IAAnCvY,EAAkC,EAAlCA,gBAAgBgE,EAAkB,EAAlBA,gBAC7C/U,EAAYqM,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUlB,iBADc,EAEnCwL,oBAAS,GAF0B,oBAE/DO,EAF+D,KAEnDC,EAFmD,OAGnCR,oBAAS,GAH0B,oBAG/DkW,EAH+D,KAGnD+I,EAHmD,OAIvBjf,mBAAStK,EAAUyL,OAJI,oBAI/DhB,EAJ+D,KAI7CC,EAJ6C,OAKzBJ,mBAAStK,EAAUwN,KALM,oBAK/D7C,EAL+D,KAK9CC,EAL8C,OAM7BN,oBAAS,GANoB,oBAM9DsI,EAN8D,KAMhDC,EANgD,OAO3BvI,mBAAStK,EAAUiG,MAPQ,oBAO9DoP,EAP8D,KAO/CC,EAP+C,OAQ7BhL,oBAAS,GARoB,oBAQ9Dkf,EAR8D,KAQhDC,EARgD,OAS3Bnf,mBAAStK,EAAU2W,MATQ,oBAS9D+S,EAT8D,KAS/CC,EAT+C,KAU/DC,EAAc5e,mBACd6e,EAAc7e,mBAwBpB,SAAS8e,IACLL,GAAgB,GAChBve,YAAW,WACP2e,EAAY1e,QAAQC,QACpBye,EAAY1e,QAAQiS,WACrB,GAEP,OA7BAnS,qBAAU,WACNP,EAAqB1K,EAAUyL,OAC/Bb,EAAoB5K,EAAUwN,KAC9B8H,EAAiBtV,EAAUiG,MAC3B0jB,EAAiB3pB,EAAU2W,QAC5B,CAAC3W,IAyBA,sBAAK+G,UAAU,mCAAf,UACI,sBACIA,UAAU,iBACVsE,MAAO,CAACC,gBAAgB,GAAD,OAAIb,IAC3B1B,QAAS,WAAK+B,GAAe,IAC7BS,SAAS,IACTC,OAAQ,WACJ,GAAGf,IAAoBzK,EAAUyL,OAAOd,IAAmB3K,EAAUwN,IAAI,CACrE,IAAMqH,EAAa,2BACZ7U,GADW,IAEdwN,IAAI7C,EACJc,MAAMhB,IAEVsG,EAAgB8D,GAEpB/J,GAAe,IAdvB,UAiBKH,GACCE,GACE,sBAAK9D,UAAU,sBAAf,UACI,8BAAK,cAAC,KAAD,CAAaA,UAAU,4BAC5B,0CAGP8D,GACG,qBAAK9D,UAAU,4CAAf,SACI,cAAC6N,GAAD,CAAqB7D,gBAAiBA,SAIlD,sBAAKhK,UAAU,kBAAf,UACI,sBAAKA,UAAU,2BAAf,UACI,qBACIA,UAAS,wBAAmB6L,EAAa,WAAW,IAAM7J,QArD9E,WACI8J,GAAgB,GAChB3H,YAAW,WACP0e,EAAYze,QAAQC,QACpBwe,EAAYze,QAAQiS,WACrB,IA+CS,SAEKxK,EACD,uBACI7L,UAAU,yBACVnH,KAAK,OACLsG,MAAOmP,EACPrO,SA/DxB,SAA0BjB,GAEtBuP,EAAiBvP,EAAGC,OAAOE,QA8DP4F,IAAK8d,EACLpe,OAAQ,WAEJ,GADAqH,GAAgB,GACbwC,IAAgBrV,EAAUiG,KAAK,CAC9B,IAAM4O,EAAa,2BACZ7U,GADW,IAEdiG,KAAKoP,IAETtE,EAAgB8D,KAGxB9I,UAAW,SAAChG,GACO,UAAXA,EAAGiG,KACHjG,EAAGC,OAAOkN,UAKtB,8BAAMmC,MAGN,sBAAKtO,UAAU,8BACfwE,SAAS,IACTC,OAAQ,kBAAI+d,GAAe,IAF3B,UAII,cAAC,KAAD,CAAaxiB,UAAS,yBAAoByZ,EAAY,OAAO,IAAMzX,QAAS,kBAAIwgB,GAAe,SAAAvZ,GAAI,OAAGA,QACrGwQ,GACG,sBAAKzZ,UAAU,+CAAf,UACI,sBAAKA,UAAU,kCACfgC,QAAS,WACJ+gB,IACDP,GAAe,IAHnB,UAMI,cAAC,KAAD,CAAaxiB,UAAU,SACvB,uDAEJ,sBAAKA,UAAU,kCACdgC,QAAS,WAEFgM,EAAgB/U,EAAUF,KAC1BypB,GAAe,IAJvB,UAQI,cAAC,KAAD,CAAaxiB,UAAU,SACvB,gEAMxB,qBACIA,UAAS,uBAAkByiB,EAAa,WAAW,IAAMzgB,QAAS+gB,EADtE,SAEKN,EACD,uBACIziB,UAAU,yBACVnH,KAAK,OACLsG,MAAOwjB,EACP1iB,SA/GpB,SAAyBjB,GACrB4jB,EAAiB5jB,EAAGC,OAAOE,QA+GX4F,IAAK+d,EACLre,OAAQ,WAEJ,GADAie,GAAgB,GACbC,IAAgB1pB,EAAU2W,KAAK,CAC9B,IAAM9B,EAAa,2BACZ7U,GADW,IAEd2W,KAAK+S,IAET3Y,EAAgB8D,KAGxB9I,UAAW,SAAChG,GACO,UAAXA,EAAGiG,KACHjG,EAAGC,OAAOkN,UAKtB,8BAAMwW,YCnKnB,SAASK,GAAT,GAaJ,IAZCC,EAYF,EAZEA,sBACAxN,EAWF,EAXEA,cACAJ,EAUF,EAVEA,YACA+H,EASF,EATEA,aACAzL,EAQF,EAREA,YACAkN,EAOF,EAPEA,aACA7G,EAMF,EANEA,WACAmE,EAKF,EALEA,YACA2C,EAIF,EAJEA,aACAnE,EAGF,EAHEA,sBACA3Q,EAEF,EAFEA,gBACAgE,EACF,EADEA,gBAEM/U,EAAYqM,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUlB,iBADzD,EAE8BwL,mBAAS,IAFvC,oBAES4C,EAFT,KAEiBC,EAFjB,KAIE,OACI,sBAAKpG,UAAU,0BAAf,UAECijB,EAOG,qBAAKjjB,UAAU,+BANf,cAAC6V,GAAD,CACI5c,UAAWA,EACXwc,cAAeA,EACfJ,YAAaA,EACbjP,UAAWA,IAKd6c,EAcD,cAACV,GAAD,CACAvY,gBAAiBA,EACjBgE,gBAAiBA,IAfb,cAACsU,GAAD,CACAW,sBAAuBA,EACvBhqB,UAAWA,EACXmkB,aAAcA,EACdzL,YAAaA,EACbkN,aAAcA,EACd7G,WAAYA,EACZmE,YAAaA,EACb9G,YAAaA,EACbyJ,aAAcA,EACdnE,sBAAuBA,EACvBxU,OAAQA,O,OClCjB,SAAS+c,GAAT,GAGH,IAFAlL,EAED,EAFCA,WACAmL,EACD,EADCA,wBAGMvrB,EAAQ0N,aAAY,SAAA3M,GAAK,OAAIA,EAAMpB,KAAKK,SACxCK,EAAYqN,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUhB,aACjDG,EAAuBkN,aAAY,SAAA3M,GAAK,OAAIA,EAAMM,UAAUb,wBAC5DT,EAAe2N,aAAY,SAAA3M,GAAK,OAAIA,EAAMpB,KAAKI,gBALtD,EAMmC4L,mBAAS,MAN5C,oBAMQ0O,EANR,KAMmBmR,EANnB,OAOiC7f,mBAAS,MAP1C,oBAOQ8Y,EAPR,KAOkBgH,EAPlB,OAQyC9f,oBAAS,GARlD,oBAQQ+f,EARR,KAQuBC,EARvB,OASmChgB,oBAAS,GAT5C,oBASQigB,EATR,KASuBC,EATvB,OAUuBlgB,mBAAS,IAVhC,oBAUQ5E,EAVR,KAUa+kB,EAVb,KAWOC,EAAW1f,mBA4BjB,SAAS2f,EAAY5qB,GAGjB,OAFcpB,EAAMkB,QAAO,SAAAvB,GAAI,OAC/BA,EAAKwB,MAAMC,KAAQ,GAKvB,SAAS6qB,IACL,KAAGllB,EAAImlB,OAAO1mB,OAAO,GAArB,CACA,IAAM2mB,EAAiB,CACnBhrB,IAAIyW,KAAKC,MACTzW,OAAOrB,EAAaoB,IACpB4F,IAAIA,EACJqlB,MAAM,EACNC,OAAO,IAELxR,EAAW,2BACV4J,GADU,IAEb9L,cAAc,GAAD,mBAAM8L,EAAS9L,eAAf,CAA8BwT,MAE/C/L,EAAW/F,EAAUQ,GACrBiR,EAAO,KA/CXxf,qBAAU,WACH9L,EAAqBwZ,SACpBwR,EAAcnrB,EAAUoY,OAAOvX,QAAO,SAAA+Y,GAAK,OACvCA,EAAM9Y,MAAMX,EAAqBwZ,WACnC,MAEP,CAACxZ,EAAqBwZ,QAAQ3Z,IAEjCiM,qBAAU,WACH9L,EAAqBqB,QAAQwY,GAC5BoR,EACIpR,EAAU3B,MAAMxX,QAAO,SAAAU,GAAI,OACvBA,EAAKT,MAAMX,EAAqBqB,UAClC,MAGX,CAACrB,EAAqBqB,OAAOwY,IAGhC/N,qBAAU,WACFif,GACAO,EAAO,MAEZ,CAACP,IA2BJ,IAAMe,EAAW,CACb,CACIvf,KAAK,cAAC,KAAD,IACLzF,KAAK,cAET,CACIyF,KAAK,cAAC,KAAD,IACLzF,KAAK,UAET,CACIyF,KAAK,cAAC,KAAD,IACLzF,KAAK,sBAET,CACIyF,KAAK,cAAC,KAAD,IACLzF,KAAK,cAET,CACIyF,KAAK,cAAC,KAAD,IACLzF,KAAK,kBAET,CACIyF,KAAK,cAAC,KAAD,IACLzF,KAAK,iBAET,CACIyF,KAAK,cAAC,KAAD,IACLzF,KAAK,aAET,CACIyF,KAAK,cAAC,KAAD,IACLzF,KAAK,eAKPilB,EAAgB,CAClB,CACIxf,KAAK,cAAC,KAAD,IACLzF,KAAK,aAET,CACIyF,KAAK,GACLzF,KAAK,OAET,CACIyF,KAAK,cAAC,KAAD,IACLzF,KAAK,SAET,CACIyF,KAAK,cAAC,KAAD,IACLzF,KAAK,YAGb,OACI,sBAAKc,UAAS,6BAAd,UACE,qBAAKA,UAAU,2BAAf,wEAGA,qBAAKA,UAAU,6BAAf,qBAGA,sBAAKA,UAAU,0BAAf,UACGsjB,EACG,uBAAOzqB,KAAK,OAAOqH,YAAY,qBAAqBF,UAAU,qBAAqBgC,QAAS,WACxFuhB,GAAe,GACfpf,YAAW,WACJwf,GAAUA,EAASvf,SAClBuf,EAASvf,QAAQC,UAEtB,MAGP,sBAAKrE,UAAU,oBAAf,UACA,sBAAKA,UAAU,0BAAf,UAEI,qBAAKA,UAAU,cAAf,SACKkkB,EAAW/qB,KAAI,SAAAwN,GAAG,OACf,sBAAK3G,UAAU,aAAf,UACC2G,EAAIhC,KACD,sBAAM3E,UAAU,wCAAhB,SAAyD2G,EAAIzH,eAIzE,0BAAUA,KAAK,GAAG4D,GAAG,GAAGshB,KAAK,KAAKC,KAAK,KAAKtf,IAAK4e,EACjDlf,OAAQ,kBAAK8e,GAAe,IAC5BpkB,MAAOR,EACPsB,SAAU,SAACjB,GAAD,OAAM0kB,EAAO1kB,EAAGC,OAAOE,aAGrC,sBAAKa,UAAU,kBAAf,UACSmkB,EAAehrB,KAAI,SAAAwN,GAAG,OACnB,sBAAK3G,UAAU,iBAAf,UACK2G,EAAIhC,KACL,+BAAOgC,EAAIzH,aAGnB,qBAAKc,UAAU,cACfgC,QAAS6hB,EADT,0BAOR,qBAAK7jB,UAAU,eAAf,SAEQqc,GAAUA,EAAS9L,cAAcnT,OAAO,EACpC,mCACCif,EAAS9L,cAAcpX,KAAI,SAAAmrB,GAAY,OACpC,sBAAKtkB,UAAU,uBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,aAAasE,MAAO,CAACigB,gBAAgB,OAAD,OAAQX,EAAYU,EAAatrB,QAAQyE,OAAzC,QACnD,qBAAKuC,UAAU,cAAf,SAA8B4jB,EAAYU,EAAatrB,QAAQ2E,cAEnE,qBAAKqC,UAAU,MAAf,SAAsBskB,EAAa3lB,SAEvC,sBAAKqB,UAAU,eAAf,UACI,qBAAKA,UAAU,cAAf,SACI,sBAAKA,UAAU,WAAf,UACI,cAAC,KAAD,IACA,6CAGR,qBAAKA,UAAU,cAAf,SACI,sBAAKA,UAAU,YAAYgC,QAAS,kBAAIyhB,GAAS,SAAAe,GAAG,OAAGA,MAAvD,UACI,cAAC,KAAD,IACA,iDAIXhB,GAAe,sBAAKxjB,UAAU,gBAAf,UACZ,qBAAKA,UAAU,WAAWsE,MAAO,CAACigB,gBAAgB,OAAD,OAAQ5sB,EAAa8F,OAArB,QACjD,sBAAKuC,UAAU,oBAAf,UACI,0BACAd,KAAK,GACL4D,GAAG,GACHshB,KAAK,KACLC,KAAK,IACLrkB,UAAU,mBAEV,sBAAKA,UAAU,kBAAf,UACKmkB,EAAehrB,KAAI,SAAAwN,GAAG,OACnB,sBAAK3G,UAAU,iBAAf,UACK2G,EAAIhC,KACL,+BAAOgC,EAAIzH,aAGnB,qBAAKc,UAAU,cACfgC,QAAS6hB,EADT,oCAUpB,sBAAM7jB,UAAU,aAAhB,uCC9OrB,IAAMykB,GAAgB,CAEzB5oB,QAOJ,SAAiB/D,EAAWyZ,GAMxB,OALezZ,EAAWgB,QAAO,SAAAG,GAAS,OACtCA,EAAUsR,QAAQzR,QAAO,SAAA0R,GAAM,OAC3BA,EAAOzR,MAAMwY,QAEnB,IATFxV,OAaJ,SAAgB2R,EAAU5V,GAMtB,OALAA,EAAWqB,KAAI,SAAAF,GAAS,OACpBA,EAAUsR,QAAQpR,KAAI,SAAAqR,GAAM,OACxBA,EAAOzR,MAAM2U,EAAU3U,IAAI2U,EAAUlD,QAGtC1S,I,cCkBE4sB,GAAb,4MACI/rB,MAAM,CACFob,oBAAmB,EACnB9a,UAAU,KACVoU,cAAa,EACbhV,MAAM,KACNmS,OAAO,KACPhR,KAAK,GACL2pB,yBAAwB,EACxBhW,oBAAmB,EACnB8V,uBAAsB,EACtB9O,iBAAiB,IAXzB,EA0BIS,UAAY,WACRzQ,YAAW,WACPU,SAASC,YAAY,aAAa,EAAO,QAC1C,IA7BX,EA+BIsI,uBAAuB,WACnB,EAAKhO,SAAS,CAAE+N,oBAAmB,KAhC3C,EAmCI6G,oBAAoB,WAChB,EAAK5U,SAAS,CAAC2U,oBAAoB,EAAKpb,MAAMob,sBApCtD,EAuCIlM,0BAA0B,SAAC5O,GACvB,EAAKmG,SAAS,CAACnG,cAAW,WACtB,EAAK4E,MAAMoM,oBAAoBhR,GAC/B,EAAKmG,SAAS,CAAC6jB,uBAAsB,QA1CjD,EA8CItP,oBAAsB,EAAK9V,MAAM2X,MAAMva,IAAI8mB,MAAM,KAAKvc,SAAS,WA9CnE,EAqDImf,cAAgB,WAEZ,GAD2B,EAAK9mB,MAAM2X,MAAMva,IAAI8mB,MAAM,KAAKvc,SAAS,WACpE,CACA,IAAM+L,EAAW,EAAK1T,MAAM2X,MAAMva,IAAI8mB,MAAM,KAAK,GAEjD,OADmB0C,GAAc5oB,QAAQ,EAAKgC,MAAM/F,WAAWyZ,KAzDvE,EA4DIzH,aAAe,WAEX,GAD4B,EAAKjM,MAAM2X,MAAMva,IAAI8mB,MAAM,KAAKvc,SAAS,WAC9C,CACnB,IAAM+L,EAAW,EAAK1T,MAAM2X,MAAMva,IAAI8mB,MAAM,KAAK,GAC3C1Q,EAAaoT,GAAc5oB,QAAQ,EAAKgC,MAAM/F,WAAWyZ,GACzD3U,EAAU,EAAKiB,MAAM2X,MAAMjV,OAAOuC,GAClC7K,EAAYqX,GAAazT,QAAQ,EAAKgC,MAAM/F,WAAW8E,EAAQyU,GAElEpZ,GACC,EAAKmH,SAAS,CAAC/G,MAAMJ,IAAW,WAC5B,EAAK4F,MAAM6E,QAAQE,KAAnB,kBAAmC3K,EAAUc,aAGpD,CAED,IAAM6D,EAAU,EAAKiB,MAAM2X,MAAMjV,OAAOuC,GAElC7K,EAAYqX,GAAazT,QAAQ,EAAKgC,MAAM/F,WAAW8E,EADhD,MAGV3E,GACC,EAAKmH,SAAS,CAAC/G,MAAMJ,IAAW,WAC5B,EAAK4F,MAAM6E,QAAQE,KAAnB,kBAAmC3K,EAAUc,WAjFjE,EAuFI6rB,eAAe,SAACpa,GACZ,EAAKpL,SAAS,CAACiO,cAAc,EAAK1U,MAAM0U,gBAxFhD,EA4FI3C,sBA5FJ,uCA4F0B,WAAMrS,GAAN,SAAA0C,EAAA,6DAClB,EAAKqE,SAAS,CAAC/G,UAAO,WAClB,EAAKwF,MAAM6E,QAAQE,KAAnB,kBAAmCvK,EAAMU,SAF3B,SAIZ,EAAK8E,MAAMuM,gBAAgB/R,GAJf,OAKlB,EAAK+G,SAAS,CAAC6jB,uBAAsB,IALnB,2CA5F1B,wDAqGI5N,YAAY,SAACD,GACT,EAAKyP,YAAYzP,IAtGzB,EAyGIK,cAAc,WACV,IAAMnc,EAAWgW,GAAakC,SAAS,EAAK7Y,MAAMN,OAClD,EAAKwsB,YAAYvrB,IA3GzB,EA8GI6iB,YAAY,SAACpK,GACT,IAAMzY,EAAWgW,GAAawC,YAAY,EAAKnZ,MAAMN,MAAM0Z,GAC3D,EAAK8S,YAAYvrB,IAhHzB,EAmHIqY,YAAY,SAACC,GACT,IAAMtY,EAAWgW,GAAaqC,YAAYC,EAAQ,EAAKjZ,MAAMN,OAC7D,EAAKwsB,YAAYvrB,IArHzB,EAwHIulB,aAAa,SAAC5M,EAAUgN,GACpB,GAAIA,EAAY8C,MAAM,KAAKC,KAAK,IAAhC,CACA,IAAM1oB,EAAWgW,GAAa0C,QAAQC,EAAU,EAAKtZ,MAAMN,MAAM4mB,EAAY,EAAKphB,MAAMlG,cACxF,EAAKktB,YAAYvrB,KA3HzB,EA8HI0e,WAAW,SAAC/F,EAAUoK,GAClB,IAAM/iB,EAAWgW,GAAakD,WAAWP,EAAU,EAAKtZ,MAAMN,MAAMgkB,EAAS,EAAKxe,MAAMlG,cACxF,EAAKktB,YAAYvrB,IAhIzB,EAmIIwlB,aAAa,SAACrlB,EAAOwY,GACjB,IAAM3Y,EAAWgW,GAAaiD,WAAW9Y,EAAOwY,EAAU,EAAKtZ,MAAMN,OACrE,EAAKwsB,YAAYvrB,IArIzB,EAwIIuR,UAAU,SAACvR,GACP,EAAKurB,YAAYvrB,IAzIzB,EAgMI4T,WAAW,SAACY,EAAagX,GACrB,EAAK9X,aAAa8X,EAAW/rB,KAC7B,IAAMwa,EAAqB,2BACpBzF,GADmB,IAEtBvD,QAAQ,GAAD,mBAAKuD,EAAavD,SAAlB,CAA2Bua,MAEtC,EAAKjnB,MAAMmM,gBAAgBuJ,IAtMnC,EAyMIzI,UAAU,SAACgD,EAAauF,GACpB,GAAG,EAAK1a,MAAMM,UAAUF,MAAM+U,EAAa/U,IAAI,CAC3C,IAAMua,EAAmBhE,GAAa1E,YAAY,EAAKjS,MAAMM,UAAWoa,EAAUta,KAC5Ewa,EAAqB,2BACpBD,GADmB,IAEtBtb,OAAO,GAAD,mBAAKsb,EAAiBtb,QAAtB,CAA8Bqb,MAExC,EAAKjU,SAAS,CAACnG,UAAUsa,IAAsB,WAC3C,EAAK1V,MAAMoM,oBAAoBsJ,MAEnC,EAAK1V,MAAMmM,gBAAgBuJ,OAC1B,CACD,EAAK3I,YAAYyI,EAAUta,KAC3B,IAAMwa,EAAqB,2BACpBzF,GADmB,IAEtB9V,OAAO,GAAD,mBAAK8V,EAAa9V,QAAlB,CAA0Bqb,MAEpC,EAAKxV,MAAMmM,gBAAgBuJ,KA1NvC,EA8NIxI,kBAAkB,SAACyI,EAAgB9F,EAAU2F,GACzC,IAAMC,EAAmBhE,GAAa1E,YAAY,EAAKjS,MAAMM,UAAWoa,EAAUta,KAClF,EAAKqG,SAAS,CAACnG,UAAUqa,IAAkB,WACvC,EAAKzV,MAAMmM,gBAAgBsJ,GAC3B,EAAKzV,MAAMoM,oBAAoBqJ,MAEnC,IAAMG,EAAkB,2BACjB/F,GADgB,IAEnB1V,OAAO,GAAD,mBAAK0V,EAAU1V,QAAf,CAAuBqb,MAEjC,GAAGC,EAAiBva,MAAMya,EAAgBza,IAAI,CAC1C,IAAM+U,EAAewB,GAAarC,aAAaqG,EAAkBG,GAC7D3F,EAAa/U,MAAM,EAAKJ,MAAMM,UAAUF,KACxC,EAAKqG,SAAS,CAACnG,UAAU6U,IAAc,WACnC,EAAKjQ,MAAMoM,oBAAoB6D,MAGvC,EAAKjQ,MAAMmM,gBAAgB8D,OAC1B,CACD,IAAMA,EAAewB,GAAarC,aAAauG,EAAiBC,GAC5D3F,EAAa/U,MAAM,EAAKJ,MAAMM,UAAUF,KACxC,EAAKqG,SAAS,CAACnG,UAAU6U,IAAc,WACnC,EAAKjQ,MAAMoM,oBAAoB6D,MAGvC,EAAKjQ,MAAMmM,gBAAgB8D,KAvPvC,EA4PIlD,YAAY,SAAChO,GACT,IAAMkR,EAAewB,GAAa1E,YAAY,EAAKjS,MAAMM,UAAW2D,GACpE,EAAKwC,SAAS,CAACnG,UAAU6U,IAAc,WACnC,EAAKjQ,MAAMmM,gBAAgB8D,GAC3B,EAAKjQ,MAAMoM,oBAAoB6D,OAhQ3C,EAoQIpB,YAAY,SAACX,GACT,IAAM+B,EAAewB,GAAaC,SAAS,EAAK5W,MAAMM,UAAU8S,GAChE,EAAK3M,SAAS,CAACnG,UAAU6U,IAAc,WACnC,EAAKjQ,MAAMmM,gBAAgB8D,GAC3B,EAAKjQ,MAAMoM,oBAAoB6D,OAxQ3C,EA4QIxK,gBAAgB,SAACgL,EAAcJ,EAAeE,GAE1C,IAAMN,EAAiB,CACnB5O,KAAKoP,EACLyW,QAAS,EACTnV,KAAO,kCACPnJ,IAAM2H,EACN1J,MAAQwJ,EACRgC,MAAM,EAAKvX,MAAMhB,aACjB4S,QAAU,GACVvS,OAAS,IAEH,EAAK6F,MAAMmnB,aAAalX,GAChCrO,MAAK,SAAAxG,GAAS,OACZ,EAAKmG,SAAS,CAACnG,UAAUA,IAAW,WAChC,EAAKmG,SAAS,CAAC6jB,uBAAsB,IACrC,IAAM7mB,EAAQ,2BACP,EAAKyB,MAAMlG,cADL,IAET4N,iBAAiB,GAAD,mBACT,EAAK1H,MAAMlG,aAAa4N,kBADf,CAEZtM,EAAUF,QAGlB,EAAK8E,MAAMX,WAAWd,UAnStC,EAwSI4N,gBAAgB,SAAC8D,GACb,EAAKjQ,MAAMmM,gBAAgB8D,GAC3B,EAAK1O,SAAS,CAACnG,UAAU6U,IAAc,WACnC,EAAKjQ,MAAMoM,oBAAoB6D,OA3S3C,EA+SIE,gBAAgB,SAAC9U,GACb,EAAK2E,MAAMonB,gBAAgB/rB,GAC3B,EAAK2E,MAAM/F,WAAWqB,KAAI,SAAAF,GAAS,OAC/BA,EAAUjB,OAAOmB,KAAI,SAAAd,GAAK,OACH,IAAnBA,EAAMwR,WACF,EAAKzK,SAAS,CAACnG,cAAW,WACtB,EAAK4E,MAAMoM,oBAAoBhR,MAElC,YAvTrB,EA4TI8T,iBAAiB,SAACsE,EAAWtF,GACzB,IAAM+B,EAAewB,GAAavC,iBAAiB,EAAKpU,MAAMM,UAAUoY,EAAWtF,GACnF,EAAK3M,SAAS,CAACnG,UAAU6U,IAAc,WACnC,EAAKjQ,MAAMmM,gBAAgB8D,GAC3B,EAAKjQ,MAAMoM,oBAAoB6D,OAhU3C,EAmUIY,aAAa,WACT,IAAMZ,EAAewB,GAAagC,UAAU,EAAK3Y,MAAMM,WACvD,EAAKmG,SAAS,CAACnG,UAAU6U,IAAc,WACnC,EAAKjQ,MAAMmM,gBAAgB8D,GAC3B,EAAKjQ,MAAMoM,oBAAoB6D,GAC/B,EAAK1O,SAAS,CAAC+N,oBAAmB,QAxU9C,EA4UIH,aAAa,SAACuE,GACV,IAAMzD,EAAewB,GAAatC,aAAa,EAAKrU,MAAMM,UAAWsY,GACrE,EAAKnS,SAAS,CAACnG,UAAU6U,IAAc,WACnC,EAAKjQ,MAAMmM,gBAAgB8D,GAC3B,EAAKjQ,MAAMoM,oBAAoB6D,OAhV3C,EAmVIb,aAAa,SAACS,GACV,IAAMI,EAAewB,GAAarC,aAAa,EAAKtU,MAAMM,UAAWyU,GACrE,EAAKtO,SAAS,CAACnG,UAAU6U,IAAc,WACnC,EAAKjQ,MAAMmM,gBAAgB8D,GAC3B,EAAKjQ,MAAMoM,oBAAoB6D,OAvV3C,EA4VI6M,sBAAsB,WAClB,EAAKvb,SAAS,CAAC+jB,yBAAwB,KA7V/C,EAgWIlV,kBAAkB,WACd,EAAK7O,SAAS,CAAC6jB,uBAAsB,KAjW7C,EAmWInb,iBAAiB,SAACoB,GACb,EAAK9J,SAAS,CAAC+U,iBAAiBjL,KApWzC,uMAcc/K,KAAKN,MAAMkM,iBAdzB,cAeQ5L,KAAK+mB,aAAe3iB,IAAMoS,YAflC,SAmBcxW,KAAKN,MAAM/F,WAAWqB,KAAI,SAAAF,GAAS,OAAEA,EAAUjB,OAAOmB,KAAI,SAAAd,GAAK,OAAqB,IAAnBA,EAAMwR,WAAmB,EAAKzK,SAAS,CAAC/G,UAAO,WAClH,EAAKwF,MAAM6E,QAAQE,KAAnB,kBAAmCvK,EAAMU,MACzC,EAAK8E,MAAMuM,gBAAgB/R,GAC3B,EAAK+G,SAAS,CAACnG,cACf,EAAK4E,MAAMoM,oBAAoBhR,MAChC,WAAO,GAxBlB,wIA4IgBK,GAAU,IAAD,OACjB6E,KAAKiB,SAAS,CAAC/G,MAAMiB,IAAU,WAC3B,EAAKuE,MAAMuM,gBAAgB9Q,GAC3B,IAAIwU,EAAe,EAAKnV,MAAMM,UAK1Bya,EAAoB,CACpBC,qBAAoB,EACpBC,UAAU,MAEd9F,EAAavD,QAAQpR,KAAI,SAAAqR,GAAM,OAC3BA,EAAOxS,OAAOmB,KAAI,SAAAd,GAAK,OACnBA,EAAMU,MAAQO,EAASP,IAAI2a,EAAkB,2BACtCA,GADqC,IAExCC,qBAAoB,EACpBC,UAAUpJ,IAEb,WAGNkJ,EAAkBC,oBAEjB7F,EAAY,2BACL,EAAKnV,MAAMM,WADN,IAERsR,QAAS,EAAK5R,MAAMM,UAAUsR,QAAQpR,KAAI,SAAAqR,GAAM,OAC5CA,EAAOzR,MAAM2a,EAAkBE,UAAU7a,IAAzC,2BACGyR,GADH,IACWxS,OACXwS,EAAOxS,OAAOmB,KAAI,SAAAd,GAAK,OACnBA,EAAMU,MAAQO,EAASP,IACvBO,EAASjB,OAEZmS,OAMRsD,EAAa9V,OAAS8V,EAAa9V,OAAOmB,KAAI,SAAAd,GAAK,OAChDA,EAAMU,MAAQO,EAASP,IAAIO,EAASjB,KAK5C,EAAKwF,MAAMoM,oBAAoB6D,GAC/B,EAAK1O,SAAS,CAACnG,UAAU6U,IAAc,WACnC,EAAKjQ,MAAMmM,gBAAgB8D,WA3L3C,+BAuWc,IAAD,OACGhW,EAAeqG,KAAKN,MAApB/F,WADH,EAE6CqG,KAAKxF,MAA/CM,EAFH,EAEGA,UAAUZ,EAFb,EAEaA,MAAO4qB,EAFpB,EAEoBA,sBACzB,OAAKnrB,GAAaO,GAAQY,EAEtB,sBAAK+G,UAAU,uBAAf,UACI,cAACyH,GAAD,CACIC,YAAaA,KACbC,OAAQA,KACRC,YAAaA,KAEbC,0BAA2B1J,KAAK0J,0BAChCvE,gBAAiBnF,KAAKmF,gBACtBwE,iBAAkB3J,KAAK2J,mBAE3B,cAAC+L,GAAD,CACIE,mBAAoB5V,KAAKxF,MAAMob,mBAC/BC,oBAAqB7V,KAAK6V,oBAC1BF,kBAAmBA,KACnBG,eAAgBA,KAChBhb,UAAWA,EACX2rB,eAAgBzmB,KAAKymB,eACrBvX,aAAclP,KAAKxF,MAAM0U,aACzBP,kBAAmBA,KACnBnC,kBAAmBA,KACnBD,sBAAuBvM,KAAKuM,sBAC5BwJ,iCAAkC/V,KAAK+V,iCACvCxH,YAAavO,KAAKuO,YAClBgC,aAAcvQ,KAAKuQ,aACnB3B,iBAAkB5O,KAAK4O,iBACvBC,aAAc7O,KAAK6O,aACnBC,aAAc9O,KAAK8O,aACnBrC,YAAazM,KAAKyM,YAClBC,UAAW1M,KAAK0M,UAChBqC,WAAY/O,KAAK+O,WACjBpC,UAAW3M,KAAK2M,UAChBC,kBAAmB5M,KAAK4M,kBACxBoC,mBAAoBhP,KAAKxF,MAAMwU,mBAC/BC,uBAAwBjP,KAAKiP,uBAC7BpD,gBAAiB7L,KAAK6L,gBACtBgE,gBAAiB7P,KAAK6P,gBACtBnG,0BAA2B1J,KAAK0J,0BAChCoG,kBAAmB9P,KAAK8P,kBACxBkG,iBAAkBhW,KAAKxF,MAAMwb,mBAEjC,cAAC6O,GAAD,CACGC,sBAAuBA,EACvBxN,cAAetX,KAAKsX,cACpBJ,YAAalX,KAAKkX,YAClB+H,aAAcjf,KAAKif,aACnBzL,YAAaxT,KAAKwT,YAClBkN,aAAc1gB,KAAK0gB,aACnB7G,WAAY7Z,KAAK6Z,WACjBmE,YAAahe,KAAKge,YAClB2C,aAAc3gB,KAAK2gB,aACnBnE,sBAAuBxc,KAAKwc,sBAC5B3Q,gBAAiB7L,KAAK6L,gBACtBgE,gBAAiB7P,KAAK6P,kBAGzB,qBAAKhO,UAAS,qCAAgC7B,KAAKxF,MAAMwqB,wBAAwB,GAAG,QAApF,SACI,sBAAKnjB,UAAS,6BAAwB7B,KAAKxF,MAAMwqB,wBAAwB,cAAc,eAAvF,UAKI,cAAC,KAAD,CAASnjB,UAAU,yBAAyBgC,QAAS,WACrD,EAAK5C,SAAS,CAAC+jB,yBAAwB,OAGvC,cAACD,GAAD,CACAC,wBAAyBhlB,KAAKxF,MAAMwqB,wBACpCnL,WAAY7Z,KAAK6Z,qBArEW,kDA1WpD,GAAgC1Z,aAgc1BC,GAAqB,CACvBwL,kBACAC,mBACAC,uBACAH,ajCrXG,SAAsBzR,GACzB,8CAAO,WAAM2E,GAAN,SAAAjC,EAAA,sDACH,IACIiC,EAAS,CAAEnE,KAAM,YAAaR,UACjC,MAAM6R,GACH/O,QAAQC,IAAI,qCAAsC8O,GAJnD,2CAAP,uDiCqXAE,mBACA4a,ajC9dG,SAAsBG,GACzB,8CAAO,WAAMnoB,GAAN,eAAAjC,EAAA,+EAEuBoO,GAAiBG,IAAI6b,GAF5C,cAEKlsB,EAFL,OAGC+D,EAAS,CAAEnE,KAAM,gBAAiBI,cAHnC,kBAIQA,GAJR,gCAMCkC,QAAQC,IAAI,wCAAZ,MAND,yDAAP,uDiC8dA6pB,gBjCxcG,SAAyB/rB,GAC5B,8CAAO,WAAO8D,GAAP,SAAAjC,EAAA,+EAEGoO,GAAiBrN,OAAO5C,GAF3B,OAGH8D,EAAS,CAAEnE,KAAM,mBAAoBK,gBAHlC,+CAKHiC,QAAQC,IAAI,2CAAZ,MALG,wDAAP,uDiCwcA8B,cAESkoB,GAAY3mB,aAlBD,SAAA9F,GACpB,MAAO,CACHb,WAAYa,EAAMM,UAAUnB,WAC5BmB,UAAWN,EAAMM,UAAUlB,cAC3BM,MAAOM,EAAMM,UAAUhB,UACvBN,aAAcgB,EAAMpB,KAAKI,gBAaiB4G,GAAzBE,CAA6CimB,ICpfzDW,GAAoB,CAC7BC,U,4FAGJ,WAAyBtmB,GAAzB,qBAAAjE,EAAA,4DACuB,YACbwqB,EAFV,0CACuB,YADvB,kBAIUC,EAAW,IAAIC,UACZC,OAAO,OAAQ1mB,EAAGC,OAAO8R,MAAM,IACxCyU,EAASE,OAAO,gBAAiB,cANrC,kBAQ0BC,MAAMJ,EAAY,CAChCvqB,OAAQ,OACR4qB,KAAMJ,IAVlB,cAQctqB,EARd,iBAY2BA,EAAI2qB,OAZ/B,eAYchrB,EAZd,yBAceA,GAdf,kCAiBQM,QAAQC,IAAR,MAjBR,2D,sBCEO,SAAS0qB,GAAT,GAA+B,IAAXC,EAAU,EAAVA,SACjBpuB,EAAe2N,aAAY,SAAA3M,GAAK,OAAIA,EAAMpB,KAAKI,gBADpB,EAEX4L,mBAAoB,SAAXwiB,EAC/B,gFAAgFpuB,EAAa8F,QAH5D,oBAE1BgJ,EAF0B,KAErBuf,EAFqB,KAK3BhpB,EAAWqI,cAEjBnB,qBAAU,WACO,SAAX6hB,GAAmBpuB,GAAcA,EAAasuB,SAChDD,EAAOruB,EAAasuB,SAEP,SAAXF,GAAmBpuB,GAAcA,EAAa8F,QAChDuoB,EAAOruB,EAAa8F,UAErB,CAAC9F,EAAaouB,IAIjB,IAAMG,EAAW,uCAAG,WAAOlnB,GAAP,qBAAAjE,EAAA,6DAChBiE,EAAGQ,iBADa,SAEO6lB,GAAkBC,UAAUtmB,GAFnC,OAEVmnB,EAFU,QAGVC,EAASD,EAASE,cAEpBL,EAAOI,GACO,SAAXL,IACO3pB,EADW,2BAEVzE,GAFU,IAGbsuB,QAAQG,IAEZppB,EAASE,EAAWd,KAEV,SAAX2pB,IACO3pB,EADW,2BAEVzE,GAFU,IAGb8F,OAAO2oB,IAEXppB,EAASE,EAAWd,MAlBZ,2CAAH,sDAuBjB,OACI,+BACI,kCACI,uBAAO6D,SAAUimB,EAAartB,KAAK,SACnC,qBAAKyL,MAAO,CAACigB,gBAAgB,OAAD,OAAS9d,EAAT,MAA5B,SACgB,SAAXsf,GAAmB,sBAAK/lB,UAAU,SAAf,UACZ,cAAC,KAAD,CAAYA,UAAU,oBACtB,qBAAKA,UAAU,OAAf,8CCjDrB,IAAMsmB,GAAO,CAClB,CACEC,KAAM,IACNC,UAAWzjB,IAEb,CACEwjB,KAAM,SACNC,UAAWvjB,IAEb,CACEsjB,KAAM,UACNC,UAAWpB,IAEb,CACEmB,KAAM,cACNC,UAAWpB,IAEb,CACEmB,KAAM,aACNC,UCZG,WACH,IAAM7uB,EAAe2N,aAAY,SAAA3M,GAAK,OAAIA,EAAMpB,KAAKI,gBAD5B,EAED4L,mBAAS5L,EAAagG,UAFrB,oBAElBuB,EAFkB,KAEZunB,EAFY,OAGKljB,oBAAS,GAHd,oBAGlBmjB,EAHkB,KAGRC,EAHQ,KAInB3pB,EAAWqI,cACX+J,EAAWnL,mBAEjBC,qBAAU,WACNuiB,EAAQ9uB,EAAagG,YACtB,CAAChG,IAEJ,IAmBMivB,EAAQ,CACV,cAAC,KAAD,CAAa5mB,UAAU,SACvB,cAAC,KAAD,CAAeA,UAAU,SACzB,cAAC,KAAD,CAAaA,UAAU,SACvB,cAAC,KAAD,CAAaA,UAAU,SACvB,cAAC,KAAD,CAAmBA,UAAU,SAC7B,cAAC,KAAD,CAAQA,UAAU,SAClB,cAAC,KAAD,CAAYA,UAAU,SACtB,cAAC,KAAD,CAAgBA,UAAU,UAcxB6mB,EAAY,CACd,qCADc,UAEXlvB,EAAa+E,OAChB,qBACA,qBACA,aACA,YACA,yBACA,0BAIJ,OACI,sBAAKsD,UAAU,eAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,cAAC8lB,GAAD,CAAWC,SAAS,WAExB,qBAAK/lB,UAAU,6BAAf,SACE0mB,EAcE,uBACA1mB,UAAU,cACV+E,IAAKqK,EACLvW,KAAK,OACLsG,MAAOD,EACPe,SAAU,SAACsG,GAAD,OAAKkgB,EAAQlgB,EAAEtH,OAAOE,QAChCsF,OAAQ,YAhFP,WACb,GAAG9M,EAAagG,WAAWuB,EAA3B,CACA,IAAM9C,EAAQ,2BACPzE,GADM,IAETgG,SAASuB,IAEblC,EAASE,EAAWd,KA4EA0qB,GACAH,GAAU,IAGlB3hB,UAAW,SAAChG,GACO,UAAXA,EAAGiG,KACHjG,EAAGC,OAAOkN,UA3BlB,sBAAKnM,UAAU,YAAYgC,QAAS,WAChC2kB,GAAU,GACVxiB,YAAW,WACJiL,GAAUA,EAAShL,SAClBgL,EAAShL,QAAQC,UAEtB,IANP,UAQI,8BAAMnF,IACN,cAAC,KAAD,CAAUc,UAAU,aACpB,sBAAMA,UAAU,uBAAhB,4BAuBR,qBAAKA,UAAU,oBAAf,SArFS,CACjB,gBACA,iBACA,WACA,cACA,gBACA,oBACA,YA+E0B7G,KAAI,SAAAiT,GAAK,OACnB,qBAAKpM,UAAU,QAAf,SAAwBoM,YAIpC,qBAAKpM,UAAU,eAAf,SACI,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,QAAf,sBAxEH,CACT,QACA,QACA,QACA,QACA,WACA,WACA,WACA,oBAiEoB7G,KAAI,SAACiT,EAAMpD,GAAP,OACZ,sBAAKhJ,UAAU,yBAAf,UACI,qBAAKA,UAAU,eAAf,SAA+B4mB,EAAM5d,KACrC,sBAAKhJ,UAAU,oBAAf,UACQ,gCAAMoM,EAAN,OACA,8BAAMya,EAAY7d,yBCtH3C,SAAS+d,KAAS,IAAD,EACkBxjB,oBAAS,GAD3B,oBACbO,EADa,KACAC,EADA,OAEcR,mBAAS,MAFvB,oBAEb0E,EAFa,KAEFC,EAFE,KAGdvQ,EAAe2N,aAAY,SAAA3M,GAAK,OAAIA,EAAMpB,KAAKI,gBAC/CqF,EAAWqI,cACX3C,EAAUskB,cAahB,OARA9iB,qBAAU,WACNC,YAAW,WACJnK,OAAON,SAASutB,KAAKzhB,SAAS,WAC7B0C,EAAa,gBAElB,KACJ,IAGC,sBAAKlI,UAAU,iBAAf,UACI,sBAAKA,UAAU,oBAAf,UAKI,qBAAKA,UAAU,0BAAf,SACI,cAAC8lB,GAAD,CAAWC,SAAS,WAExB,cAAC,IAAD,CAAMlV,GAAE,UAAR,SACI,sBACA7Q,UAAS,uBAA8B,eAAZiI,EAAyB,WAAW,IAC/DjG,QAAS,WAAKkG,EAAa,eAF3B,UAII,cAAC,KAAD,CAAQlI,UAAU,gBAClB,sBAAMA,UAAU,aAAhB,6BAGR,sBACAA,UAAS,uBAA8B,kBAAZiI,EAA4B,WAAW,IAClEjG,QAAS,WAAKkG,EAAa,kBAF3B,UAII,cAAC,KAAD,CAA0BlI,UAAS,gBACnC,sBAAMA,UAAU,aAAhB,8BAEJ,sBACAA,UAAS,uBAA8B,cAAZiI,EAAwB,WAAW,IAC9DjG,QAAS,WAAKkG,EAAa,cAF3B,UAII,sBAAKqM,MAAM,KAAKC,OAAO,KAAK0S,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,UAA+F,oBAAGC,SAAS,UAAZ,UAAsB,sBAAMC,EAAE,4DAA4DC,OAAO,qBAAqBC,YAAY,MAAMC,cAAc,QAAQC,eAAe,UAAe,sBAAMJ,EAAE,ksBAAksBH,KAAK,0BAAgC,+BAAM,0BAAUrkB,GAAG,IAAb,SAAiB,sBAAMqkB,KAAK,OAAOG,EAAE,yBACrjC,sBAAMtnB,UAAU,aAAhB,kCAGR,sBAAKA,UAAU,qBAAf,UACI,sBACAA,UAAS,uBAA8B,YAAZiI,EAAsB,WAAW,IAC5DjG,QAAS,WAAKkG,EAAa,YAF3B,UAII,qBAAKqM,MAAM,KAAKC,OAAO,KAAK0S,QAAQ,cAAcE,MAAM,6BAAxD,SAAqF,sBAAME,EAAE,8lBAA8lBH,KAAK,qBAAqBQ,SAAS,cAC9tB,sBAAM3nB,UAAU,aAAhB,wBAEJ,sBACAA,UAAS,uBAA8B,aAAZiI,EAAuB,WAAW,IAC7DjG,QAAS,WAAKkG,EAAa,aAF3B,UAII,cAAC,KAAD,CAAkBlI,UAAS,gBAC3B,sBAAMA,UAAU,aAAhB,+BAEJ,sBACAA,UAAS,uBAA8B,WAAZiI,EAAqB,WAAW,IAC3DjG,QAAS,WAAKkG,EAAa,WAF3B,UAII,cAAC,KAAD,CAAalI,UAAS,gBACtB,sBAAMA,UAAU,aAAhB,+BAEJ,sBACAA,UAAS,uBAA8B,SAAZiI,EAAmB,WAAW,IACzDjG,QAAS,WAAKkG,EAAa,SAF3B,UAII,qBAAKqf,OAAO,qBAAqBhT,MAAM,KAAKC,OAAO,KAAK2S,KAAK,eAAeK,YAAY,IAAIN,QAAQ,YAAYlnB,UAAU,OAAOonB,MAAM,6BAAvI,SAAoK,sBAAMD,KAAK,OAAOI,OAAO,qBAAqBC,YAAY,IAAIF,EAAE,mRACpO,sBAAMtnB,UAAU,aAAhB,+BAEJ,sBAAKA,UAAU,uBACXwE,SAAS,IAAIC,OAAQ,WAAKV,GAAe,IAD7C,UAGI,qBACA/D,UAAU,sBACVgC,QAAS,WAAK+B,GAAe,SAAAkF,GAAI,OAAGA,MAFpC,SAKKtR,GAAc,qBAAKqI,UAAU,cAAcsE,MAAO,CAACigB,gBAAgB,OAAD,OAAS5sB,EAAa8F,OAAtB,UAGtEqG,GAAa,sBAAK9D,UAAU,yCAAf,UACN,sBAAKA,UAAU,YAAYgC,QAAS,WAE5BU,EAAQE,KAAR,iBAAuBjL,EAAaoB,MACpCmP,EAAa,MACbnE,GAAe,IAJvB,UAOI,cAAC,KAAD,IACA,qDAEJ,sBAAK/D,UAAU,YAAYgC,QAjGrC,WACVhF,EAASvB,KACTzB,OAAON,SAASqE,OAAO,MA+FH,UACI,cAAC,KAAD,IACA,yDChHzB,SAAS6pB,KACd,IAAMjwB,EAAe2N,aAAY,SAAA3M,GAAK,OAAIA,EAAMpB,KAAKI,gBACrD,OACE,sBAAKqI,UAAU,MAAf,UACGrI,GAAc,cAACovB,GAAD,IACf,cAAC,IAAD,UACIT,GAAOntB,KAAI,SAAA0uB,GAAK,OAAI,cAAC,IAAD,CAA0BC,OAAK,EAACtB,UAAYqB,EAAMrB,UAAYD,KAAOsB,EAAMtB,MAA9DsB,EAAMtB,c,WCAlCwB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxoB,MAAK,YAAkD,IAA/CyoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUtuB,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAACytB,GAAD,UAIN/iB,SAAS6jB,eAAe,SAM1BX,O","file":"static/js/main.7b9c51e1.chunk.js","sourcesContent":["let localLoggedinUser = null\r\nif (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user)\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: [],\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user}\r\n    case 'USER_REMOVE':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => user._id !== action.userId),\r\n      }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n\r\n    case 'UPDATE_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'ADD_FAV_BOARD':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_FAV_BOARD':\r\n      return { ...state, loggedInUser: action.user }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    default: return state;\r\n  }\r\n}\r\n","const initialState = {\r\n    workspaces: [],\r\n    currWorkspace:{},\r\n    boards:[],\r\n    currBoard: {},\r\n    checkedTasks:[],\r\n    boardWorkspace:{},\r\n    conversationLocation:{}\r\n}\r\n\r\nexport function workspaceReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_WORKSPACES':\r\n            return {\r\n                ...state,\r\n                workspaces: action.workspaces\r\n            }\r\n        case 'UPDATE_CURR_WORKSPACE':\r\n            return {\r\n            ...state,\r\n            currWorkspace: action.workspace\r\n            } \r\n        case 'UPDATE_BOARD_WORKSPACE':\r\n            return {\r\n            ...state,\r\n            boardWorkspace: action.workspace\r\n            }\r\n        case 'ADD_WORKSPACE':\r\n            const workspaces = [...state.workspaces, action.workspace]\r\n            return {\r\n                ...state,\r\n                workspaces,\r\n                currWorkspace: action.workspace\r\n                } \r\n        case 'REMOVE_WORKSPACE':\r\n            return {\r\n                ...state,\r\n                workspaces: state.workspaces.filter((workspace) => workspace._id !== action.workspaceId),\r\n            }\r\n        case 'UPDATE_WORKSPACE':\r\n            return {\r\n                ...state,\r\n                workspaces: state.workspaces.map(workspace => workspace._id === action.workspace._id?action.workspace:workspace )\r\n            } \r\n        case 'UPDATE_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: state.currWorkspace.baords.map( baord=> baord._id === action.newBoard._id?action.newBoard:baord )\r\n            } \r\n        case 'ADD_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: [...state.currWorkspace.baords, action.newBoard]\r\n        } \r\n        case 'REMOVE_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: state.currWorkspace.baords.filter( baord=> baord._id !== action.newBoard._id)\r\n        }\r\n        case 'UPDATE_BOARD':\r\n            return {\r\n                ...state,\r\n                currBoard: action.board\r\n            }\r\n        case 'SET_BOARD':\r\n            return {\r\n                ...state,\r\n                currBoard: action.board\r\n            }\r\n        case 'ADD_CHECKED_TASK':\r\n            return {\r\n                ...state,\r\n                checkedTasks: [...state.checkedTasks,action.currCheckedTask]\r\n            }  \r\n        case 'REMOVE_CHECKED_TASK':\r\n            return {\r\n                ...state,\r\n                checkedTasks: state.checkedTasks.filter(task=>task._id!==action.taskId)\r\n            } \r\n        case 'UPDATE_TASK_CONVERSATION':\r\n            return {\r\n                ...state,\r\n                conversationLocation: action.location\r\n            } \r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    board:{},\r\n    statusLabelList:[],\r\n    lastSeen:'177452dcf160.31ce41e0732050000000000000009'\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARD':\r\n            return {\r\n                ...state,\r\n                board: action.board\r\n            }\r\n        case 'SET_LAST_SEEN_BOARD':\r\n            return {\r\n                ...state,\r\n                lastSeen: action.baordId\r\n            }\r\n\r\n        case 'SET_STATUS_LABLE_LIST':\r\n            return {\r\n                ...state,\r\n                statusLabelList: action.statusLabelList\r\n            }\r\n        case 'ADD_STATUS_LABLE_LIST':\r\n            const statusLabelList = [...state.statusLabelList, action.newLabel]\r\n            return {...state, statusLabelList} \r\n        case 'UPDATE_STATUS_LABLE_LIST':\r\n            return {\r\n                ...state,\r\n                statusLabelList: state.statusLabelList.map(label => label._id === action.label._id?action.label:label )\r\n            }\r\n        case 'REMOVE_STATUS_LABLE_LIST':\r\n            return {\r\n                ...state,\r\n                statusLabelList: state.statusLabelList.filter((label) => label._id !== action.labelId),\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport {userReducer} from './userReducer';\r\nimport systemReducer from './systemReducer';\r\nimport {workspaceReducer} from './workspaceReducer';\r\nimport {boardReducer} from './boardReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  system: systemReducer,\r\n  user: userReducer,\r\n  workspace: workspaceReducer,\r\n  board: boardReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index.js';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import Axios from 'axios'\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? '/api/' : '//localhost:3030/api/'\r\n\r\nvar axios = Axios.create({\r\n  withCredentials: true,\r\n})\r\n\r\nexport default {\r\n  get(endpoint, data) {\r\n    return ajax(endpoint, 'GET', data)\r\n  },\r\n  post(endpoint, data) {\r\n    return ajax(endpoint, 'POST', data)\r\n  },\r\n  put(endpoint, data) {\r\n    return ajax(endpoint, 'PUT', data)\r\n  },\r\n  delete(endpoint, data) {\r\n    return ajax(endpoint, 'DELETE', data)\r\n  },\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n  try {\r\n    const res = await axios({\r\n      url: `${BASE_URL}${endpoint}`,\r\n      method,\r\n      data,\r\n    })\r\n    return res.data\r\n  } catch (err) {\r\n    console.log(\r\n      `Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`\r\n    )\r\n    console.dir(err)\r\n    if (err.response && err.response.status === 401) {\r\n      // window.location.assign('/')\r\n      // window.location.assign('/#/login')\r\n    }\r\n    throw err\r\n  }\r\n}\r\n\r\n","import httpService from './httpService'\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  signup,\r\n  getUsers,\r\n  getById,\r\n  remove,\r\n  update,\r\n  removeFavBoard,\r\n  addFavBoard,\r\n  loginByGoogle,\r\n  guestLogin\r\n}\r\n\r\nfunction getUsers() {\r\n  return httpService.get('user')\r\n}\r\n\r\nfunction getById(userId) {\r\n  return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n  return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n  const newUser = await httpService.put(`user/${user._id}`, user)\r\n  return _handleLogin(newUser)\r\n}\r\n\r\nasync function login(userCred) {\r\n  const user = await httpService.post('auth/login', userCred)\r\n  if(user){ \r\n    return _handleLogin(user)\r\n  }\r\n  // return _handleLogin(user)\r\n}\r\nasync function signup(userCred) {\r\n  const user = await httpService.post('auth/signup', userCred)\r\n  return _handleLogin(user)\r\n}\r\nasync function logout() {\r\n  await httpService.post('auth/logout')\r\n  sessionStorage.clear()\r\n}\r\n\r\nasync function loginByGoogle(userCred) {\r\n  const user = await httpService.post('auth/loginByGoogle', userCred)\r\n  return _handleLogin(user)\r\n}\r\n\r\nfunction _handleLogin(user) {\r\n  sessionStorage.setItem('user', JSON.stringify(user))\r\n  return user\r\n}\r\n\r\nasync function guestLogin() {\r\n  try {\r\n      const user = await login({ email: 'guest@gmail.com', password: '12345' });\r\n      return user\r\n  } catch (err) {\r\n      console.log('userService: Couldn\\'t login as guest');\r\n      throw err;\r\n  }\r\n}\r\n\r\nasync function addFavBoard(user,boardId){\r\n  user.favBoards = [boardId, ...user.favBoards]\r\n  const newUser = await httpService.put(`user/${user._id}`, user)\r\n  return _handleLogin(newUser)\r\n}\r\nasync function removeFavBoard(user,boardId){\r\n  user.favBoards = user.favBoards.filter(_boardId=>_boardId!==boardId)\r\n  const newUser = await httpService.put(`user/${user._id}`, user)\r\n  return _handleLogin(newUser)\r\n}\r\n","import userService from '../../services/userService'\r\nimport { loading, doneLoading } from './systemActions'\r\n\r\n// THUNK\r\nexport function loadUsers() {\r\n  return async (dispatch) => {\r\n    try {\r\n      // example for loading\r\n      dispatch(loading())\r\n      const users = await userService.getUsers()\r\n      dispatch({ type: 'SET_USERS', users })\r\n    } catch (err) {\r\n      console.log('UserActions: err in loadUsers', err)\r\n      // example for rerouting - after changing the store\r\n      // history.push('/some/path');\r\n    } finally {\r\n      dispatch(doneLoading())\r\n    }\r\n  }\r\n}\r\n// THUNK\r\nexport function removeUser(userId) {\r\n  return async (dispatch) => {\r\n    try {\r\n      await userService.remove(userId)\r\n      dispatch({ type: 'USER_REMOVE', userId })\r\n    } catch (err) {\r\n      console.log('UserActions: err in removeUser', err)\r\n    }\r\n  }\r\n}\r\n// THUNK\r\nexport function login(userCreds) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const user = await userService.login(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n      return user\r\n    } catch (err) {\r\n      console.log('UserActions: err in login', err)\r\n    }\r\n  }\r\n}\r\nexport function signup(userCreds) {\r\n  return async (dispatch) => {\r\n    const user = await userService.signup(userCreds)\r\n    dispatch({ type: 'SET_USER', user })\r\n  }\r\n}\r\nexport function logout() {\r\n  return async (dispatch) => {\r\n    await userService.logout()\r\n    dispatch({ type: 'SET_USER', user: null })\r\n  }\r\n}\r\n\r\nexport function loginByGoogle(userCreds) {\r\n  return async (dispatch) => {\r\n    const user = await userService.loginByGoogle(userCreds)\r\n    dispatch({ type: 'SET_USER', user })\r\n  }\r\n}\r\n\r\nexport function guestLogin() {\r\n  return async dispatch => {\r\n      try {\r\n          const user = await userService.guestLogin();\r\n          dispatch({ type: 'SET_USER', user })\r\n      } catch (err) {\r\n          console.log('userActions: Couldn\\'t login as a guest');\r\n          throw err;\r\n      }\r\n  }\r\n}\r\n\r\nexport function updateUser(newUser) {\r\n  return async (dispatch) => {\r\n    const user = await userService.update(newUser)\r\n    dispatch({ type: 'UPDATE_USER', user })\r\n  }\r\n}\r\n\r\nexport function toggleFavUserBoardList(loggedInUser,boardId){\r\n    const newFavBoardList = loggedInUser.favBoards.filter(_boardId=>_boardId===boardId)\r\n    if(newFavBoardList.length>0){\r\n      return async dispatch => {\r\n        try{\r\n            const user = await userService.removeFavBoard(loggedInUser,boardId)\r\n            dispatch({ type: 'REMOVE_FAV_BOARD', user})\r\n        }catch(err){\r\n            console.log('UserActions: err in removeFavoriteBoard', err); \r\n        }\r\n      }\r\n    }else{\r\n      return async (dispatch) => {\r\n        try{\r\n            const user = await userService.addFavBoard(loggedInUser,boardId)\r\n            dispatch({ type: 'ADD_FAV_BOARD', user})\r\n        }catch(err){\r\n            console.log('UserActions: err in addFavoriteBoard', err); \r\n        }\r\n      }\r\n    }\r\n}\r\n\r\n","export function loading() {\r\n  return { type: 'LOADING_START' }\r\n}\r\nexport function doneLoading() {\r\n  return { type: 'LOADING_DONE' }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { loginByGoogle } from '../store/actions/userActions'\r\n\r\nexport class _GoogleOauth extends Component {\r\n    responseGoogle = (response) => {\r\n        const userCreds = { \r\n            email: response.profileObj.email,\r\n            avatar:response.profileObj.imageUrl, \r\n            username: response.profileObj.givenName \r\n        }\r\n        this.props.loginByGoogle(userCreds)\r\n        this.props.closeModal()\r\n        window.location.assign('/#/boards/')\r\n    }\r\n       \r\n    render() {\r\n        return (\r\n           <div>\r\n                <GoogleLogin\r\n                    clientId=\"866960241942-jhfvtsh6b7adl5jae5cth72jlhug4i72.apps.googleusercontent.com\"\r\n                    buttonText=\"Login With Google\"\r\n                    onSuccess={this.responseGoogle}\r\n                    onFailure={this.responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                />\r\n           </div> \r\n        )}\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      users: state.user.users,\r\n      loggedInUser: state.user.loggedInUser,\r\n      isLoading: state.system.isLoading,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loginByGoogle\r\n}\r\nexport const GoogleOauth = connect(mapStateToProps, mapDispatchToProps)(_GoogleOauth)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Particles from 'react-particles-js'\r\nimport { GoogleOauth } from '../cmps/GoogleOauth'\r\n\r\nimport {\r\n  loadUsers,\r\n  removeUser,\r\n  login,\r\n  logout,\r\n  signup,\r\n  guestLogin\r\n} from '../store/actions/userActions'\r\n\r\nclass _Login extends Component {\r\n  state = {\r\n    msg: '',\r\n    loginCred: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    signupCred: {\r\n      email: '',\r\n      password: '',\r\n      username: '',\r\n    },\r\n    section: true,\r\n  }\r\n\r\n  loginHandleChange = (ev) => {\r\n    const { name, value } = ev.target\r\n    this.setState((prevState) => ({\r\n      loginCred: {\r\n        ...prevState.loginCred,\r\n        [name]: value,\r\n      },\r\n    }))\r\n  }\r\n\r\n  signupHandleChange = (ev) => {\r\n    const { name, value } = ev.target\r\n    this.setState((prevState) => ({\r\n      signupCred: {\r\n        ...prevState.signupCred,\r\n        [name]: value,\r\n      },\r\n    }))\r\n  }\r\n\r\n  doLogin = async (ev) => {\r\n    ev.preventDefault()\r\n    const { email, password } = this.state.loginCred\r\n    if (!email || !password) {\r\n      return this.setState({ msg: 'Please enter user/password' })\r\n    }\r\n    const userCreds = { email, password }\r\n    const user = this.props.login(userCreds)\r\n    user.then(data=>\r\n      {if(data){\r\n        this.setState({ loginCred: { email: '', password: '' } })\r\n        this.props.closeModal()\r\n        window.location.assign('/#/boards/')\r\n      }else{\r\n        return this.setState({ msg: 'Invalid email or password'})\r\n      }\r\n    })\r\n  }\r\n\r\n  doSignup = async (ev) => {\r\n    ev.preventDefault()\r\n    const { email, password, username } = this.state.signupCred\r\n    if (!email || !password || !username) {\r\n      return this.setState({ msg: 'All inputs are required!' })\r\n    }\r\n    const signupCreds = { email, password, username }\r\n    this.props.signup(signupCreds)\r\n    this.setState({ signupCred: { email: '', password: '', username: '' } })\r\n    this.props.closeModal()\r\n    window.location.assign('/#/boards/')\r\n  }\r\n\r\n  // onGuestLogin = async () => {\r\n  //   await this.props.guestLogin();\r\n  //   window.location.assign('/#/boards/')\r\n  // }\r\n\r\n  removeUser = (userId) => {\r\n    this.props.removeUser(userId)\r\n  }\r\n\r\n  onSignup = () => {\r\n    this.setState({ section: !this.state.section })\r\n  }\r\n\r\n  render() {\r\n    let signupSection = (\r\n      <form onSubmit={this.doSignup} className='signup-container'>\r\n        <input\r\n          className='login-input'\r\n          type='text'\r\n          name='email'\r\n          value={this.state.signupCred.email}\r\n          onChange={this.signupHandleChange}\r\n          placeholder='Email'\r\n        />\r\n        <br />\r\n        <input\r\n          className='login-input'\r\n          name='password'\r\n          type='password'\r\n          value={this.state.signupCred.password}\r\n          onChange={this.signupHandleChange}\r\n          placeholder='Password'\r\n        />\r\n        <br />\r\n        <input\r\n          className='login-input'\r\n          type='text'\r\n          name='username'\r\n          value={this.state.signupCred.username}\r\n          onChange={this.signupHandleChange}\r\n          placeholder='Username'\r\n          maxLength=\"10\"\r\n        />\r\n        <br />\r\n        <button className='login-btn'>Signup</button>\r\n      </form>\r\n    )\r\n    let loginSection = (\r\n      <form onSubmit={this.doLogin} className='login-container'>\r\n        <input\r\n          className='login-input'\r\n          type='text'\r\n          name='email'\r\n          value={this.state.loginCred.email}\r\n          onChange={this.loginHandleChange}\r\n          placeholder='Email'\r\n        />\r\n        <br />\r\n        <input\r\n          className='login-input'\r\n          type='password'\r\n          name='password'\r\n          value={this.state.loginCred.password}\r\n          onChange={this.loginHandleChange}\r\n          placeholder='Password'\r\n        />\r\n        <br />\r\n        <button className='login-btn'>Login</button>\r\n      </form>\r\n    )\r\n\r\n    const { loggedInUser } = this.props\r\n    return (\r\n      <React.Fragment>\r\n        <Particles\r\n          canvasClassName='example'\r\n          params={{\r\n            particles: {\r\n              number: {\r\n                value: 160,\r\n                density: {\r\n                  enable: false,\r\n                },\r\n              },\r\n              size: {\r\n                value: 3,\r\n                random: true,\r\n                anim: {\r\n                  speed: 4,\r\n                  size_min: 0.3,\r\n                },\r\n              },\r\n              line_linked: {\r\n                enable: false,\r\n              },\r\n              move: {\r\n                random: true,\r\n                speed: 1,\r\n                direction: 'top',\r\n                out_mode: 'out',\r\n              },\r\n            },\r\n            interactivity: {\r\n              events: {\r\n                onhover: {\r\n                  enable: true,\r\n                  mode: 'bubble',\r\n                },\r\n                onclick: {\r\n                  enable: true,\r\n                  mode: 'repulse',\r\n                },\r\n              },\r\n              modes: {\r\n                bubble: {\r\n                  distance: 250,\r\n                  duration: 2,\r\n                  size: 0,\r\n                  opacity: 0,\r\n                },\r\n                repulse: {\r\n                  distance: 400,\r\n                  duration: 4,\r\n                },\r\n              },\r\n            },\r\n          }}></Particles>\r\n        <div className='login-page'>\r\n        <button className='close-modal' onClick={this.props.closeModal}>\r\n              x\r\n          </button>\r\n          <h1 className='login-title'>\r\n            <div\r\n              className={`welcome-txt ${\r\n                this.props.addFavMovieTxt ? 'hide-txt' : ''\r\n              }`}>\r\n              <div>Welcome</div>\r\n              <div className='welcome-txt2'>\r\n                Sign in with your email address\r\n              </div>\r\n            </div>\r\n          </h1>\r\n          <h2 className='mag'>{this.state.msg}</h2>\r\n\r\n\r\n          <div className='auth-form'>\r\n\r\n            {!loggedInUser && this.state.section ? loginSection : signupSection}\r\n            <div className='login-txt'>\r\n              {`${this.state.section ? \"DON'T HAVE ACCOUNT YET?\" : ''}`}{' '}\r\n            </div>\r\n            <div className=\"google-oauth\">\r\n            <GoogleOauth className=\"google-oauth-btn\" closeModal={this.props.closeModal}/>\r\n            </div>\r\n            <div className='login-txt-btn' onClick={this.onSignup}>{`${\r\n              this.state.section ? 'Signup Here' : 'Go Back'\r\n            }`}</div>\r\n          </div>\r\n\r\n          <hr />\r\n         \r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: state.user.users,\r\n    loggedInUser: state.user.loggedInUser,\r\n    isLoading: state.system.isLoading,\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  removeUser,\r\n  loadUsers,\r\n  guestLogin\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)\r\n","import React from 'react'\r\nimport {Login} from '../pages/Login'\r\nexport class LoginModal extends React.Component {\r\n  state = {\r\n    isShown: true,\r\n  }\r\n  closeModal = () => {\r\n    this.setState({ isShown: false })\r\n    this.props.onOpenModal()\r\n  }\r\n  render() {\r\n    const { isShown } = this.state\r\n    return (\r\n      <div\r\n        className={`modal-wrapper ${isShown ? '' : 'hide'}`}\r\n        onClick={this.closeModal}>\r\n        <div className='login-modal-content' onClick={(ev) => ev.stopPropagation()}>\r\n          <Login closeModal={this.closeModal} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions'\r\nimport { LoginModal } from '../cmps/LoginModal';\r\nimport {guestLogin} from '../store/actions/userActions'\r\n\r\nexport class _Home extends Component {\r\n    state ={\r\n        showComponent: false\r\n    }\r\n    onOpenModal=()=>{\r\n        this.setState({\r\n            showComponent: !this.state.showComponent\r\n          });\r\n    }\r\n    logout=()=>{\r\n        if(this.props.history.location.pathname==='/boards'){\r\n            this.props.history.push('/')\r\n            this.props.logout()\r\n        }else{\r\n            this.props.logout()\r\n        }\r\n    }\r\n\r\n    onGuestLogin = async () => {\r\n        await this.props.guestLogin();\r\n        window.location.assign('/#/boards/')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home-page\">\r\n                <div className=\"login-btn\">\r\n                {!this.props.loggedInUser&& \r\n                <div className=\"user-login  after-canvas\" onClick={this.onOpenModal}>Log in</div>\r\n                }\r\n                {this.props.loggedInUser && <div className=\"user-name\">Hello {this.props.loggedInUser.username}</div>}\r\n                {this.props.loggedInUser&&<div id=\"logout-btn\" onClick={this.logout}>Logout</div>}\r\n\r\n                </div>\r\n                {!this.props.loggedInUser&& <div className=\"login-btn\">\r\n                <div className=\"user-login  after-canvas\" onClick={this.onGuestLogin}>\r\n                    Try as a guest\r\n                </div>\r\n                </div>}\r\n                {this.state.showComponent&&<LoginModal onOpenModal={this.onOpenModal}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser, \r\n        users: state.user.users,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout,\r\n    guestLogin\r\n}\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Home))","import React, { Component } from 'react'\r\n\r\nexport class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>about</div>\r\n        )\r\n    }\r\n}\r\n","export const colorsPicker = [\r\n    '#f368e0',\r\n    '#FC427B',\r\n    '#e84118',\r\n    '#ff6b6b',\r\n    '#ff9f43',\r\n    '#f3a683',\r\n    '#feca57',\r\n    '#fbc531',\r\n    '#4cd137',\r\n    '#1dd1a1',\r\n    '#01a3a4',\r\n    '#48dbfb',\r\n    '#54a0ff',\r\n    '#00a8ff',\r\n    '#487eb0',\r\n    '#273c75',\r\n    '#3B3B98',\r\n    '#341f97',\r\n    '#5f27cd',\r\n    '#9c88ff',\r\n    '#D6A2E8',\r\n    // '#ff9ff3',\r\n    // '#f8a5c2',\r\n    // '#f78fb3',\r\n    // '#c8d6e5',\r\n    // '#7f8fa6',\r\n    // '#353b48',\r\n    // 'black'\r\n]","export const iconsPicker = [\r\n    'A',\r\n    'B',\r\n    'C',\r\n    'D',\r\n    'R',\r\n    'T',\r\n    'U',\r\n    'I',\r\n    'O',\r\n    'P',\r\n    'L',\r\n    'Q',\r\n    'Z',\r\n    'E',\r\n    'V',\r\n    'M',\r\n    'N',\r\n    'G',\r\n    'J',\r\n    'H',\r\n]","import React, { useState,useRef,useEffect } from 'react';\r\nimport { FaPencilAlt } from 'react-icons/fa'\r\nimport { SiPandora } from 'react-icons/si';\r\nimport { BiCheck } from 'react-icons/bi';\r\nimport {colorsPicker } from '../data/shortColorPicker.js';\r\nimport {iconsPicker } from '../data/iconsPicker';\r\n\r\nexport function CreateWorkspace({setIsShown,addNewWorkspace}) {\r\n\r\n    const[newWorkspaceName,setNewWorkspaceName]=useState('New Workspace')\r\n    const[newWorkspaceColor,setNewWorkspaceColor]=useState('#f368e0')\r\n    const[newWorkspaceIcon,setNewWorkspaceIcon]=useState('M')\r\n    const[isOpenModal,setIsOpenModal]=useState(false)\r\n\r\n    const inputEl = useRef()\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            inputEl.current.focus()\r\n        }, 0); \r\n    }, [])\r\n    const focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    const handleChangeName =(ev)=>{\r\n        setNewWorkspaceName(ev.target.value)\r\n    }\r\n\r\n    return (\r\n    <div className=\"create-workspace create-item-wrapper\"\r\n     >\r\n        <div className=\"create-item-title\">Create Workspace</div>\r\n        <div\r\n            className=\"workspace-icon\"  \r\n            style={{backgroundColor:`${newWorkspaceColor}`}}\r\n            onClick={()=>{setIsOpenModal(true)}}\r\n            tabIndex=\"0\"\r\n            onBlur={()=>{setIsOpenModal(false)}}\r\n            >\r\n           {newWorkspaceIcon}\r\n           {!isOpenModal&&<div className=\"workspace-icon-edit\" >\r\n               <div><FaPencilAlt className=\"workspace-edit-pencil\"/></div>\r\n               <div>Edit</div>\r\n           </div>}\r\n           {isOpenModal&&<div className=\" modal-default-style workspace-icon-modal\">\r\n                <div className=\"small-font\">Background color</div>\r\n                <div className=\"workspace-color-picker\">\r\n                    {colorsPicker.map(color=>\r\n                        <div className=\"workspace-color\" style={{backgroundColor:`${color}`}}\r\n                         onClick={()=>setNewWorkspaceColor(color)}\r\n                         >\r\n                             {newWorkspaceColor===color&&<BiCheck/>}\r\n                         </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"small-font\">Icon</div>\r\n                <div className=\"icon-picker\">\r\n                    {iconsPicker.map(icon=>\r\n                        <div className=\"icon\"\r\n                        style={{backgroundColor:`${newWorkspaceColor}`}}\r\n                         onClick={()=>setNewWorkspaceIcon(icon)}\r\n                         >\r\n                           {icon}\r\n                         </div>\r\n                    )}\r\n                </div>\r\n           </div>}\r\n        </div>\r\n        <div className=\"workspace-name small-font\">Workspace name</div>\r\n        <input \r\n            className=\"new-item-input\"\r\n            type=\"text\" \r\n            value={newWorkspaceName} \r\n            onChange={handleChangeName}\r\n            onFocus={focusText}\r\n            ref={inputEl}\r\n            onKeyDown={(ev) => {\r\n                if (ev.key === 'Enter') {\r\n                    if(newWorkspaceName.length<1)return\r\n                    addNewWorkspace(newWorkspaceName,newWorkspaceColor,newWorkspaceIcon)\r\n                    setIsShown(false)\r\n                }\r\n            }}\r\n        />\r\n        <div className=\"btns-container\">\r\n            <div className=\"cancel-btn\" onClick={ ()=>{setIsShown(false)} }>Cancel</div>\r\n            <div className='add-btn' onClick={()=>{\r\n            if(newWorkspaceName.length<1)return\r\n            addNewWorkspace(newWorkspaceName,newWorkspaceColor,newWorkspaceIcon)\r\n            setIsShown(false)\r\n            }}>Create Workspace</div>\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\nimport { IoCloseOutline } from 'react-icons/io5'\r\n\r\nexport function PopupModal({setIsShown,children}) {\r\n    return (\r\n        <div className={ `modal-wrapper` }>\r\n            <div className=\"modal-content\" onClick={ (ev) => ev.stopPropagation() }>\r\n                <div className=\"close-popup-modal\" onClick={ ()=>{setIsShown(false)} }><IoCloseOutline className=\"icon\"/></div>\r\n               { children }\r\n            </div>\r\n        </div >\r\n    )\r\n}","import React, { useState,useRef,useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUser } from '../store/actions/userActions'\r\n\r\nexport function PinCheckbox({workspace}){\r\n\r\n    const dispatch = useDispatch();\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const [checked, setChecked] = useState(loggedInUser.pinnedWorkspaces.includes(workspace._id))\r\n   \r\n\r\n    useEffect(() => {\r\n        setChecked(loggedInUser.pinnedWorkspaces.includes(workspace._id))\r\n    }, [workspace,loggedInUser.pinnedWorkspaces])\r\n\r\n\r\n    function handleChange(workspaceId) {\r\n        checked?unpinWorkspace(workspaceId):pinWorkspace(workspaceId)\r\n    }\r\n\r\n    function pinWorkspace(workspaceId) {\r\n        const newUser= {\r\n            ...loggedInUser,\r\n            pinnedWorkspaces:[\r\n                ...loggedInUser.pinnedWorkspaces,\r\n                workspaceId\r\n            ]\r\n        }\r\n        dispatch(updateUser(newUser))\r\n    }\r\n\r\n    function unpinWorkspace(workspaceId) {\r\n        const newUser= {\r\n            ...loggedInUser,\r\n            pinnedWorkspaces:loggedInUser.pinnedWorkspaces.filter(id=>id!==workspaceId)\r\n        }\r\n        dispatch(updateUser(newUser))\r\n    }\r\n\r\n    return(\r\n        <input type=\"checkbox\"\r\n                className=\"checkbox\"\r\n                defaultChecked={checked}\r\n                onChange={()=>handleChange(workspace._id)}\r\n        />\r\n    )\r\n}\r\n","import React, { useState,useRef,useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { PinCheckbox } from \"./PinCheckbox\";\r\n\r\nexport function WorkspaceList({\r\n    onMoveObject,\r\n    object,\r\n    isCheckbox,\r\n    search,\r\n    setSearch\r\n}){\r\n\r\n    const workspaces = useSelector(state => state.workspace.workspaces);\r\n    const currWorkspace = useSelector(state => state.workspace.currWorkspace);\r\n    const [listOfWorkspaces, setListOfWorkspaces] = useState(\r\n        object==='insideFolder'?\r\n        workspaces:\r\n        workspaces.filter(workspace=>workspace._id!==currWorkspace._id)\r\n    );\r\n    useEffect(() => {\r\n        object==='insideFolder'||isCheckbox?\r\n        setListOfWorkspaces(workspaces):\r\n        setListOfWorkspaces(\r\n            workspaces.filter(workspace=>workspace._id!==currWorkspace._id)\r\n        )\r\n    }, [currWorkspace,workspaces,object,isCheckbox])\r\n    return(\r\n        <div>\r\n            <input type=\"search\" placeholder=\"Search Workspace\" className=\"forward-modal-search-input\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n           {    listOfWorkspaces.map(workspace=>\r\n                    workspace.name.toLowerCase().includes(search.toLowerCase())?\r\n                    <div \r\n                    className={`modal-btn item-actions-btn forward-modal-btn ${isCheckbox?'remove-pointer':''}`}\r\n                    key={workspace._id} \r\n                    onClick={()=>{\r\n                        if(isCheckbox){\r\n                            return\r\n                        }\r\n                        onMoveObject(workspace)\r\n                    }}\r\n                    >\r\n                        <div>\r\n                            <div \r\n                            className=\"workspace-icon\" \r\n                            style={{backgroundColor:workspace.color}}\r\n                            >{workspace.img}</div>\r\n                            <span  className=\"workspace-name\">{workspace.name}</span>\r\n                        </div>\r\n                       {isCheckbox&&\r\n                       <PinCheckbox workspace={workspace}/>\r\n                        }\r\n                        \r\n                    </div>:\r\n                    null\r\n                )\r\n           }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState,useRef,useEffect } from 'react';\r\nimport {IoArrowForwardCircleOutline } from 'react-icons/io5'\r\nimport { IoIosArrowForward } from 'react-icons/io'\r\nexport function ForwardModal({\r\n    children,btn,setMoveToObject,isFolderModal,\r\n    toggleShownForwardModal,isWorkspaceIconPicker,\r\n    itemList,moveToObject,setSearch\r\n\r\n}) {\r\n    const [isShown, setIsShown] = useState(false);\r\n\r\n    useEffect(() => {\r\n        toggleShownForwardModal(isShown)\r\n    }, [isShown,toggleShownForwardModal])\r\n\r\n    return (\r\n        <div className='forward-modal-btn-wrapper'\r\n        onMouseOver={()=>setIsShown(true)}\r\n        onMouseLeave={()=>{\r\n            setIsShown(false)\r\n            if(isFolderModal){\r\n                setMoveToObject(null)\r\n            }\r\n            (itemList||moveToObject)&&setSearch('')\r\n        }}\r\n       >\r\n           <div  \r\n           className={`modal-btn item-actions-btn forward-modal-btn ${isShown?'open-modal':''} `}\r\n           >\r\n                {btn}\r\n               <IoIosArrowForward className=\"icon\"/>\r\n           </div>\r\n           {\r\n                   isShown&&\r\n                   <div \r\n                   className={`modal-default-style ${isWorkspaceIconPicker?'menu-icon-picker':'forward-modal'}\r\n                   ${itemList||moveToObject?'items-list':''}\r\n                   `}\r\n                   >\r\n                        {children}\r\n                   </div>\r\n           }\r\n       </div>     \r\n    );\r\n}\r\n","import React, { useEffect,useState } from 'react';\r\nimport { IoIosArrowForward,IoIosAddCircleOutline } from 'react-icons/io'\r\nimport {VscPinned } from 'react-icons/vsc'\r\nimport {MdSortByAlpha } from 'react-icons/md'\r\nimport { WorkspaceList } from './WorkspaceList';\r\nimport { ForwardModal } from \"./ForwardModal\";\r\n\r\nexport function ToolbarOptionsModal({\r\n    setIsShown,\r\n    setIsOpenToolbarOptionsModal,\r\n    toggleShownForwardModal,\r\n    onSortWorkspces,\r\n    isSorted\r\n}){\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    return(\r\n    <div className=\"modal-default-style item-actions-modal toolbar-options-modal\">\r\n        <div className=\"modal-btn item-actions-btn\" onMouseDown={()=>{\r\n            setIsShown(true)\r\n            setIsOpenToolbarOptionsModal(false)\r\n            }}\r\n        >\r\n            <IoIosAddCircleOutline className=\"icon\"/>\r\n           <span>Add new workspace</span>\r\n        </div>\r\n        <ForwardModal  \r\n        btn={<div>\r\n                <VscPinned className=\"icon\"/>\r\n                <span>Pin workspaces</span>\r\n            </div>\r\n        }\r\n        toggleShownForwardModal={toggleShownForwardModal}\r\n        itemList={true}\r\n        setSearch={setSearch} \r\n        >\r\n            <div className=\"pin-workspace-title\">Choose Workspace to pin on menu</div>\r\n            <WorkspaceList \r\n            isCheckbox = {true}\r\n            search={search} \r\n            setSearch={setSearch} \r\n            />\r\n        </ForwardModal>\r\n        <div className=\"modal-btn item-actions-btn\"\r\n         onMouseDown={()=>{\r\n            onSortWorkspces()\r\n            setIsOpenToolbarOptionsModal(false)\r\n        }}\r\n        >\r\n            <MdSortByAlpha className=\"icon\"/>\r\n            <span>Sort by {`${isSorted?'default':'alphabetical'}`} order</span>\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React, { useEffect,useState,useRef } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { CreateWorkspace } from \"./CreateWorkspace\";\r\nimport { PopupModal } from \"./PopupModal\";\r\nimport { ToolbarOptionsModal } from \"./ToolbarOptionsModal\";\r\n\r\nexport function BoardToolbar({BsLightning, BsStar, BsThreeDots, onGettingCurrentWorkspace,addNewWorkspace,onSetToolbarMenu}) {\r\n    const allWorkspaces = useSelector(state => state.workspace.workspaces);\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const [workspaces,setWorkspaces] = useState(allWorkspaces.filter(\r\n        workspace=>loggedInUser.pinnedWorkspaces.includes(workspace._id))\r\n        )\r\n    const currWorkspace = useSelector(state => state.workspace.currWorkspace);\r\n    const [activeBtn, setActiveBtn] = useState(currWorkspace._id)\r\n    const [activeBtnClass, setActiveBtnClass] = useState()\r\n    const [isShown, setIsShown] = useState(false)\r\n    const [isOpenToolbarOptionsModal, setIsOpenToolbarOptionsModal] = useState(false)\r\n    const [isShownPinWorkspaceModal, setIsShownPinWorkspaceModal] = useState(false)\r\n    const btnEl = useRef()\r\n    const [isSorted, setIsSorted] = useState(false)\r\n    const [pinedworkspaces, setPinedworkspaces] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setWorkspaces(allWorkspaces.filter(\r\n            workspace=>loggedInUser.pinnedWorkspaces.includes(workspace._id))\r\n            )\r\n    }, [loggedInUser,loggedInUser.pinnedWorkspaces,allWorkspaces])\r\n\r\n    useEffect(() => {\r\n        setActiveBtn(currWorkspace._id)\r\n    }, [currWorkspace,workspaces])\r\n    \r\n    useEffect(() => {\r\n        setActiveBtnClass(activeBtn)\r\n        onSetToolbarMenu(activeBtn)\r\n    }, [activeBtn,onSetToolbarMenu])\r\n\r\n    useEffect(() => {\r\n        if(!isShownPinWorkspaceModal){\r\n            // if(btnEl.current){\r\n            //     setTimeout(() => {\r\n            //         btnEl.current.focus()\r\n            //     }, 0);\r\n            // }\r\n            setTimeout(() => {\r\n                if(btnEl&&btnEl.current){\r\n                    btnEl.current.focus()\r\n                }\r\n            }, 0);\r\n        }\r\n    }, [isShownPinWorkspaceModal])\r\n\r\n    const toggleShownForwardModal=(val)=>{\r\n        setIsShownPinWorkspaceModal(val)\r\n    }\r\n\r\n    function onSortWorkspces() {\r\n        setIsSorted(curr=>!curr)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isSorted){\r\n            let array = [...workspaces]\r\n            array.sort((a, b) => a.name.localeCompare(b.name)) \r\n            setPinedworkspaces(array)\r\n        }else{\r\n            setPinedworkspaces(workspaces)\r\n        }\r\n    }, [isSorted,workspaces])\r\n   \r\n\r\n    if (!pinedworkspaces) return <div>Loading....</div>\r\n    return (\r\n    <div className=\"board-toolbar\">\r\n        <div className=\"board-first-area\">\r\n            <div className=\"icon-wrapper\">\r\n                <BsLightning \r\n                className={`tollbar-icon ${activeBtnClass==='lightning'?'selected':''}`}\r\n                onClick={()=>setActiveBtn('lightning')}\r\n                />\r\n                <span className=\"label-text\">Quick Search</span>\r\n            </div>\r\n            <div className=\"icon-wrapper\">\r\n                <BsStar \r\n                className={`tollbar-icon ${activeBtnClass==='favorite'?'selected':''}`}\r\n                onClick={()=>setActiveBtn('favorite')}\r\n                />\r\n                <span className=\"label-text\">Favorite boards</span>\r\n            </div>\r\n            {\r\n                pinedworkspaces.map((workspace,idx)=>\r\n                    <div key={workspace._id}\r\n                    className={`workspace-wrapper ${activeBtnClass===workspace._id?'selected':''}`}\r\n                    onClick={()=>setActiveBtn(workspace._id)}\r\n                    >\r\n                        <div \r\n                        className=\"workspace-icon\" \r\n                        onClick={()=>onGettingCurrentWorkspace(workspace)}\r\n                        style={{backgroundColor:workspace.color}}\r\n                        >{workspace.img}</div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        <div className=\"board-second-area\">\r\n            <div className=\"icon-wrapper\"\r\n            tabIndex=\"0\"\r\n            onClick={()=>{setIsOpenToolbarOptionsModal(curr=>!curr)}}\r\n            onBlur={()=>{\r\n                setIsOpenToolbarOptionsModal(isShownPinWorkspaceModal)\r\n            }}\r\n            ref={btnEl}\r\n            >\r\n                <BsThreeDots\r\n                className={`tollbar-icon ${isOpenToolbarOptionsModal?'selected':''}`}\r\n                />\r\n            </div>\r\n\r\n            {isOpenToolbarOptionsModal&&\r\n                <ToolbarOptionsModal \r\n                setIsOpenToolbarOptionsModal={setIsOpenToolbarOptionsModal}\r\n                setIsShown={setIsShown}\r\n                toggleShownForwardModal={toggleShownForwardModal}\r\n                onSortWorkspces={onSortWorkspces}\r\n                isSorted={isSorted}\r\n                />\r\n            }\r\n        </div>\r\n        {isShown&&<PopupModal setIsShown={setIsShown} >\r\n            <CreateWorkspace setIsShown={setIsShown} addNewWorkspace={addNewWorkspace}/>\r\n        </PopupModal>}\r\n    </div>\r\n    );\r\n}","import httpService from './httpService'\r\n\r\nexport const workspaceService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n    add,\r\n    addLabel,\r\n    editLabel,\r\n    removeLabel\r\n    \r\n}\r\n\r\n\r\nfunction query(filterBy) {\r\n    // const queryStr = `?search=${filterBy.search}&minYear=${filterBy.minYear}&maxYear=${filterBy.maxYear}&type=${filterBy.type}`;\r\n    // return httpService.get(`workspace${queryStr}`);\r\n    return httpService.get('workspace')\r\n}\r\n\r\nfunction getById(workspaceId) {\r\n    return httpService.get(`workspace/${workspaceId}`)\r\n}\r\n\r\nfunction save(workspace) {\r\n    return httpService.put(`workspace/${workspace._id}`, workspace)\r\n}\r\n\r\n\r\nfunction remove(workspaceId) {\r\n    return httpService.delete(`workspace/${workspaceId}`);\r\n}\r\n\r\nasync function add(workspace) {\r\n    const addedWorkspace  = await httpService.post('workspace', workspace);\r\n    return  addedWorkspace\r\n}\r\n\r\n//StatusLabelList\r\nasync function getCurrBoard() {\r\n    const workspaces = await query()\r\n    // console.log(\"workspaces from query:\",workspaces)\r\n    const currBoard = await workspaces.map(workspace=>workspace.boards.filter(board=>board.isLastSeen===true))[0]\r\n    return currBoard\r\n}\r\n\r\nfunction getStatusLabelList() {\r\n   const board = getCurrBoard()\r\n//    console.log(\"board.statusLabelList\",board.statusLabelList)\r\n   return board.statusLabelList\r\n}\r\nfunction addLabel(newLabel) {\r\n   let statusLabelList = getStatusLabelList()\r\n   statusLabelList = [...statusLabelList, newLabel]\r\n   return statusLabelList\r\n}\r\nfunction editLabel(newLabel) {\r\n    let statusLabelList = getStatusLabelList()\r\n    statusLabelList.map(label=>label._id===newLabel._id?newLabel:label)\r\n    return statusLabelList\r\n}\r\nfunction removeLabel(labelId) {\r\n    let statusLabelList = getStatusLabelList()\r\n    statusLabelList = statusLabelList.filter(label=>label._id!==labelId)\r\n    return statusLabelList\r\n}","import { workspaceService } from '../../services/workspaceService'\r\nimport { loading, doneLoading } from './systemActions';\r\n\r\nexport function loadWorkspaces(filterBy) {\r\n  \r\n    return async dispatch => {\r\n        try{\r\n            dispatch(loading());\r\n            const workspaces = await workspaceService.query(filterBy);\r\n            dispatch({ type: 'SET_WORKSPACES', workspaces })\r\n        }catch(err){\r\n            console.log('WorkspaceActions: err in loadWorkspaces', err);\r\n        }finally{\r\n            dispatch(doneLoading());\r\n        }\r\n    }\r\n}\r\n\r\nexport function addWorkspace(newworkspace) {\r\n    return async dispatch => {\r\n        try{\r\n          const workspace = await workspaceService.add(newworkspace)\r\n            dispatch({ type: 'ADD_WORKSPACE', workspace})\r\n            return workspace\r\n        }catch(err){\r\n            console.log('WorkspaceActions: err in addWorkspace', err); \r\n        }\r\n    }\r\n}\r\n\r\nexport function updateWorkspace(workspace) {\r\n    return async dispatch => {\r\n        try{\r\n            await workspaceService.save(workspace)\r\n            dispatch({ type: 'UPDATE_WORKSPACE', workspace})\r\n        }catch(err){\r\n            console.log('WorkspaceActions: err in updateWorkspace', err); \r\n        }\r\n    }\r\n}\r\n\r\nexport function removeWorkspace(workspaceId) {\r\n    return async (dispatch) => {\r\n      try {\r\n        await workspaceService.remove(workspaceId)\r\n        dispatch({ type: 'REMOVE_WORKSPACE', workspaceId })\r\n      } catch (err) {\r\n        console.log('WorkspaceActions: err in removeWorkspace', err)\r\n      }\r\n    }\r\n  }\r\n\r\n    \r\nexport function updateCurrWorkspace(workspace) {\r\n    return async (dispatch) => {\r\n      try {\r\n        dispatch({ type: 'UPDATE_CURR_WORKSPACE', workspace })\r\n      } catch (err) {\r\n        console.log('WorkspaceActions: err in updateCurrWorkspace', err)\r\n      }\r\n    }\r\n}\r\nexport function updateBoardWorkspace(workspace) {\r\n    return async (dispatch) => {\r\n      try {\r\n        dispatch({ type: 'UPDATE_BOARD_WORKSPACE', workspace })\r\n      } catch (err) {\r\n        console.log('WorkspaceActions: err in updateBoardWorkspace', err)\r\n      }\r\n    }\r\n}\r\n\r\nexport function updateTaskConversation(location) {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: 'UPDATE_TASK_CONVERSATION', location })\r\n    } catch (err) {\r\n      console.log('WorkspaceActions: err in updateTaskConversation', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function updateBoards(newBoard) {\r\n    return async (dispatch) => {\r\n      try {\r\n        // await workspaceService.updateBoards(workspace,newBoard)\r\n        dispatch({ type: 'UPDATE_BOARDS', newBoard })\r\n      } catch (err) {\r\n        console.log('WorkspaceActions: err in updateBoards', err)\r\n      }\r\n    }\r\n}\r\nexport function removeBoards(newBoard) {\r\n    return async (dispatch) => {\r\n      try {\r\n        // await workspaceService.updateBoards(workspace,newBoard)\r\n        dispatch({ type: 'REMOVE_BOARDS', newBoard })\r\n      } catch (err) {\r\n        console.log('WorkspaceActions: err in removeBoards', err)\r\n      }\r\n    }\r\n}\r\nexport function addBoards(newBoard) {\r\n    return async (dispatch) => {\r\n      try {\r\n        // await workspaceService.updateBoards(workspace,newBoard)\r\n        dispatch({ type: 'ADD_BOARDS', newBoard })\r\n      } catch (err) {\r\n        console.log('WorkspaceActions: err in addBoards', err)\r\n      }\r\n    }\r\n}\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n\r\nexport function getCurrBoard(board) {\r\n    return async dispatch => {\r\n        try{\r\n            dispatch({ type: 'SET_BOARD', board})\r\n        }catch(err){\r\n            console.log('WorkspaceActions: err in SET_BOARD', err); \r\n        }\r\n    }\r\n}\r\nexport function updateCurrBoard(board) {\r\n    return async dispatch => {\r\n        try{\r\n            dispatch({ type: 'UPDATE_BOARD', board})\r\n        }catch(err){\r\n            console.log('WorkspaceActions: err in UPDATE_BOARD', err); \r\n        }\r\n    }\r\n}\r\n\r\nexport function addCheckedTasks(currCheckedTask) {\r\n    return async dispatch => {\r\n        try{\r\n            dispatch({ type: 'ADD_CHECKED_TASK', currCheckedTask})\r\n        }catch(err){\r\n            console.log('WorkspaceActions: err in ADD_CHECKED_TASK', err); \r\n        }\r\n    }\r\n}\r\nexport function removeCheckedTasks(taskId) {\r\n    return async dispatch => {\r\n        try{\r\n            dispatch({ type: 'REMOVE_CHECKED_TASK', taskId})\r\n        }catch(err){\r\n            console.log('WorkspaceActions: err in REMOVE_CHECKED_TASK', err); \r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { FaRegFolderOpen } from \"react-icons/fa\";\r\n\r\nexport function AvailableFoldersList({\r\n    onMoveBoardToFolder,\r\n    search,\r\n    setSearch\r\n}){\r\n    const workspaces = useSelector(state => state.workspace.workspaces);\r\n\r\n    return(\r\n        <div>\r\n             <input type=\"search\" placeholder=\"Search Folder\"  className=\"forward-modal-search-input\"\r\n             onChange={(e) => setSearch(e.target.value)}\r\n             />\r\n           {    workspaces.map(workspace=>\r\n                    workspace.folders.map(folder=>\r\n                        folder.name.toLowerCase().includes(search.toLowerCase())?\r\n                        <div \r\n                            className='modal-btn \r\n                            item-actions-btn\r\n                            ' \r\n                            key={folder._id} \r\n                            onClick={()=>onMoveBoardToFolder(workspace,folder)}\r\n                        >\r\n                            <FaRegFolderOpen className=\"icon\"/>\r\n                            <span>{folder.name}</span>\r\n                        </div>\r\n                        :\r\n                        null\r\n                    )\r\n                )\r\n           }\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState,useRef,useEffect } from 'react';\r\nimport { BsThreeDots, BsPencil } from 'react-icons/bs'\r\nimport {IoArrowForwardCircleOutline } from 'react-icons/io5'\r\nimport { AiOutlineStar } from 'react-icons/ai'\r\nimport { VscTrash } from 'react-icons/vsc'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrBoard} from '../store/actions/workspaceActions'\r\nimport { WorkspaceList } from './WorkspaceList';\r\nimport { AvailableFoldersList } from './AvailableFoldersList';\r\nimport { toggleFavUserBoardList } from '../store/actions/userActions'\r\nimport { ForwardModal } from \"./ForwardModal\";\r\nimport { updateBoardWorkspace} from '../store/actions/workspaceActions'\r\n\r\nexport function BoardPreview({\r\n    board,\r\n    onGettingCurrentBoard,\r\n    CgViewComfortable,\r\n    removeBoard,\r\n    editBoard,\r\n    moveBoard,\r\n    moveBoardToFolder,\r\n    object,\r\n    scroll,\r\n    cmp\r\n}) {\r\n\r\n    const workspaces = useSelector(state => state.workspace.workspaces)\r\n    const currBoard = useSelector(state => state.workspace.currBoard)\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const [dimensions, setDimensions] = useState(null);\r\n    const [currWorkspace, setCurrWorkspace] = useState(null);\r\n    const boardRef = useRef(null)\r\n    const [search, setSearch] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n      \r\n    const onGetCurrWorkspace=()=>{\r\n        let theWorkspace = null\r\n        workspaces.forEach(workspace=>\r\n            workspace.boards.forEach(_board=>{ \r\n                   if(_board._id===board._id){\r\n                    theWorkspace= workspace\r\n                    }\r\n                }\r\n             \r\n            )\r\n        )\r\n        if(!theWorkspace){\r\n            workspaces.forEach(workspace=>\r\n                workspace.folders.forEach(folder=>\r\n                    folder.boards.forEach(_board=>\r\n                        { \r\n                            if(_board._id===board._id){\r\n                                theWorkspace= workspace\r\n                            }\r\n                        }\r\n                    )\r\n                )\r\n            )\r\n        }\r\n        setCurrWorkspace(theWorkspace)\r\n        dispatch(updateBoardWorkspace(theWorkspace))\r\n    }\r\n\r\n    const set = () =>\r\n    setDimensions(boardRef && boardRef.current ? \r\n        boardRef.current.getBoundingClientRect().bottom>500?\r\n            {...boardRef.current.getBoundingClientRect(),bottom:boardRef.current.getBoundingClientRect().bottom-191}\r\n            : boardRef.current.getBoundingClientRect()\r\n        : {}\r\n    );\r\n\r\n    useEffect(() => {\r\n        set();\r\n    }, [scroll]) \r\n\r\n    useEffect(() => {\r\n        setBoardName(board.name)\r\n    }, [board])\r\n\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const [isUpdateName, setIsUpdateName] = useState(false);\r\n    const [boardName, setBoardName] = useState(board.name);\r\n    const [moveToObject, setMoveToObject] = useState(null);\r\n    const inputEl = useRef()\r\n\r\n    const [isShownMoveToWorkspaceModal, setIsShownMoveToWorkspaceModal] = useState(false)\r\n\r\n    function toggleModal(ev){\r\n        ev.stopPropagation();\r\n        setIsOpenModal(curr=>!curr)\r\n    }\r\n\r\n    function handleChangeName(ev) {\r\n        setBoardName(ev.target.value)\r\n    }\r\n    function updateBoardName() {\r\n        const newBoard = {\r\n            ...board,\r\n            name:boardName\r\n        }\r\n        dispatch(updateCurrBoard(newBoard))\r\n        editBoard(newBoard)\r\n    }\r\n    function onMoveBoard(workspace) {\r\n        moveBoard(workspace,board)\r\n        setIsOpenModal(false)\r\n    }\r\n    function onMoveBoardToFolder(workspace,folder) {\r\n        moveBoardToFolder(workspace,folder,board)\r\n        setIsOpenModal(false)\r\n    }\r\n    const onToggleFavUserBoardList=()=>{\r\n        dispatch(toggleFavUserBoardList(loggedInUser,board._id))\r\n        setIsOpenModal(false)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(!isShownMoveToWorkspaceModal){\r\n            setTimeout(() => {\r\n               if(boardRef&&boardRef.current){\r\n                boardRef.current.focus()\r\n               }\r\n            }, 0);\r\n        }\r\n    }, [isShownMoveToWorkspaceModal])\r\n\r\n\r\n    const toggleShownForwardModal=(val)=>{\r\n        setIsShownMoveToWorkspaceModal(val)\r\n    }\r\n    if (!board) return <div>Loading...</div>\r\n    return (\r\n    <div\r\n    className={`board-wrapper \r\n    ${isOpenModal?'open-modal':''} \r\n    ${isUpdateName?'updating-style':''}\r\n    ${currBoard._id===board._id?'active':''}\r\n    `}\r\n     onClick={()=>\r\n        onGettingCurrentBoard(board)\r\n    }\r\n     tabIndex='0'\r\n     onBlur={()=>{\r\n         setIsOpenModal(isShownMoveToWorkspaceModal)\r\n    }}\r\n     ref={boardRef}\r\n    >\r\n        <div className=\"name-wrapper\">\r\n            <CgViewComfortable className={`icon ${isUpdateName?'updating-style':''}`}/>\r\n            {isUpdateName?\r\n                <input \r\n                className=\"update-board-name-input\" \r\n                type=\"text\" \r\n                value={boardName}\r\n                onChange={handleChangeName}\r\n                ref={inputEl}\r\n                onBlur={()=>{\r\n                    setIsUpdateName(false)\r\n                    updateBoardName()\r\n                }}\r\n                onKeyDown={(ev) => {\r\n                    if (ev.key === 'Enter') {\r\n                        ev.target.blur()\r\n                    }\r\n                }}\r\n                />\r\n                :\r\n                <span \r\n                title={boardName.length>14?boardName:''} \r\n                className={`${boardName.length>14?'ellipsis-board-name':''}`}\r\n                >\r\n                    {boardName}\r\n                </span>\r\n            }\r\n        </div>\r\n        <BsThreeDots className={`BsThreeDots ${isUpdateName?'hide':''}`} onClick={(ev)=>{\r\n            onGetCurrWorkspace()//for favorite section\r\n            if(boardRef.current.getBoundingClientRect().bottom>500){\r\n                setDimensions({...boardRef.current.getBoundingClientRect(),bottom:boardRef.current.getBoundingClientRect().bottom-191});\r\n            }else if(boardRef.current.getBoundingClientRect().bottom<250){\r\n                if(cmp){\r\n                    setDimensions({...boardRef.current.getBoundingClientRect(),bottom:boardRef.current.getBoundingClientRect().bottom+5+181});\r\n                }else{\r\n                    setDimensions({...boardRef.current.getBoundingClientRect(),bottom:boardRef.current.getBoundingClientRect().bottom+2});\r\n                }\r\n            }else{\r\n                setDimensions(boardRef.current.getBoundingClientRect());\r\n            }\r\n            toggleModal(ev) \r\n             console.log(boardRef.current.getBoundingClientRect())\r\n            }}/>\r\n        {\r\n        isOpenModal&&\r\n        <div className='modal-default-style item-actions-modal board-modal-wrapper'\r\n        style={{top: `${dimensions?dimensions.bottom-181:0}px`}}\r\n        >\r\n                    <div  className='modal-btn item-actions-btn' onClick={()=>{\r\n                        setIsOpenModal(false)\r\n                        setIsUpdateName(true)\r\n                        setTimeout(() => {\r\n                            inputEl.current.focus()\r\n                        }, 0); \r\n                    }}>\r\n                        <BsPencil className=\"icon\"/>\r\n                        <span>Rename Board</span>\r\n                    </div>\r\n                    <div className='modal-btn item-actions-btn' onClick={onToggleFavUserBoardList} >\r\n                        <AiOutlineStar className=\"icon\"/>\r\n                       {loggedInUser.favBoards.includes(board._id)? <span>Remove from favorites</span>:\r\n                        <span>Add to favorites</span>}\r\n                    </div>\r\n                    <ForwardModal \r\n                    btn={<div>\r\n                            <IoArrowForwardCircleOutline className=\"icon\"/>\r\n                            <span>Move To</span>\r\n                        </div>\r\n                    }\r\n                    setMoveToObject={setMoveToObject}\r\n                    isFolderModal={true}\r\n                    toggleShownForwardModal={toggleShownForwardModal}\r\n                    moveToObject={moveToObject}\r\n                    setSearch={setSearch} \r\n                    >\r\n                        {!moveToObject&&<div className='modal-btn item-actions-btn forward-modal-btn' onClick={()=>{setMoveToObject('Folder')}}>\r\n                            <IoArrowForwardCircleOutline className=\"icon\"/>\r\n                            <span>Move To Folder</span>\r\n                        </div>}\r\n                        {!moveToObject&&<div className='modal-btn item-actions-btn' onClick={()=>{setMoveToObject('Workspace')}}> \r\n                            <IoArrowForwardCircleOutline className=\"icon\"/>\r\n                            <span>Move To Workspace</span>\r\n                        </div>}\r\n                        { moveToObject&&<div>\r\n                            <div onClick={()=>{setMoveToObject(null)}} className='forward-modal-title'>\r\n                                <div>Choose {moveToObject}</div>\r\n                                <div  className='modal-btn item-actions-btn'>back</div>\r\n                            </div>\r\n                        </div>}\r\n                        {moveToObject==='Workspace'&& <WorkspaceList \r\n                            onMoveObject={onMoveBoard}\r\n                            object={object}\r\n                            search={search} \r\n                            setSearch={setSearch} \r\n                        />}\r\n                        {moveToObject==='Folder'&&<AvailableFoldersList onMoveBoardToFolder={onMoveBoardToFolder}\r\n                        search={search} \r\n                        setSearch={setSearch} \r\n                        /> }\r\n                    </ForwardModal>\r\n                    <div className='delete-btn-wrapper'>\r\n                        <div className='modal-btn item-actions-btn' onClick={()=>{\r\n                            removeBoard(board._id)\r\n                            setIsOpenModal(false)\r\n                        }}>\r\n                            <VscTrash className=\"icon\"/>\r\n                            <span>Delete</span>\r\n                        </div>\r\n                    </div>\r\n        </div>}\r\n    </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { BsThreeDots } from 'react-icons/bs'\r\nimport { BoardPreview } from './BoardPreview'\r\n\r\nexport function BoardList({\r\n    boards,\r\n    onGettingCurrentBoard,\r\n    CgViewComfortable,\r\n    removeBoard,\r\n    editBoard,\r\n    moveBoard,\r\n    moveBoardToFolder,\r\n    object,\r\n    scroll,\r\n    cmp\r\n}) {\r\n\r\n    // const boards = useSelector(state => state.workspace.boards);\r\n\r\n    if (!boards) return <div>Loading...</div>\r\n    return (\r\n      <>\r\n       {boards.map((board,index)=>\r\n              <BoardPreview\r\n              board={board}\r\n              onGettingCurrentBoard={onGettingCurrentBoard}\r\n              CgViewComfortable={CgViewComfortable}\r\n              BsThreeDots={BsThreeDots}\r\n              removeBoard={removeBoard}\r\n              editBoard={editBoard}\r\n              moveBoard={moveBoard}\r\n              moveBoardToFolder={moveBoardToFolder}        \r\n              object={object}\r\n              scroll={scroll}\r\n              cmp={cmp}\r\n              />\r\n        )}\r\n      </>\r\n    );\r\n}\r\n","import React, { useState,useRef,useEffect } from 'react';\r\n\r\nexport function CreateBoard({setIsShown,addNewBoard}) {\r\n\r\n    const[newBoardName,setNewBoardName]=useState('New Board')\r\n    const inputEl = useRef()\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            inputEl.current.focus()\r\n        }, 0); \r\n    }, [])\r\n    const focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    const handleChangeName =(ev)=>{\r\n        setNewBoardName(ev.target.value)\r\n    }\r\n    return (\r\n    <div className=\"create-item-wrapper\">\r\n        <div className=\"create-item-title\">Create board</div>\r\n        <input \r\n            className=\"new-item-input\"\r\n            type=\"text\" \r\n            value={newBoardName} \r\n            onChange={handleChangeName}\r\n            onFocus={focusText}\r\n            ref={inputEl}\r\n            onKeyDown={(ev) => {\r\n                if (ev.key === 'Enter') {\r\n                    if(newBoardName.length<1)return\r\n                    addNewBoard(newBoardName)\r\n                    setIsShown(false)\r\n                }\r\n            }}\r\n        />\r\n        <div className=\"btns-container\">\r\n            <div className=\"cancel-btn\" onClick={ ()=>{setIsShown(false)} }>Cancel</div>\r\n            <div className='add-btn' onClick={()=>{\r\n            if(newBoardName.length<1)return\r\n            addNewBoard(newBoardName)\r\n            setIsShown(false)\r\n            }}>Create Board</div>\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React, { useState,useRef,useEffect } from 'react';\r\nimport { IoMdArrowDropright } from 'react-icons/io'\r\nimport {IoArrowForwardCircleOutline } from 'react-icons/io5'\r\nimport { BsThreeDots, BsPencil } from 'react-icons/bs'\r\nimport { VscTrash } from 'react-icons/vsc'\r\nimport { IoIosArrowForward } from 'react-icons/io'\r\nimport { BoardList } from \"./BoardList\";\r\nimport { WorkspaceList } from './WorkspaceList';\r\nimport { CreateBoard } from \"./CreateBoard\";\r\nimport { PopupModal } from \"./PopupModal\";\r\nimport { ForwardModal } from \"./ForwardModal\";\r\n\r\nexport function FolderPreview({\r\n    folder,\r\n    IoMdArrowDropdown,\r\n    CgViewComfortable,\r\n    onGettingCurrentBoard,\r\n    addBoardInFolder,\r\n    removeFolder,\r\n    updateFolder,\r\n    removeBoard,\r\n    editBoard,\r\n    moveFolder,\r\n    moveBoard,\r\n    moveBoardToFolder,\r\n    scroll,\r\n    index,\r\n    isNewFolderCreated,\r\n    onEndNewFolderUpdating,\r\n    folders\r\n}) {\r\n    const [isFolderOpen, setIsFolderOpen] = useState(false);\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const [isOpenMoveToModal, setIsOpenMoveToModal] = useState(false);\r\n    const [isUpdateName, setIsUpdateName] = useState(false);\r\n    const [folderName, setFolderName] = useState(folder.name);\r\n    const [isShown, setIsShown] = useState(false)\r\n    const inputEl = useRef()\r\n\r\n    const [dimensions, setDimensions] = useState(null);\r\n    const folderRef = useRef(null)\r\n\r\n    const [isShownMoveToWorkspaceModal, setIsShownMoveToWorkspaceModal] = useState(false)\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    \r\n    const set = () =>\r\n    setDimensions(folderRef && folderRef.current ? \r\n        folderRef.current.getBoundingClientRect().bottom>500?\r\n            {...folderRef.current.getBoundingClientRect(),bottom:folderRef.current.getBoundingClientRect().bottom-191}\r\n            : folderRef.current.getBoundingClientRect()\r\n        : {}\r\n    );\r\n\r\n    useEffect(() => {\r\n        if(index===folders.length-1&&isNewFolderCreated){\r\n            setIsUpdateName(true) \r\n            setTimeout(() => {\r\n                inputEl.current.focus()\r\n            }, 0);\r\n        }\r\n    }, [index,folders.length,isNewFolderCreated]) \r\n\r\n\r\n    useEffect(() => {\r\n        set();\r\n    }, [scroll]) \r\n\r\n    useEffect(() => {\r\n        setFolderName(folder.name)\r\n    }, [folder])\r\n    const onToggleFolder=()=>{\r\n        setIsFolderOpen(current => !current)\r\n    } \r\n    function toggleModal(ev){\r\n        ev.stopPropagation();\r\n        setIsOpenModal(curr=>!curr)\r\n    }\r\n\r\n\r\n    function handleChangeName(ev) {\r\n        setFolderName(ev.target.value)\r\n    }\r\n    function updateFolderName() {\r\n        const newFolder = {\r\n            ...folder,\r\n            name:folderName\r\n        }\r\n        updateFolder(newFolder)\r\n    }\r\n    // function onMoveFolder(currWorkspace,workspace) {\r\n    //     moveFolder(currWorkspace,workspace,folder)\r\n    //     setIsOpenModal(false)\r\n    // }\r\n    function onMoveFolder(workspace) {\r\n        moveFolder(workspace,folder)\r\n        setIsOpenModal(false)\r\n    }\r\n\r\n    function addNewBoard(boardName) {\r\n        addBoardInFolder(folder,boardName)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isShownMoveToWorkspaceModal){\r\n            setTimeout(() => {\r\n               if(folderRef&&folderRef.current){\r\n                folderRef.current.focus()\r\n               }\r\n            }, 0);\r\n        }\r\n    }, [isShownMoveToWorkspaceModal])\r\n    \r\n    const toggleShownForwardModal=(val)=>{\r\n        setIsShownMoveToWorkspaceModal(val)\r\n    }\r\n    \r\n\r\n    if (!folder) return <div>Loading...</div>\r\n    return (\r\n        <>\r\n        <div key={folder._id}>\r\n            <div \r\n                className={`\r\n                folder-wrapper \r\n                ${isOpenModal?'open-modal':''} \r\n                ${isUpdateName?'updating-style':''}`}\r\n                tabIndex={!isNewFolderCreated ? 0 : null}\r\n                onBlur={()=>{\r\n                    setIsOpenModal(isShownMoveToWorkspaceModal)\r\n                }}\r\n                ref={folderRef}\r\n            >\r\n               <div \r\n                onClick={onToggleFolder}\r\n                className=\"name-wrapper\"\r\n                >\r\n                    {isFolderOpen?\r\n                        <IoMdArrowDropdown className={`icon ${isUpdateName?'updating-style':''}`} />:\r\n                        <IoMdArrowDropright className={`icon ${isUpdateName?'updating-style':''}`}  />\r\n                    }\r\n                    {isUpdateName?\r\n                        <input \r\n                        className=\"update-folder-name-input\" \r\n                        type=\"text\" \r\n                        value={folderName}\r\n                        onChange={handleChangeName}\r\n                        ref={inputEl}\r\n                        onBlur={()=>{\r\n                            setIsUpdateName(false)\r\n                            updateFolderName()\r\n                            onEndNewFolderUpdating()\r\n                        }}\r\n                        onKeyDown={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                ev.target.blur()\r\n                            }\r\n                        }}\r\n                        />\r\n                        :\r\n                        <span  \r\n                        title={folderName.length>14?folderName:''} \r\n                        className={`${folderName.length>14?'ellipsis-folder-name':''}`}\r\n                        >{folderName}</span>\r\n                    }\r\n               </div>\r\n               <BsThreeDots className={`BsThreeDots ${isUpdateName?'hide':''}`}  onClick={(ev)=>{\r\n                   if(folderRef.current.getBoundingClientRect().bottom>500){\r\n                        setDimensions({...folderRef.current.getBoundingClientRect(),bottom:folderRef.current.getBoundingClientRect().bottom-191});\r\n                    }else{\r\n                        setDimensions(folderRef.current.getBoundingClientRect());\r\n                    }\r\n                   toggleModal(ev)\r\n                   }}/>\r\n               {\r\n               isOpenModal&&\r\n               <div className='modal-default-style item-actions-modal folder-modal-wrapper '\r\n               style={{top: `${dimensions?dimensions.bottom-181:0}px`}}\r\n               >\r\n                    <div className='modal-btn item-actions-btn' onClick={()=>{\r\n                        // addBoardInFolder(folder)\r\n                        setIsShown(true)\r\n                        setIsOpenModal(false)\r\n                    }}>\r\n                        <CgViewComfortable className=\"icon\" />\r\n                        <span>Create board in folder</span>\r\n                    </div>\r\n                    <div  className='modal-btn item-actions-btn' onClick={()=>{\r\n                        setIsOpenModal(false)\r\n                        setIsUpdateName(true)\r\n                        setTimeout(() => {\r\n                            inputEl.current.focus()\r\n                        }, 0); \r\n                    }}>\r\n                        <BsPencil className=\"icon\"/>\r\n                        <span>Rename folder</span>\r\n                    </div>\r\n                    <ForwardModal \r\n                    btn={<div>\r\n                            <IoArrowForwardCircleOutline className=\"icon\"/>\r\n                            <span>Move To Workspace</span>\r\n                        </div>\r\n                    }\r\n                    toggleShownForwardModal={toggleShownForwardModal}\r\n                    itemList={true}\r\n                    setSearch={setSearch} \r\n                    >\r\n                        <WorkspaceList \r\n                        onMoveObject={onMoveFolder}\r\n                        search={search} \r\n                        setSearch={setSearch} \r\n                        />\r\n                    </ForwardModal>\r\n                    <div className='delete-btn-wrapper'>\r\n                        <div className='modal-btn item-actions-btn' onClick={()=>{\r\n                            removeFolder(folder._id)\r\n                            setIsOpenModal(false)\r\n                        }}>\r\n                            <VscTrash className=\"icon\"/>\r\n                            <span>Delete folder</span>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n            {isFolderOpen&&\r\n             <div className='folder-dropdown' key={folder._id}>\r\n             {folder.boards.length>0&&\r\n                <BoardList \r\n                     boards={folder.boards}\r\n                     onGettingCurrentBoard={onGettingCurrentBoard}\r\n                     CgViewComfortable={CgViewComfortable}\r\n                     removeBoard={removeBoard}\r\n                     editBoard={editBoard}\r\n                     moveBoard={moveBoard}\r\n                     moveBoardToFolder={moveBoardToFolder}\r\n                     object='insideFolder'\r\n                     scroll={scroll}\r\n\r\n                />\r\n             }\r\n             </div>\r\n            }\r\n        </div >\r\n\r\n        \r\n        {isShown&&<PopupModal setIsShown={setIsShown} >\r\n            <CreateBoard addNewBoard={addNewBoard} setIsShown={setIsShown}/>\r\n        </PopupModal>}\r\n        </>\r\n    );\r\n}\r\n","import React, { useState,useRef,useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FolderPreview } from \"./FolderPreview\";\r\n\r\nexport function FolderList({\r\n    folders,\r\n    IoMdArrowDropdown,\r\n    CgViewComfortable,\r\n    onGettingCurrentBoard,\r\n    addBoardInFolder,\r\n    removeFolder,\r\n    updateFolder,\r\n    removeBoard,\r\n    editBoard,\r\n    moveFolder,\r\n    moveBoard,\r\n    moveBoardToFolder,\r\n    scroll,\r\n    isNewFolderCreated,\r\n    onEndNewFolderUpdating\r\n\r\n}) {\r\n    // const currWorkspace = useSelector(state => state.workspace.currWorkspace);\r\n \r\n    if (!folders) return <div>Loading...</div>\r\n    return (\r\n      <>\r\n       {folders.map((folder,index)=>\r\n    \r\n            <FolderPreview \r\n            folder={folder} \r\n            folders={folders}\r\n            IoMdArrowDropdown={IoMdArrowDropdown}\r\n            CgViewComfortable={CgViewComfortable}\r\n            onGettingCurrentBoard={onGettingCurrentBoard}\r\n            addBoardInFolder={addBoardInFolder}\r\n            removeFolder={removeFolder}\r\n            updateFolder={updateFolder}\r\n            removeBoard={removeBoard}\r\n            editBoard={editBoard}\r\n            moveFolder={moveFolder}\r\n            moveBoard={moveBoard}\r\n            moveBoardToFolder={moveBoardToFolder}\r\n            scroll={scroll}\r\n            index={index}\r\n            isNewFolderCreated={isNewFolderCreated}\r\n            onEndNewFolderUpdating={onEndNewFolderUpdating}\r\n            />\r\n       )}\r\n      </>\r\n    );\r\n}\r\n","import React, { useState,useEffect } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { BiCheck } from 'react-icons/bi';\r\nimport {colorsPicker } from '../data/shortColorPicker.js';\r\nimport {iconsPicker } from '../data/iconsPicker';\r\n\r\nexport function WorkspaceIconPicker({updateWorkspace}) {\r\n\r\n    const workspace = useSelector(state => state.workspace.currWorkspace);\r\n    const[newWorkspaceColor,setNewWorkspaceColor]=useState(workspace.color)\r\n    const[newWorkspaceIcon,setNewWorkspaceIcon]=useState(workspace.img)\r\n\r\n    useEffect(() => {\r\n        setNewWorkspaceColor(workspace.color)\r\n        setNewWorkspaceIcon(workspace.img)\r\n    }, [workspace])\r\n\r\n    useEffect(() => {\r\n        if(newWorkspaceColor!==workspace.color){\r\n            const newWorkspace={\r\n                ...workspace,\r\n                color:newWorkspaceColor\r\n            }\r\n            updateWorkspace(newWorkspace)\r\n        }\r\n    }, [newWorkspaceColor,updateWorkspace,workspace])\r\n\r\n    useEffect(() => {\r\n        if(newWorkspaceIcon!==workspace.img){\r\n            const newWorkspace={\r\n                ...workspace,\r\n                img:newWorkspaceIcon\r\n            }\r\n            updateWorkspace(newWorkspace)\r\n        }\r\n    }, [newWorkspaceIcon,updateWorkspace,workspace])\r\n\r\n    return (\r\n    <>\r\n        <div className=\"small-font\">Background color</div>\r\n            <div className=\"workspace-color-picker\">\r\n                {colorsPicker.map(color=>\r\n                    <div className=\"workspace-color\" style={{backgroundColor:`${color}`}}\r\n                     onClick={()=>setNewWorkspaceColor(color)}\r\n                     >\r\n                         {newWorkspaceColor===color&&<BiCheck/>}\r\n                     </div>\r\n                )}\r\n            </div>\r\n        <div className=\"small-font\">Icon</div>\r\n            <div className=\"icon-picker\">\r\n                {iconsPicker.map(icon=>\r\n                    <div className=\"icon\"\r\n                    style={{backgroundColor:`${newWorkspaceColor}`}}\r\n                    onClick={()=>setNewWorkspaceIcon(icon)}\r\n                    >\r\n                       {icon}\r\n                     </div>\r\n                )}\r\n        </div>\r\n    </>\r\n    )\r\n}","import React, { useEffect,useState,useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUser} from '../store/actions/userActions'\r\nimport { BsThreeDots,BsPencil } from 'react-icons/bs'\r\nimport { VscPinned,VscTrash } from 'react-icons/vsc'\r\nimport {IoSettingsOutline} from 'react-icons/io5'\r\nimport {CgArrowsExchangeAlt} from 'react-icons/cg'\r\nimport { ForwardModal } from \"./ForwardModal\";\r\nimport { WorkspaceIconPicker } from \"./WorkspaceIconPicker\";\r\n\r\nexport function UpdateWorkspace({updateWorkspace,deleteWorkspace,onGettingCurrentWorkspace,onManageWorkspace}){\r\n    const dispatch = useDispatch()\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n\r\n    const allWorkspaces = useSelector(state => state.workspace.workspaces);\r\n    const [workspaces,setWorkspaces] = useState(allWorkspaces.filter(\r\n        workspace=>loggedInUser.pinnedWorkspaces.includes(workspace._id))\r\n        )\r\n\r\n    const workspace = useSelector(state => state.workspace.currWorkspace);\r\n    const[workspaceColor,setWorkspaceColor]=useState(workspace.color)\r\n    const[workspaceIcon,setWorkspaceIcon]=useState(workspace.img)\r\n    const [isUpdateName, setIsUpdateName] = useState(false);\r\n    const [workspaceName, setWorkspaceName] = useState(workspace.name);\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const inputEl = useRef()\r\n\r\n    \r\n    const [isShownMoveToWorkspaceModal, setIsShownMoveToWorkspaceModal] = useState(false)\r\n    const btnEl = useRef()\r\n\r\n    useEffect(() => {\r\n        setWorkspaces(allWorkspaces.filter(\r\n            workspace=>loggedInUser.pinnedWorkspaces.includes(workspace._id))\r\n            )\r\n    }, [loggedInUser,loggedInUser.pinnedWorkspaces,allWorkspaces])\r\n\r\n    useEffect(() => {\r\n        setWorkspaceColor(workspace.color)\r\n        setWorkspaceIcon(workspace.img)\r\n        setWorkspaceName(workspace.name)\r\n    }, [workspace])\r\n\r\n    function handleChangeName(ev) {\r\n        setWorkspaceName(ev.target.value)\r\n    }\r\n\r\n    function unpinWorkspace(workspaceId) {\r\n        const newUser= {\r\n            ...loggedInUser,\r\n            pinnedWorkspaces:loggedInUser.pinnedWorkspaces.filter(id=>id!==workspaceId)\r\n        }\r\n        dispatch(updateUser(newUser))\r\n        workspaces.map(workspace=>\r\n            workspace.boards.map(board=>\r\n                board.isLastSeen===true? \r\n                    onGettingCurrentWorkspace(workspace)\r\n                    :null\r\n            )   \r\n        )\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(!isShownMoveToWorkspaceModal){\r\n            // if(btnEl.current){\r\n            //     setTimeout(() => {\r\n            //         btnEl.current.focus()\r\n            //     }, 0);\r\n            // }\r\n            setTimeout(() => {\r\n                if(btnEl&&btnEl.current){\r\n                    btnEl.current.focus()\r\n                }\r\n            }, 0);\r\n        }\r\n    }, [isShownMoveToWorkspaceModal])\r\n    \r\n    const toggleShownForwardModal=(val)=>{\r\n        setIsShownMoveToWorkspaceModal(val)\r\n    }\r\n    return(\r\n    <div className={`workspace-title ${isOpenModal?'open-modal':''}`}>\r\n        <div className=\"workspace-symbol\" style={{backgroundColor:`${workspaceColor}`}}>{workspaceIcon}</div>\r\n       { isUpdateName?\r\n        <input\r\n            type=\"text\"\r\n            className=\"workspace-name-input\"\r\n            value={workspaceName}\r\n            onChange={handleChangeName}\r\n            ref={inputEl}\r\n            onBlur={()=>{\r\n                setIsUpdateName(false)\r\n                const newWorkspace = {\r\n                    ...workspace,\r\n                    name:workspaceName\r\n                }\r\n                if(workspaceName.length>1){\r\n                    updateWorkspace(newWorkspace)\r\n                }else{\r\n                    setWorkspaceName(workspace.name)\r\n                }\r\n            }}\r\n            onKeyDown={(ev) => {\r\n                if (ev.key === 'Enter') {\r\n                    ev.target.blur()\r\n                }\r\n            }}\r\n        />\r\n        :\r\n        <div \r\n        title={workspaceName.length>12?workspaceName:''} \r\n        className={`workspace-name ${workspaceName.length>12?'ellipsis-board-name':''}`}\r\n        >{workspaceName}</div>\r\n       }\r\n        <div className={`workspace-name-options-btn-wrapper workspace-title-btn ${isOpenModal?'show-btn':''}`}\r\n        tabIndex='0'\r\n        onBlur={()=>setIsOpenModal(false)}\r\n        ref={btnEl}\r\n        >\r\n            <BsThreeDots className=\"icon BsThreeDots\"\r\n            onClick={()=>{\r\n                setIsOpenModal(curr=>!curr)\r\n            }}\r\n            />\r\n           { isOpenModal&&<div className='modal-default-style toolbar-menu-options-modal item-actions-modal'>\r\n                   <div className=\"modal-btn item-actions-btn\"\r\n                    onClick={()=>{\r\n                        setIsUpdateName(true)\r\n                        setTimeout(() => {\r\n                            inputEl.current.focus()\r\n                        }, 0);\r\n                        setIsOpenModal(false)\r\n                    }}\r\n                   >\r\n                       <BsPencil className=\"icon\"/>\r\n                       <span>Rename workspace</span>\r\n                   </div>\r\n                   <ForwardModal \r\n                    btn={<div>\r\n                           <CgArrowsExchangeAlt className=\"icon\"/>\r\n                            <span>Change icon</span>\r\n                        </div>\r\n                    }\r\n                    toggleShownForwardModal={toggleShownForwardModal}\r\n                    isWorkspaceIconPicker={true}\r\n                    >\r\n                       <WorkspaceIconPicker updateWorkspace={updateWorkspace}/>\r\n                    </ForwardModal>\r\n                   {/* <div className=\"modal-btn item-actions-btn\">\r\n                       <CgArrowsExchangeAlt className=\"icon\"/>\r\n                        <span>Change icon</span>\r\n                   </div> */}\r\n                   <div className=\"modal-btn item-actions-btn\"\r\n                    onClick={()=>{\r\n                        unpinWorkspace(workspace._id)\r\n                        setIsOpenModal(false)\r\n                    }}\r\n                   >\r\n                       <VscPinned className=\"icon\"/>\r\n                       <span>Unpin workspace from menu</span>\r\n                   </div>\r\n                   <div className=\"modal-btn item-actions-btn\"\r\n                   onClick={()=>{\r\n                    onManageWorkspace()\r\n                    setIsOpenModal(false)\r\n                    }}\r\n                   >\r\n                       <IoSettingsOutline className=\"icon\"/>\r\n                       <span>Manage workspace</span>\r\n                   </div>\r\n                   <div className=\"modal-btn item-actions-btn\"\r\n                    onClick={()=>{\r\n                        deleteWorkspace(workspace._id)\r\n                        setIsOpenModal(false)\r\n                    }}\r\n                   >\r\n                       <VscTrash className=\"icon\"/>\r\n                       <span>Delete workspace</span>\r\n                   </div>\r\n            </div>}\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React, { useEffect,useState,useRef } from 'react';\r\nimport { CgViewComfortable } from 'react-icons/cg'\r\n// import { CreateBoard } from \"./CreateBoard\";\r\n// import { PopupModal } from \"./PopupModal\";\r\n\r\nexport function ToolbarMenuActionsBtnModal({\r\n    btnName,\r\n    addNewBoard,\r\n    addNewFloder,\r\n    setIsShown\r\n}) {\r\n    // const [isShown, setIsShown] = useState(false)\r\n\r\n    const getBtnOptions=()=>{\r\n        let content = [];\r\n        switch(btnName) {\r\n            case 'Add':\r\n                content.push(\r\n                <> \r\n                    <div className=\"actions-btn actions-modal-btn modal-btn \"\r\n                     onClick={()=>{setIsShown(true)}}\r\n                    //  onClick={addNewBoard}\r\n                     >\r\n                        <CgViewComfortable className=\"icon\" />\r\n                        <span>New Board</span>\r\n                    </div>  \r\n                    <div className=\"actions-btn modal-btn\" onClick={addNewFloder}>\r\n                        <CgViewComfortable className=\"icon\" />\r\n                        <span>New Folder</span>\r\n                    </div>   \r\n                </>\r\n                );\r\n                break; \r\n            case 'Filters':\r\n                content.push(\r\n                <>  \r\n                   {btnName}\r\n                </>\r\n                );\r\n                break;\r\n            case 'Search':\r\n                content.push(\r\n                <> \r\n                   {btnName}\r\n                </>\r\n                );\r\n                break;\r\n            default:\r\n                content.push('');\r\n                break;\r\n        }                                \r\n        return content;\r\n    }\r\n    return (\r\n        <>\r\n        <div className='modal-default-style actions-modal-wrapper'>\r\n           {getBtnOptions()}\r\n        </div>\r\n        {/* {isShown&&<PopupModal setIsShown={setIsShown} addNewBoard={addNewBoard}>\r\n            <CreateBoard/>\r\n        </PopupModal>} */}\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect,useState,useRef } from 'react';\r\nimport { ToolbarMenuActionsBtnModal } from \"./ToolbarMenuActionsBtnModal\";\r\nimport { AiOutlinePlusCircle } from 'react-icons/ai'\r\nimport { FiFilter } from 'react-icons/fi'\r\nimport { CreateBoard } from \"./CreateBoard\";\r\nimport { PopupModal } from \"./PopupModal\";\r\n\r\nexport function ToolbarMenuActionsBtn({\r\n    btnName,\r\n    addNewBoard,\r\n    addNewFloder\r\n}) {\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const [isShown, setIsShown] = useState(false)\r\n    const getBtnValue=()=>{\r\n        let content = [];\r\n        switch(btnName) {\r\n            case 'Add':\r\n                content.push(\r\n                <> \r\n                    <AiOutlinePlusCircle className=\"icon\"/>\r\n                    <span>Add</span>       \r\n                </>\r\n                );\r\n                break; \r\n            case 'Filters':\r\n                content.push(\r\n                <>  \r\n                    <FiFilter className=\"icon\"/>\r\n                    <span>Filters</span> \r\n                </>\r\n                );\r\n                break;\r\n            default:\r\n                content.push('');\r\n                break;\r\n        }                                \r\n        return content;\r\n    }\r\n    return (\r\n        <>\r\n    <div className='actions-btn-wrapper' \r\n    tabIndex='0'\r\n     onBlur={()=>{setIsOpenModal(false)}}\r\n     >\r\n        { isOpenModal&&<ToolbarMenuActionsBtnModal\r\n         btnName={btnName}\r\n         addNewBoard={addNewBoard}\r\n         addNewFloder={addNewFloder}\r\n         setIsShown={setIsShown}\r\n          />}\r\n        <div className={`add actions-btn ${isOpenModal?'active':''}`} onClick={()=>{setIsOpenModal(curr=>!curr)}}>\r\n            {getBtnValue()}\r\n        </div>\r\n    </div>\r\n\r\n    {isShown&&<PopupModal setIsShown={setIsShown} >\r\n            <CreateBoard addNewBoard={addNewBoard}  setIsShown={setIsShown}/>\r\n        </PopupModal>}\r\n    </>\r\n    );\r\n}\r\n","import React, { useState, useEffect,useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\n\r\nexport function Search({\r\n    search,\r\n    setSearch,\r\n    setFilteredFolders,\r\n    setFilteredBoards\r\n}) {\r\n    const currWorkspace = useSelector(state => state.workspace.currWorkspace);\r\n    const [isSearchActive, setSearchActive] = useState(false);\r\n    const inputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        setFilteredFolders(\r\n            currWorkspace.folders.filter((item) =>\r\n                item.name.toLowerCase().includes(search.toLowerCase())\r\n            )\r\n        );\r\n\r\n    }, [search, currWorkspace.folders,setFilteredFolders]);\r\n\r\n    useEffect(() => {\r\n        setFilteredBoards(\r\n            currWorkspace.boards.filter((item) =>\r\n                item.name.toLowerCase().includes(search.toLowerCase())\r\n            )\r\n        );\r\n    }, [search, currWorkspace.boards,setFilteredBoards]);\r\n\r\n    // useEffect(() => {\r\n    //     let items = []\r\n    //     currWorkspace.folders.map(folder =>\r\n    //         items=[...items,...folder.boards]\r\n    //     )\r\n    //     setFilteredBoardsInFolders(\r\n    //         items.filter((item) =>\r\n    //             item.name.toLowerCase().includes(search.toLowerCase())\r\n    //         )\r\n    //     )\r\n    // }, [search,currWorkspace.folders]);\r\n\r\n \r\n    return (\r\n        <>\r\n        {!isSearchActive?\r\n            <div className='actions-btn-wrapper'\r\n                onClick={()=>{\r\n                    setSearchActive(true)\r\n                    setTimeout(() => {\r\n                         if(inputRef&&inputRef.current){\r\n                             inputRef.current.focus()\r\n                         }\r\n                    }, 0);\r\n                }}\r\n            >\r\n                <div className=\"add actions-btn\">\r\n                    <HiOutlineSearch className=\"icon\"/>\r\n                    <span>Search</span> \r\n                </div>\r\n            </div>\r\n        :\r\n        <div className=\"search\">\r\n            <input\r\n                ref={inputRef}\r\n                className=\"search-input menu-btn\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                onChange={(e) => setSearch(e.target.value)}\r\n                onBlur={(e)=>{\r\n                    if(e.target.value!=='')return\r\n                    setSearchActive(false)\r\n                }}\r\n                onKeyDown={(ev) => {\r\n                    if (ev.key === 'Enter') {\r\n                        ev.target.blur()\r\n                    }\r\n                }}\r\n            />\r\n        </div>}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n// filters ALL THE ITEMS includes THE BOARDS INSIDE FOLDERS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n// const currWorkspace = useSelector(state => state.workspace.currWorkspace);\r\n// const [loading, setLoading] = useState(false);\r\n// // const [search, setSearch] = useState(\"\");\r\n// // const [filteredItems, setFilteredItems] = useState([]);\r\n\r\n\r\n// useEffect(() => {\r\n//     let items = []\r\n//     currWorkspace.folders.map(folder=>\r\n//         items=[...items, folder]\r\n//     )\r\n//     currWorkspace.boards.map(board=>\r\n//         items=[...items, board]\r\n//     )\r\n//     currWorkspace.folders.map(folder =>\r\n//         items=[...items, ...folder.boards]\r\n//     )\r\n//     setFilteredItems(\r\n//         items.filter((item) =>\r\n//             item.name.toLowerCase().includes(search.toLowerCase())\r\n//         )\r\n//     );\r\n\r\n// }, [search, currWorkspace.folders,currWorkspace.boards,setFilteredItems]);\r\n\r\n\r\n// return (\r\n//     <div className=\"search\">\r\n//         <input\r\n//             type=\"text\"\r\n//             placeholder=\"Search Countries\"\r\n//             onChange={(e) => setSearch(e.target.value)}\r\n//         />\r\n//     </div>\r\n// )","import httpService from './httpService'\r\nexport const boardService = {\r\n    getById,\r\n    addBoard,\r\n    addBoardInFolder,\r\n    removeBoard,\r\n    addFolder,\r\n    removeFolder,\r\n    updateFolder,\r\n    addTable,\r\n    removeTable,\r\n    updateTable,\r\n    addTask,\r\n    removeTask,\r\n    updateTask\r\n}\r\n\r\n\r\n//BOARD\r\n\r\nfunction getById(workspaces,boardId){\r\n    let board ={}\r\n    workspaces.map(workspace=>\r\n        workspace.boards.map(_board=>\r\n            _board._id===boardId?board=_board:board=null\r\n        )\r\n    )\r\n    if(!board){\r\n        workspaces.map(workspace=>\r\n            workspace.folders.map(folder=>\r\n                folder.boards.map(_board=>\r\n                    _board._id===boardId?board=_board:board=null\r\n                )\r\n            )\r\n        )\r\n    }\r\n    return board\r\n}\r\n\r\nfunction addBoard(currWorkspace, boardName) {\r\n    const newBoard = {\r\n        _id : Date.now().toString(16) + Math.random().toString(16),\r\n        isLastSeen : false,\r\n        name : boardName,\r\n        desc : \"Add board description\",\r\n        createdAt : Date.now(),\r\n        lastUpdated : null,\r\n        statusLabelList: [\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#ffbe0c\",\r\n                    name:\"Working on it\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#2bd44e\",\r\n                    name:\"Done\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#c73d51\",\r\n                    name:\"Delayed\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"rgb(255 60 125)\",\r\n                    name:\"To do\"\r\n                }\r\n            ],\r\n            activities : [ ],\r\n            isPrivate : false,\r\n            owner : {},\r\n            tableColumns : [ \r\n                {\r\n                    _id :uniqId(),\r\n                    title : \"Group Title\",\r\n                    type : \"Group Title\",\r\n                    taskKey : \"name\"\r\n                }, \r\n                {\r\n                    _id :uniqId(),\r\n                    title : \"Person123\",\r\n                    type : \"user/users array selector/picker\",\r\n                    taskKey : \"owner\"\r\n                }, \r\n                {\r\n                    _id : uniqId(),\r\n                    title : \"Status123\",\r\n                    type : \"selector\",\r\n                    taskKey : \"status\"\r\n                }, \r\n                {\r\n                    _id : uniqId(),\r\n                    title : \"Date\",\r\n                    type : \"string\",\r\n                    taskKey : \"createdAt\"\r\n                }\r\n            ],\r\n            tables : [ \r\n                {\r\n                    _id : uniqId(),\r\n                    name : \"Group Title\",\r\n                    color : \"#0085ff\",\r\n                    createdAt : Date.now(),\r\n                    lastUpdated : \"\",\r\n                    tasks : [ \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 1\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"Done\",\r\n                                color : \"rgb(43, 212, 78)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 2\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"Working on it\",\r\n                                color : \"rgb(255, 190, 12)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id :uniqId(),\r\n                            name : \"Item 3\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }\r\n                    ]\r\n                }, \r\n                {\r\n                    _id :uniqId(),\r\n                    name : \"Group Title\",\r\n                    color : \"#b456dd\",\r\n                    createdAt : Date.now(),\r\n                    lastUpdated : \"\",\r\n                    tasks : [ \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 4\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 5\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n    }\r\n    const newWorkspace = currWorkspace\r\n    newWorkspace.boards = [...newWorkspace.boards,newBoard]\r\n    return newWorkspace\r\n}\r\n\r\nfunction addBoardInFolder(currWorkspace,folder,boardName=\"New Board\") {\r\n    const newBoard = {\r\n        _id : Date.now().toString(16) + Math.random().toString(16),\r\n        isLastSeen : false,\r\n        name : boardName,\r\n        desc : \"Add board description\",\r\n        createdAt : Date.now(),\r\n        lastUpdated : null,\r\n        statusLabelList: [\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#ffbe0c\",\r\n                    name:\"Working on it\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#2bd44e\",\r\n                    name:\"Done\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#c73d51\",\r\n                    name:\"Delayed\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"rgb(255 60 125)\",\r\n                    name:\"To do\"\r\n                }\r\n            ],\r\n            activities : [ ],\r\n            isPrivate : false,\r\n            owner : {},\r\n            tableColumns : [ \r\n                {\r\n                    _id :uniqId(),\r\n                    title : \"Group Title\",\r\n                    type : \"Group Title\",\r\n                    taskKey : \"name\"\r\n                }, \r\n                {\r\n                    _id :uniqId(),\r\n                    title : \"Person123\",\r\n                    type : \"user/users array selector/picker\",\r\n                    taskKey : \"owner\"\r\n                }, \r\n                {\r\n                    _id : uniqId(),\r\n                    title : \"Status123\",\r\n                    type : \"selector\",\r\n                    taskKey : \"status\"\r\n                }, \r\n                {\r\n                    _id : uniqId(),\r\n                    title : \"Date\",\r\n                    type : \"string\",\r\n                    taskKey : \"createdAt\"\r\n                }\r\n            ],\r\n            tables : [ \r\n                {\r\n                    _id : uniqId(),\r\n                    name : \"Group Title\",\r\n                    color : \"#0085ff\",\r\n                    createdAt : Date.now(),\r\n                    lastUpdated : \"\",\r\n                    tasks : [ \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 1\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"Done\",\r\n                                color : \"rgb(43, 212, 78)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 2\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"Working on it\",\r\n                                color : \"rgb(255, 190, 12)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id :uniqId(),\r\n                            name : \"Item 3\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }\r\n                    ]\r\n                }, \r\n                {\r\n                    _id :uniqId(),\r\n                    name : \"Group Title\",\r\n                    color : \"#b456dd\",\r\n                    createdAt : Date.now(),\r\n                    lastUpdated : \"\",\r\n                    tasks : [ \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 4\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 5\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n    }\r\n    let newFolder = {...folder}\r\n    newFolder.boards = [...newFolder.boards,newBoard]\r\n\r\n    currWorkspace.folders = currWorkspace.folders.map(_folder=>\r\n        _folder._id===newFolder._id?newFolder:_folder\r\n    )\r\n    return currWorkspace\r\n}\r\n\r\nfunction removeBoard(currWorkspace, boardId) {\r\n    var boardToRemove =null\r\n    let newWorkspace = {}\r\n    currWorkspace.boards.forEach(_board=>\r\n        _board._id===boardId?\r\n        boardToRemove={..._board}\r\n        :\r\n        null\r\n    )\r\n    if(boardToRemove){\r\n        // board inside the workspace\r\n        newWorkspace={\r\n            ...currWorkspace,\r\n            boards: currWorkspace.boards.filter(_board=>\r\n                _board._id!==boardId\r\n            )\r\n        }\r\n    }else{\r\n        currWorkspace.folders.forEach(folder=>\r\n            folder.boards.forEach(_board=>\r\n                _board._id===boardId?boardToRemove=_board:null\r\n            )\r\n        )\r\n        if(boardToRemove){\r\n            // board inside the folder\r\n            let currFolder = {}\r\n            currWorkspace.folders.forEach(folder=>\r\n                folder.boards.forEach(_board=>_board._id===boardToRemove._id?\r\n                currFolder=folder\r\n                :\r\n                null\r\n                )\r\n            )\r\n            newWorkspace={\r\n                ...currWorkspace,\r\n                folders:currWorkspace.folders.map(folder=>\r\n                    folder._id===currFolder._id?\r\n                    folder = {\r\n                        ...folder,\r\n                        boards: folder.boards.filter(_board=>\r\n                            _board._id!==boardToRemove._id\r\n                        )\r\n                    }\r\n                    :\r\n                    folder\r\n                )\r\n            }\r\n        }\r\n    }\r\n    return newWorkspace\r\n    \r\n}\r\n\r\nfunction addFolder(currWorkspace) {\r\n    const newFolder = {\r\n        _id : Date.now().toString(16) + Math.random().toString(16),\r\n        name : \"New Folder\",\r\n        boards : []\r\n    }\r\n    const newWorkspace = currWorkspace\r\n    newWorkspace.folders = [...newWorkspace.folders,newFolder]\r\n    return newWorkspace\r\n}\r\n\r\nfunction removeFolder(currWorkspace, folderId) {\r\n    const newWorkspace = currWorkspace\r\n    newWorkspace.folders = newWorkspace.folders.filter(folder=>folder._id!==folderId)\r\n    return newWorkspace\r\n}\r\nfunction updateFolder(currWorkspace, newFolder) {\r\n    const newWorkspace = currWorkspace\r\n    newWorkspace.folders = newWorkspace.folders.map(folder=>folder._id===newFolder._id?newFolder:folder)\r\n    return newWorkspace\r\n}\r\n\r\n\r\n//TABLE\r\n\r\nfunction addTable(currBoard) {\r\n    const newTable = {\r\n        _id : Date.now().toString(16) + Math.random().toString(16) + '0'.repeat(16),\r\n        name : \"New Group\",\r\n        color : \"rgb(180, 182, 188)\",\r\n        createdAt : Date.now(),\r\n        lastUpdated : \"\",\r\n        tasks : []\r\n    }\r\n    const newBoard = currBoard\r\n    newBoard.tables = [ newTable,...newBoard.tables]\r\n    return newBoard\r\n}\r\n\r\nfunction removeTable(tableId,currBoard) {\r\n    const newBoard = currBoard\r\n    newBoard.tables = newBoard.tables.filter(table=>table._id!==tableId)\r\n    return newBoard\r\n}\r\n\r\nfunction updateTable(currBoard,updatedTable) {\r\n    const newBoard ={\r\n        ...currBoard, \r\n        tables: currBoard.tables.map(table=>\r\n            table._id===updatedTable._id?\r\n            updatedTable\r\n            :table\r\n        )\r\n    }\r\n    return newBoard\r\n}\r\n\r\n//TASK\r\n\r\nfunction addTask(currTable,currBoard,userInput,user) {\r\n    const newTask = {\r\n        _id : Date.now().toString(16) + Math.random().toString(16) + '0'.repeat(16),\r\n        name : userInput,\r\n        createdAt : Date.now(),\r\n        conversations : [],\r\n        package : \"\",\r\n        owner : [],\r\n        milestone : \"\",\r\n        status : {\r\n            name : \"\",\r\n            color : \"rgb(180, 182, 188)\"\r\n        },\r\n        policyState : {\r\n            name : \"\",\r\n            color : \"\"\r\n        },\r\n        timeline : {\r\n            from : \"\",\r\n            to : \"\"\r\n        },\r\n        duration : \"\",\r\n        tags : [],\r\n        files : [],\r\n        weight : \"\",\r\n        dateCompleted : null,\r\n        progress : \"\",\r\n        lastUpdated : {\r\n            byUser : user,\r\n            date : new Date().getTime() // if Date.now()-time stemp < 1 min then output \"just now\" else output 1 minute ago\r\n        }\r\n    }\r\n    newTask.owner.push(user._id)\r\n    const newBoard = currBoard\r\n    newBoard.tables.map(table=>\r\n        table._id===currTable._id?table.tasks.push(newTask):table\r\n        )\r\n    return newBoard\r\n}\r\n\r\n\r\nfunction updateTask(currTable,currBoard,updatedTask,user) {\r\n    updatedTask.lastUpdated={\r\n        byUser : user,\r\n        date :new Date().getTime()\r\n    }\r\n    const newBoard ={\r\n        ...currBoard, \r\n        tables: currBoard.tables.map(table=>\r\n            table._id===currTable._id?\r\n           {...table, tasks:\r\n            table.tasks.map(task=>\r\n                task._id===updatedTask._id?\r\n                updatedTask:task\r\n            )\r\n            }\r\n            :table\r\n        )\r\n    }\r\n    return newBoard\r\n}\r\n\r\n\r\n\r\nfunction removeTask(taskId,currTable,currBoard) {\r\n    const newTable = {\r\n        ...currTable,\r\n        tasks:currTable.tasks.filter(task=>task._id!==taskId)\r\n    }\r\n    const newBoard ={\r\n        ...currBoard, \r\n        tables: currBoard.tables.map(table=>\r\n            table._id===newTable._id?\r\n            newTable\r\n            :table\r\n        )\r\n    }\r\n\r\n    return newBoard\r\n}\r\n\r\n\r\nfunction uniqId() {\r\n    // Math.random should be unique because of its seeding algorithm.\r\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n    // after the decimal.\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n};","import React, { useEffect,useState,useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BsFillStarFill } from 'react-icons/bs'\r\nimport { BoardList } from './BoardList'\r\nimport { boardService } from '../services/boardService'\r\nimport { updateWorkspace,updateCurrWorkspace} from '../store/actions/workspaceActions'\r\n\r\nexport function FavoriteBoards({\r\n    onGettingCurrentBoard,\r\n    CgViewComfortable,\r\n    scroll,\r\n    // removeBoard,\r\n    // editBoard,\r\n    // moveBoard,\r\n    // moveBoardToFolder\r\n}){\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const favBoardsIds = useSelector(state => state.user.loggedInUser.favBoards)\r\n    const workspaces = useSelector(state => state.workspace.workspaces);\r\n    const boardWorkspace = useSelector(state => state.workspace.boardWorkspace);\r\n    const dispatch = useDispatch();\r\n    // const [allBoards, setAllBoards] = useState([]);\r\n\r\n    const [workspaceBoards, setWorkspaceBoards] = useState([]);\r\n    const [folderBoards, setFolderBoards] = useState([]);\r\n    \r\n    const [favoriteWorkspaceBoards, setFavoriteWorkspaceBoards] = useState([]);\r\n    const [favoriteFolderBoards, setFavoriteFolderBoards] = useState([]);\r\n    // const [favoriteBoards, setFavoriteBoards] = useState([]);\r\n\r\n    const removeBoard=(boardId)=>{\r\n        const newWorkspace = boardService.removeBoard(boardWorkspace, boardId)\r\n        dispatch(updateWorkspace(newWorkspace))\r\n        dispatch(updateCurrWorkspace(newWorkspace))\r\n    }\r\n\r\n    //move board to another workspace or move board in folder to the workspace\r\n    const moveBoard=(newWorkspace,cuurBoard)=>{\r\n        if(boardWorkspace._id===newWorkspace._id){\r\n            const updatedWorkspace = boardService.removeBoard(boardWorkspace, cuurBoard._id)\r\n            const newWorkspaceToUpdate={\r\n                ...updatedWorkspace,\r\n                boards:[...updatedWorkspace.boards, cuurBoard]\r\n            }\r\n            dispatch(updateWorkspace(newWorkspaceToUpdate))\r\n            dispatch(updateCurrWorkspace(newWorkspaceToUpdate))\r\n        }else{\r\n            removeBoard(cuurBoard._id)\r\n            const newWorkspaceToUpdate={\r\n                ...newWorkspace,\r\n                boards:[...newWorkspace.boards, cuurBoard]\r\n            }\r\n            dispatch(updateWorkspace(newWorkspaceToUpdate))\r\n            dispatch(updateCurrWorkspace(newWorkspaceToUpdate))\r\n        }\r\n    }\r\n    //move board to another folder\r\n    const moveBoardToFolder=(folderWorkspace,newFolder,cuurBoard)=>{\r\n        const updatedWorkspace = boardService.removeBoard(boardWorkspace, cuurBoard._id)\r\n        dispatch(updateWorkspace(updatedWorkspace))\r\n        dispatch(updateCurrWorkspace(updatedWorkspace))\r\n        const newFolderToUpdate={\r\n            ...newFolder,\r\n            boards:[...newFolder.boards, cuurBoard]\r\n        }\r\n        if(updatedWorkspace._id===folderWorkspace._id){\r\n            const newWorkspace = boardService.updateFolder(updatedWorkspace, newFolderToUpdate)\r\n            dispatch(updateWorkspace(newWorkspace))\r\n            dispatch(updateCurrWorkspace(newWorkspace))\r\n        }else{\r\n            const newWorkspace = boardService.updateFolder(folderWorkspace, newFolderToUpdate)\r\n            dispatch(updateWorkspace(newWorkspace))\r\n            dispatch(updateCurrWorkspace(newWorkspace))\r\n        }\r\n    }  \r\n    \r\n\r\n    function editBoard(newBoard){\r\n            let newWorkspace = boardWorkspace\r\n            let boardInsideFolder = {\r\n                isBoardInsideFolder:false,\r\n                cuurFolde:null\r\n            }\r\n            newWorkspace.folders.map(folder=>\r\n                folder.boards.map(board=>\r\n                    board._id === newBoard._id?boardInsideFolder={\r\n                        ...boardInsideFolder,\r\n                        isBoardInsideFolder:true,\r\n                        cuurFolde:folder\r\n                    }\r\n                    :null\r\n                    \r\n            ))\r\n            if(boardInsideFolder.isBoardInsideFolder){\r\n                //board insode folder\r\n                newWorkspace ={\r\n                    ...boardWorkspace, \r\n                    folders: boardWorkspace.folders.map(folder=>\r\n                        folder._id===boardInsideFolder.cuurFolde._id?\r\n                       {...folder, boards:\r\n                        folder.boards.map(board=>\r\n                            board._id === newBoard._id?\r\n                            newBoard:board\r\n                        )}\r\n                        :folder\r\n                    )\r\n                }\r\n            }else{\r\n                //board insode workspace\r\n                 //replace the currBoard whith the new Board\r\n                newWorkspace.boards = newWorkspace.boards.map(board=>\r\n                    board._id === newBoard._id?newBoard:board\r\n                )\r\n            }\r\n            // send to update updateWorkspace\r\n            dispatch(updateWorkspace(newWorkspace))\r\n            dispatch(updateCurrWorkspace(newWorkspace))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setWorkspaceBoards([])\r\n        setFolderBoards([])\r\n        if(loggedInUser.favBoards.length>0){\r\n            workspaces.forEach(workspace=>{ \r\n                setWorkspaceBoards(prevState =>[...prevState,...workspace.boards])\r\n                // setAllBoards(prevState =>[...prevState,...workspace.boards])\r\n                workspace.folders.map(folder=>\r\n                    setFolderBoards(prevState =>[...prevState,...folder.boards])\r\n                    // setAllBoards(prevState =>[...prevState,...folder.boards])\r\n                )}\r\n            )\r\n        }\r\n    }, [loggedInUser,favBoardsIds,workspaces])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setFavoriteBoards(allBoards.filter(board=>favBoardsIds.includes(board._id)))\r\n    // }, [allBoards,favBoardsIds])    \r\n    useEffect(() => {\r\n        setFavoriteWorkspaceBoards(workspaceBoards.filter(board=>favBoardsIds.includes(board._id)))\r\n    }, [workspaceBoards,favBoardsIds])       \r\n    useEffect(() => {\r\n        setFavoriteFolderBoards(folderBoards.filter(board=>favBoardsIds.includes(board._id)))\r\n    }, [folderBoards,favBoardsIds])    \r\n\r\n\r\n    return (\r\n        <div className=\"favorite-toolbar-menu\">\r\n            <div className=\"title-wrapper\">\r\n                <BsFillStarFill className='star'/>\r\n                <div>Favorites</div>\r\n            </div>\r\n\r\n            {\r\n                favoriteWorkspaceBoards.length>0||favoriteFolderBoards.length>0?\r\n                <div>\r\n                    {\r\n                        favoriteWorkspaceBoards.length>0&&\r\n                        <BoardList \r\n                        boards={favoriteWorkspaceBoards}\r\n                        onGettingCurrentBoard={onGettingCurrentBoard}\r\n                        CgViewComfortable={CgViewComfortable}\r\n                        removeBoard={removeBoard}\r\n                        editBoard={editBoard}\r\n                        moveBoard={moveBoard}\r\n                        moveBoardToFolder={moveBoardToFolder}\r\n                        scroll={scroll}\r\n                        cmp='favorite'\r\n                    />\r\n                    }\r\n                     {\r\n                        favoriteFolderBoards.length>0&&\r\n                        <BoardList \r\n                        boards={favoriteFolderBoards}\r\n                        onGettingCurrentBoard={onGettingCurrentBoard}\r\n                        CgViewComfortable={CgViewComfortable}\r\n                        removeBoard={removeBoard}\r\n                        editBoard={editBoard}\r\n                        moveBoard={moveBoard}\r\n                        moveBoardToFolder={moveBoardToFolder}\r\n                        scroll={scroll}\r\n                        object='insideFolder'\r\n                        cmp='favorite'\r\n                    />\r\n                    }\r\n                </div>\r\n                :\r\n                <div className=\"no-favorite-msg\">\r\n                    <div>\r\n                        <BsFillStarFill className='star'/>\r\n                    </div>\r\n                    <div>\r\n                        No favorite boards yet\r\n                    </div>\r\n                    <div>\r\n                        'Star' any board so that you can easily access it later\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState,useRef } from 'react';\r\nimport { FolderList } from \"./FolderList\";\r\nimport { BoardList } from \"./BoardList\";\r\nimport { UpdateWorkspace } from \"./UpdateWorkspace\";\r\nimport { ToolbarMenuActionsBtn } from \"./ToolbarMenuActionsBtn\";\r\nimport { Search } from \"./Search\";\r\nimport { FavoriteBoards } from \"./FavoriteBoards\";\r\n\r\nexport function BoardToolbarMenu({\r\n    IoIosArrowForward, \r\n    isToolbarMenuClose, \r\n    onToggleToolbarMenu, \r\n    IoIosArrowBack, \r\n    workspace,\r\n    IoMdArrowDropdown,\r\n    CgViewComfortable,\r\n    onGettingCurrentBoard,\r\n    onGettingCurrentBoardInWorkspace,\r\n    addNewBoard,\r\n    addNewFloder,\r\n    addBoardInFolder,\r\n    removeFolder,\r\n    updateFolder,\r\n    removeBoard,\r\n    editBoard,\r\n    moveFolder,\r\n    moveBoard,\r\n    moveBoardToFolder,\r\n    isNewFolderCreated,\r\n    onEndNewFolderUpdating,\r\n    updateWorkspace,\r\n    deleteWorkspace,\r\n    onGettingCurrentWorkspace,\r\n    onManageWorkspace,\r\n    toolbarActiveBtn\r\n}) {\r\n\r\nconst [scroll, setScroll] = useState(0)\r\nconst [search, setSearch] = useState(\"\");\r\n\r\nconst [filteredFolders, setFilteredFolders] = useState([]);\r\nconst [filteredBoards, setFilteredBoards] = useState([]);\r\n\r\nuseEffect(() => {\r\n    console.log('scroll',scroll);\r\n}, [scroll])\r\n\r\n    if (!workspace.boards|| !workspace.folders) return <div>Loading....</div>\r\n    return (\r\n        <div className={`board-toolbar-menu ${isToolbarMenuClose?'close-toolbar-menu':'open-toolbar-menu'}`}>\r\n            <div className=\"sticky-wrapper\">\r\n            \r\n                <div className={`toggle-toolbar-menu-btn ${isToolbarMenuClose?'open':'close'}`} onClick={onToggleToolbarMenu}>\r\n                    {isToolbarMenuClose? <IoIosArrowForward style={{ width: '15px', height: '15px' }}/>:<IoIosArrowBack style={{ width: '15px', height: '15px' }}/>}\r\n                    {isToolbarMenuClose?<span className=\"label-text\">Open navigation</span>:<span className=\"label-text\">Close navigation</span>}\r\n                </div>\r\n                <div className={`navigation-container ${isToolbarMenuClose?'hide-txt':'show-txt'}`}>\r\n                        {toolbarActiveBtn==='favorite'?\r\n                        <FavoriteBoards\r\n                        onGettingCurrentBoard={onGettingCurrentBoard}\r\n                        CgViewComfortable={CgViewComfortable}\r\n                        removeBoard={removeBoard}\r\n                        editBoard={editBoard}\r\n                        moveBoard={moveBoard}\r\n                        moveBoardToFolder={moveBoardToFolder}\r\n                        scroll={scroll}\r\n                        />\r\n                        :\r\n                        <>\r\n                        <div className=\"nav-first-area\">\r\n                            <UpdateWorkspace \r\n                            updateWorkspace={updateWorkspace}\r\n                            deleteWorkspace={deleteWorkspace}\r\n                            onGettingCurrentWorkspace={onGettingCurrentWorkspace}\r\n                            onManageWorkspace={onManageWorkspace}\r\n                            />\r\n                            <div className=\"actions-container\">\r\n                                    <ToolbarMenuActionsBtn \r\n                                        btnName={'Add'}\r\n                                        addNewBoard={addNewBoard}\r\n                                        addNewFloder={addNewFloder}\r\n                                    /> \r\n                                    <ToolbarMenuActionsBtn \r\n                                        btnName={'Filters'}\r\n                                    />\r\n                                    \r\n                                    <Search  \r\n                                    search={search} \r\n                                    setSearch={setSearch} \r\n                                    setFilteredFolders={setFilteredFolders} \r\n                                    setFilteredBoards={setFilteredBoards} \r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"nav-second-area\">\r\n                            <div className={`second-area-wrapper`}>      \r\n                                <div className={`second-area-content`}\r\n                                    onScroll={() => {\r\n                                        console.log('scroll');\r\n                                        setScroll(curr=>curr+1)\r\n                                    }}\r\n                                >\r\n                                    {workspace.folders.length>0&&\r\n                                        <FolderList \r\n                                            folders={filteredFolders} \r\n                                            IoMdArrowDropdown={IoMdArrowDropdown}\r\n                                            CgViewComfortable={CgViewComfortable}\r\n                                            onGettingCurrentBoard={onGettingCurrentBoard}\r\n                                            addBoardInFolder={addBoardInFolder}\r\n                                            removeFolder={removeFolder}\r\n                                            updateFolder={updateFolder}\r\n                                            removeBoard={removeBoard}\r\n                                            editBoard={editBoard}\r\n                                            moveFolder={moveFolder}\r\n                                            moveBoard={moveBoard}\r\n                                            moveBoardToFolder={moveBoardToFolder}\r\n                                            scroll={scroll}\r\n                                            isNewFolderCreated={isNewFolderCreated}\r\n                                            onEndNewFolderUpdating={onEndNewFolderUpdating}\r\n        \r\n                                        />\r\n                                    }\r\n                                    { workspace.boards.length>0&&\r\n                                        <BoardList \r\n                                            boards={filteredBoards}\r\n                                            onGettingCurrentBoard={onGettingCurrentBoard}\r\n                                            CgViewComfortable={CgViewComfortable}\r\n                                            removeBoard={removeBoard}\r\n                                            editBoard={editBoard}\r\n                                            moveBoard={moveBoard}\r\n                                            moveBoardToFolder={moveBoardToFolder}\r\n                                            scroll={scroll}\r\n                                        />\r\n                                    }\r\n\r\n                                    { workspace.boards.length<1&&workspace.folders.length<1&&\r\n                                        <div className=\"empty-workspace\">\r\n                                            <div className=\"small-font\">\r\n                                                Workspace is empty\r\n                                            </div>\r\n                                            <div className=\"small-font\">\r\n                                                Create or add boards\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </>\r\n                        }\r\n                </div>\r\n\r\n            </div>  \r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react'\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from 'react-redux'\r\nimport { loadWorkspaces, updateWorkspace } from '../store/actions/workspaceActions'\r\nimport { getCurrBoard, updateCurrBoard} from '../store/actions/workspaceActions'\r\nimport { boardService } from '../services/boardService'\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleFavUserBoardList } from '../store/actions/userActions'\r\n\r\nimport { BsFillStarFill,BsPeople,BsThreeDots,BsFilter } from 'react-icons/bs'\r\nimport { SiProbot } from 'react-icons/si'\r\nimport { ImTable } from 'react-icons/im'\r\nimport {IoIosArrowDown} from 'react-icons/io'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\nimport { BiUserCircle } from 'react-icons/bi'\r\nimport { RiArrowUpDownFill } from 'react-icons/ri'\r\n\r\nexport class _BoardHeader extends Component {\r\n    state={\r\n        board:{},\r\n        name:'',\r\n        desc:'',\r\n        isSearchActive:false\r\n    }\r\n    inputRef = React.createRef();\r\n    async componentDidMount(){\r\n        if(this.props.board){\r\n            this.setState({name:this.props.board.name})\r\n            this.setState({desc:this.props.board.desc})\r\n            this.setState({board:this.props.board}) \r\n        }\r\n        \r\n        this.editableBoardName = React.createRef();\r\n        this.editableBoardDesc = React.createRef();\r\n    }\r\n    async componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params.id !==  this.props.match.params.id) {\r\n        this.setState({name:this.props.board.name})\r\n        this.setState({desc:this.props.board.desc})\r\n        this.setState({board:this.props.board}) \r\n        }\r\n\r\n        if (prevProps.board.name !==  this.props.board.name) {\r\n            this.setState({name:this.props.board.name})\r\n            this.setState({desc:this.props.board.desc})\r\n            this.setState({board:this.props.board}) \r\n        }\r\n    }\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    handleChangeBoardName = (ev) => {\r\n        this.setState({name: ev.target.value})\r\n        this.setState({ board: { ...this.state.board, name: ev.target.value } })\r\n    }\r\n    handleChangeBoardDesc=(ev)=>{\r\n        this.setState({desc: ev.target.value})\r\n        this.setState({ board: { ...this.state.board, desc: ev.target.value } })\r\n    }\r\n    changeToContentEditable=(value)=>{\r\n            let content = [];\r\n            if(value==='name'){\r\n                content.push(\r\n                    <ContentEditable\r\n                        onFocus={this.focusText}\r\n                        className='content-editable'\r\n                        innerRef={this.editableBoardName}\r\n                        html={this.state.name}\r\n                        disabled={false}  \r\n                        onChange={this.handleChangeBoardName}\r\n                        onBlur={() => {\r\n                            // if (this.props.board.name === this.state.board.name) return\r\n                            // const desc = `${loggedUser.username} Changed the task name from ${task[taskKey]} to ${this.state.task.name}`\r\n                            const updatedBoard = {\r\n                                ...this.props.board,\r\n                                name: this.state.name\r\n                            }\r\n                            this.props.onEditBoard(updatedBoard)\r\n                            this.props.updateCurrBoard(updatedBoard)\r\n\r\n                        }}\r\n                        onKeyDown={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                ev.target.blur()\r\n                            }\r\n                        }}\r\n                    />\r\n                )\r\n            }else{\r\n                content.push(\r\n                    <ContentEditable\r\n                        onFocus={this.focusText}\r\n                        className='content-editable'\r\n                        innerRef={this.editableBoardDesc}\r\n                        html={this.state.desc}\r\n                        disabled={false}  \r\n                        onChange={this.handleChangeBoardDesc}\r\n                        onBlur={() => {\r\n                            // if (this.props.tableColumn.taskKey === this.state.currTableColumn.taskKey&&this.props.tableColumn.title === this.state.currTableColumn.title) return\r\n                            //  if (this.props.board.desc === this.state.board.desc) return\r\n                            // const desc = `${loggedUser.fullName} Changed the task name from ${task[taskKey]} to ${this.state.task.name}`\r\n                            const updatedBoard = {\r\n                                ...this.props.board,\r\n                                desc:this.state.desc\r\n                            }\r\n                            this.props.onEditBoard(updatedBoard)\r\n                            this.props.updateCurrBoard(updatedBoard)\r\n                        }}\r\n                        onKeyDown={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                ev.target.blur()\r\n                            }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n            \r\n            return content;\r\n    }\r\n\r\n    getFavBoardStyle(){\r\n            if(this.props.loggedInUser.favBoards.includes(this.state.board._id)){\r\n                return 'fav'\r\n            }\r\n    }\r\n    toggleFavUserBoardList=()=>{\r\n       this.props.toggleFavUserBoardList(this.props.loggedInUser,this.props.board._id)\r\n    }\r\n    render() {\r\n        const {\r\n            onAddNewTable,\r\n            setSearch\r\n        } = this.props\r\n        const {board} = this.state\r\n        if (!board) return <div>Loading....</div>\r\n        return (\r\n        <div className=\"board-header\">\r\n                        <div className=\"board-info\">\r\n                            <div>\r\n                                <span className=\"board-title\">\r\n                                    {/* {board.name} */}\r\n                                    {this.changeToContentEditable('name')}\r\n                                </span>\r\n                                <div className='add-to-favorite-btn'>\r\n                                    <BsFillStarFill \r\n                                    className={`BsFillStarFill ${this.getFavBoardStyle()}`}\r\n                                    onClick={this.toggleFavUserBoardList}\r\n                                    />\r\n                                    {this.props.loggedInUser.favBoards.includes(board._id)?<span className=\"label-text arrow-up\">Remove from favorites</span>:\r\n                                    <span className=\"label-text arrow-up\">Add to favorites</span>}\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"board-viewers\">\r\n                                    img\r\n                                </div>\r\n                                <div className=\"board-integrations\">\r\n                                    <div className=\"icons-container\">\r\n                                        <div className=\"icon-hexagon-wrapper\">\r\n                                            <img src=\"https://img.icons8.com/color/13/000000/slack-new.png\" alt=''/>\r\n                                        </div>\r\n                                        <div className=\"icon-hexagon-wrapper\">\r\n                                            <img src=\"https://img.icons8.com/fluent/13/000000/gmail--v1.png\" alt=''/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <span>Integrate / 2</span>\r\n                                </div>\r\n                                <div className=\"board-automations\">\r\n                                    <SiProbot />\r\n                                    <span>Automate / 2</span>\r\n                                </div>\r\n                                <div className=\"board-subscribers\">\r\n                                    <BsPeople/>\r\n                                    <span> / 1</span>\r\n                                </div>\r\n                                <div className=\"board-activities\">\r\n                                    Activities / 0\r\n                                </div>\r\n                                <div className=\"board-more-options\">\r\n                                    <BsThreeDots />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"board-desc\">\r\n                        {/* {board.desc} */}\r\n                        {this.changeToContentEditable('desc')}\r\n                        </div>\r\n                        <div className=\"board-actions\">\r\n                            <div>\r\n                                <ImTable style={{ width: '15px', height: '15px' }}/>\r\n                                <span className=\"main-table\">Main Table / 4</span>\r\n                                <IoIosArrowDown style={{ width: '12px', height: '12px' }}/>\r\n                            </div>\r\n                            <div className=\"actions-continer\">\r\n                                <div onClick={onAddNewTable}>\r\n                                    <span>New Item</span>\r\n                                    <IoIosArrowDown style={{ width: '12px', height: '12px' }}/>\r\n                                </div>\r\n                                <div className=\"header-search-wrapper\">\r\n                                {!this.state.isSearchActive?\r\n                                <div onClick={()=>{\r\n                                    this.setState({isSearchActive:true})\r\n                                   setTimeout(() => {\r\n                                       if(this.inputRef&&this.inputRef.current){\r\n                                            this.inputRef.current.focus()\r\n                                       }\r\n                                   }, 0);\r\n                                }}\r\n                                className=\"header-action-btn\"\r\n                                >\r\n                                    <HiOutlineSearch/>\r\n                                    <span>Search</span>\r\n                                </div>:\r\n                                <input className=\"search-input stretch-left\" ref={this.inputRef} type=\"search\" onChange={(e) => setSearch(e.target.value)}\r\n                                placeholder='Search'\r\n                                onBlur={(e)=>{\r\n                                    if(e.target.value!=='')return\r\n                                    this.setState({isSearchActive:false})\r\n\r\n                                }}\r\n                                onKeyDown={(ev) => {\r\n                                    if (ev.key === 'Enter') {\r\n                                        ev.target.blur()\r\n                                    }\r\n                                }}\r\n                                />}\r\n                                </div>\r\n                                \r\n                                <div>\r\n                                    <BiUserCircle/>\r\n                                    <span>Person</span>\r\n                                </div>\r\n                                <div>\r\n                                    <BsFilter/>\r\n                                    <span>Filter</span>\r\n                                </div>\r\n                                <div>\r\n                                    <RiArrowUpDownFill/>\r\n                                    <span>Sort</span>\r\n                                </div>\r\n                                <div>\r\n                                    <BsThreeDots />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n        </div>\r\n    );\r\n}}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        workspaces: state.workspace.workspaces,\r\n        board: state.workspace.currBoard,\r\n        loggedInUser: state.user.loggedInUser,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadWorkspaces,\r\n    updateWorkspace,\r\n    toggleFavUserBoardList,\r\n    updateCurrBoard\r\n}\r\nexport const BoardHeader = connect(mapStateToProps, mapDispatchToProps)(withRouter(_BoardHeader))\r\n","import React, { Component } from 'react'\r\n\r\nexport class UpdateLabelName extends Component {\r\n    state={\r\n        isUpdateLabelName:false,\r\n        label:{}\r\n    }\r\n    async componentDidMount() {\r\n        this.setState({label:this.props.statusLabel})\r\n        this.editableLabelName = React.createRef();\r\n    }\r\n    handelChangeLabelName = (ev) => {\r\n        this.setState({ label: { ...this.state.label, name: ev.target.value } },()=>{\r\n            this.props.updateLabel(this.state.label)\r\n        })\r\n    }\r\n    onUpdateLabelName=()=>{\r\n        this.setState({label:this.props.statusLabel},()=>{\r\n            this.setState({isUpdateLabelName:true},()=>{\r\n                this.editableLabelName.current.focus()\r\n                this.editableLabelName.current.select()\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isUpdateLabelName,label } = this.state\r\n        const { statusLabel } = this.props\r\n        return (\r\n            <span \r\n                className=\"edit-label-name\" \r\n                onClick={this.onUpdateLabelName} \r\n            >\r\n                { isUpdateLabelName? \r\n                    <input \r\n                    className=\"update-label-name-input\"\r\n                    type=\"text\" \r\n                    value={label.name} \r\n                    onChange={this.handelChangeLabelName}\r\n                    ref={this.editableLabelName} \r\n                    onBlur={()=>{\r\n                        this.setState({isUpdateLabelName:false})\r\n                    }}\r\n                    onKeyDown={(ev) => {\r\n                        if (ev.key === 'Enter') {\r\n                            ev.target.blur()\r\n                            this.setState({isUpdateLabelName:false})\r\n                        }\r\n                    }}\r\n                    />\r\n                    :\r\n                    <span>{statusLabel.name}</span>\r\n                }\r\n            </span>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {UpdateLabelName} from './UpdateLabelName'\r\nimport {TiDelete} from 'react-icons/ti'\r\n\r\nexport class StatusLabelPreview extends Component {\r\n    state={\r\n        isUpdateLabelColor:false,\r\n        newLabelColor:null,\r\n        currLabel:{}\r\n    }\r\n    async componentDidMount() {\r\n        this.setState({currLabel:this.props.statusLabel})\r\n    }\r\n    onToggleUpdateLabelColor=(currLabel)=>{\r\n        this.setState({isUpdateLabelColor:!this.state.isUpdateLabelColor},()=>{\r\n            this.props.hideColorPicker(this.state.isUpdateLabelColor)\r\n        })\r\n        this.setState({currLabel})\r\n    }\r\n    onChangeNewLabelColor=(currColor)=>{\r\n        this.setState({newLabelColor:currColor})\r\n    }\r\n    onRemoveNewLabelColor=()=>{\r\n        this.setState({newLabelColor:null})\r\n    }\r\n    onSaveColor=(color)=>{\r\n        if(this.state.isUpdateLabelColor){\r\n        this.setState({currLabel:{...this.state.currLabel, color:color}})\r\n        this.setState({isUpdateLabelColor:false},()=>{\r\n            this.props.hideColorPicker(this.state.isUpdateLabelColor)\r\n            this.props.updateLabel(this.state.currLabel)\r\n        })\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        const { isUpdateLabelColor,currLabel } = this.state\r\n        const { BsDroplet,statusLabel,colorsPicker,idx,updateLabel ,provided } = this.props\r\n        return (\r\n            <>\r\n            <div className={`stat-label-edit-wrapper ${idx>5?'sec-column':''}`} ref={provided.innerRef} {...provided.draggableProps}>\r\n            <div className=\"status-label-dots-btn\"  {...provided.dragHandleProps}>\r\n               ::\r\n            </div>\r\n            <div \r\n                title={`${statusLabel.name}`}\r\n                className={`stat-label-edit ${statusLabel.name.length>13?'ellipsis-label-name-edit':''}`}\r\n                tabindex=\"0\"\r\n            >\r\n                {!isUpdateLabelColor?   \r\n                    <span className=\"edit-label-color\" style={{backgroundColor:`${statusLabel.color}`}} onClick={()=>this.onToggleUpdateLabelColor(statusLabel)}>\r\n                        <BsDroplet className={`BsDroplet ${statusLabel.color==='black'?'light-drop-on-dark-color':''}`}/>\r\n                    </span>\r\n                :\r\n                    <span className=\"edit-label-color\" style={{backgroundColor:`${this.state.newLabelColor?this.state.newLabelColor:statusLabel.color}`}} onClick={()=>this.onToggleUpdateLabelColor(statusLabel)} >\r\n                        <BsDroplet className={`BsDroplet ${statusLabel.color==='black'?'light-drop-on-dark-color':''}`}/>\r\n                    </span>\r\n                }\r\n                {/* { !isUpdateLabelColor?\r\n                <UpdateLabelColor statusLabel={statusLabel} BsDroplet={BsDroplet} onToggleUpdateLabelColor={this.onToggleUpdateLabelColor} comStyle={{backgroundColor:`${statusLabel.color}`}}/>:\r\n                <UpdateLabelColor statusLabel={statusLabel} BsDroplet={BsDroplet} onToggleUpdateLabelColor={this.onToggleUpdateLabelColor} comStyle={{backgroundColor:`${this.state.newLabelColor?this.state.newLabelColor:statusLabel.color}`}}/>} */}\r\n\r\n                <UpdateLabelName statusLabel={statusLabel} updateLabel={updateLabel}/>\r\n            </div> \r\n            <div className=\"status-label-delete-btn\" onClick={()=>this.props.onRemoveLabel(statusLabel._id)}>\r\n                <TiDelete/>\r\n                <span className=\"label-text-on-top\">Delete Labels</span>\r\n            </div>\r\n        </div>\r\n\r\n        {isUpdateLabelColor&&\r\n        <div className=\"label-color-edit\" style={{gridRowStart: idx<6?idx+2:idx-4,gridRowEnd:idx<6?idx+6:idx}}>\r\n            <div className='status-color-picker'>\r\n                {colorsPicker.map(color=>\r\n                    <div \r\n                    className=\"color\" \r\n                    style={{backgroundColor:`${color}`}}\r\n                    onMouseEnter={() => this.onChangeNewLabelColor(color)}\r\n                    onMouseLeave={() => this.onRemoveNewLabelColor()}\r\n                    onClick={()=>this.onSaveColor(color)}\r\n                    ></div>\r\n                )}\r\n            </div>\r\n        </div>\r\n        }\r\n           </>\r\n        )\r\n    }\r\n}\r\n","export  const colorsPicker = [\r\n    '#f368e0',\r\n    '#FC427B',\r\n    '#e84118',\r\n    '#ff6b6b',\r\n    '#ff9f43',\r\n    '#f3a683',\r\n    '#feca57',\r\n    '#fbc531',\r\n    '#4cd137',\r\n    '#1dd1a1',\r\n    '#01a3a4',\r\n    '#48dbfb',\r\n    '#54a0ff',\r\n    '#00a8ff',\r\n    '#487eb0',\r\n    '#273c75',\r\n    '#3B3B98',\r\n    '#341f97',\r\n    '#5f27cd',\r\n    '#9c88ff',\r\n    '#D6A2E8',\r\n    '#ff9ff3',\r\n    '#f8a5c2',\r\n    '#f78fb3',\r\n    '#c8d6e5',\r\n    '#7f8fa6',\r\n    '#353b48',\r\n    'black'\r\n]","import React, { Component } from 'react'\r\nimport {BsDroplet} from 'react-icons/bs'\r\nimport {StatusLabelPreview} from './StatusLabelPreview'\r\nimport {colorsPicker} from '../data/colorPicker'\r\nimport { DragDropContext,Droppable ,Draggable   } from 'react-beautiful-dnd';\r\n\r\nexport class TaskStatus extends Component {\r\n    state={\r\n        statusLabelList:[],\r\n        isStatusModalOpen:false,\r\n        isEditLabelsModalOpen:false,\r\n        newLabelColor:null,\r\n        isUpdateLabelColor:false,\r\n        currLabel:{},\r\n        hideColorPicker:false,\r\n        boardCopy:null\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const statusLabelList = [...this.props.board.statusLabelList]\r\n        this.setState({statusLabelList})\r\n        this.setState({boardCopy:this.props.board})\r\n    }\r\n\r\n    toggleStatusModal=()=>{\r\n        this.setState({isStatusModalOpen:!this.state.isStatusModalOpen})\r\n    }\r\n    closeStatusModal=()=>{\r\n        if(this.state.isEditLabelsModalOpen)return\r\n        this.setState({isStatusModalOpen:false})\r\n        this.closeEditLabelsModal()\r\n    }\r\n    updateTask=(table,task,statusLabel)=>{\r\n        const updatedTask = {\r\n            ...task,\r\n            status:statusLabel\r\n        }\r\n        this.props.onEditTask(table,updatedTask)\r\n        this.setState({isStatusModalOpen:false})\r\n    }\r\n    openEditLabelsModal=()=>{\r\n        this.setState({isEditLabelsModalOpen:true})\r\n    }\r\n    closeEditLabelsModal=()=>{\r\n        this.setState({isEditLabelsModalOpen:false})\r\n    }\r\n    onChangeNewLabelColor=(currColor)=>{\r\n        this.setState({newLabelColor:currColor})\r\n    }\r\n    onRemoveNewLabelColor=()=>{\r\n        this.setState({newLabelColor:null})\r\n    }\r\n    onAddNewLabel=(currColor)=>{\r\n        if(this.props.board.statusLabelList.length===12)return\r\n        this.setState({\r\n            statusLabelList:[\r\n                ...this.props.board.statusLabelList,\r\n                {\r\n                    _id:(new Date()).getTime().toString(),\r\n                    color:currColor,\r\n                    name:'New Label'\r\n                }\r\n            ]\r\n        },()=>{\r\n            const newBoard = {...this.props.board,\r\n                 statusLabelList:[...this.props.board.statusLabelList,{\r\n                    _id:(new Date()).getTime().toString(),\r\n                    color:currColor,\r\n                    name:'New Label'\r\n                }]\r\n            }\r\n            this.props.onEditBoard(newBoard)\r\n        })\r\n    }\r\n    onRemoveLabel=(labelId)=>{\r\n        const newstatusLabelList = this.state.statusLabelList.filter(label=>label._id!==labelId)\r\n        this.setState({\r\n            statusLabelList:newstatusLabelList\r\n        },()=>{\r\n            const newBoard = {...this.props.board,\r\n                statusLabelList:newstatusLabelList\r\n            }\r\n            this.props.onEditBoard(newBoard)\r\n        })\r\n    }\r\n    updateLabel=(newLabel)=>{\r\n        const newstatusLabelList = this.props.board.statusLabelList.map(label=>label._id===newLabel._id?newLabel:label)\r\n        this.setState({\r\n            statusLabelList:newstatusLabelList\r\n        },()=>{\r\n            const newBoard = {...this.props.board,\r\n                statusLabelList:newstatusLabelList\r\n            }\r\n            this.props.onEditBoard(newBoard)\r\n        })\r\n    }\r\n    onToggleUpdateLabelColor=(currLabel)=>{\r\n        this.setState({isUpdateLabelColor:!this.state.isUpdateLabelColor})\r\n        this.setState({currLabel})\r\n    }\r\n    hideColorPicker=(toggleUpdateLabel)=>{\r\n        if(toggleUpdateLabel){\r\n            this.setState({hideColorPicker:true})\r\n        }else{\r\n            this.setState({hideColorPicker:false})\r\n        }\r\n    }\r\n    handleDragEnd=({destination, source})=>{\r\n       if(!destination){\r\n           // console.log(\"not dropped in droppable\")\r\n           return\r\n       }\r\n       if(destination.index===source.index&&destination.draggableId===source.draggableId){\r\n           // console.log(\"dropped in same place\")\r\n           return\r\n       }\r\n        //board.statusLabelList\r\n       const statusLabelListCopy = {...this.props.board.statusLabelList[source.index]}\r\n       this.setState({ // no previous or latest old state passed \r\n            boardCopy:{...this.state.boardCopy}\r\n            }, ()=>{\r\n                this.state.boardCopy.statusLabelList.splice(source.index,1);\r\n                this.state.boardCopy.statusLabelList.splice(destination.index, 0, statusLabelListCopy);\r\n                return this.state.boardCopy\r\n        })  \r\n\r\n        this.props.onEditBoard(this.state.boardCopy)\r\n   }\r\n    render() {\r\n        const { isStatusModalOpen,isEditLabelsModalOpen,statusLabelList,isUpdateLabelColor } = this.state\r\n        const { task , table, taskKey, FaPencilAlt,onEditTask,board } = this.props\r\n\r\n        if (!task) return <div>Loading....</div>\r\n        return (\r\n            <>\r\n            <div className='table-cell task-cell'\r\n             tabIndex=\"0\" \r\n             onBlur={this.closeStatusModal}\r\n             >\r\n            <div className='task-cell-status' style={{backgroundColor:`${task.status.color}`}} onClick={this.toggleStatusModal}>\r\n                <div className=\"cell-content-wrapper\">\r\n                {task[taskKey].name}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"status-container\">\r\n                {\r\n                isStatusModalOpen&&\r\n                    !isEditLabelsModalOpen&&\r\n                    <div className=\"status-modal-wrapper\">\r\n                        <div className=\"status-label-list-container\">\r\n                            {\r\n                            board.statusLabelList.map((statusLabel,idx)=>\r\n                                <div \r\n                                title={`${statusLabel.name}`}\r\n                                className={`stat-label ${statusLabel.name.length>13?'ellipsis-label-name':''}`}\r\n                                tabindex=\"0\"\r\n                                style={{backgroundColor:`${statusLabel.color}`}}\r\n                                onMouseDown={()=>this.updateTask(table,task,statusLabel)}\r\n                                >\r\n                                   {statusLabel.name}\r\n                                </div> \r\n                            )}\r\n                        </div>\r\n                        <div className=\"status-label-btn edit-status\" onClick={this.openEditLabelsModal}>\r\n                            <FaPencilAlt className=\"status-FaPencilAlt\"/>\r\n                            <span>Add/Edit Labels</span>\r\n                        </div>\r\n                    </div>\r\n                }{\r\n                isStatusModalOpen&&\r\n                 isEditLabelsModalOpen&&\r\n                    <div className=\"status-modal-wrapper\">\r\n                        <DragDropContext  onDragEnd={this.handleDragEnd} >\r\n                            <Droppable droppableId='statusLabelList'>\r\n                            {(provided) => (\r\n                                <div className={`status-label-list-container edit ${this.state.hideColorPicker?'updating-the-label':''}`} key='statusLabelList' {...provided.droppableProps} ref={provided.innerRef}>\r\n                                {\r\n                                    board.statusLabelList.map((statusLabel,index)=>\r\n                                        <Draggable key={statusLabel._id} draggableId={statusLabel._id} index={index}>\r\n                                            {(provided) => (\r\n                                                <StatusLabelPreview \r\n                                                provided={provided}\r\n                                                BsDroplet={BsDroplet}\r\n                                                TiDelete={BsDroplet}\r\n                                                statusLabel={statusLabel}\r\n                                                colorsPicker={colorsPicker}\r\n                                                hideColorPicker={this.hideColorPicker}\r\n                                                idx={index}\r\n                                                onRemoveLabel={this.onRemoveLabel}\r\n                                                updateLabel={this.updateLabel}\r\n                                                />\r\n                                            )}\r\n                                        </Draggable>\r\n                                    )}\r\n                                    {board.statusLabelList.length<12&&<div className={`add-new-label sec-column ${this.state.newLabelColor?'':'default'}`} style={{backgroundColor:`${this.state.newLabelColor?this.state.newLabelColor:'transparent'}`}}>\r\n                                    New Label\r\n                                    </div>}\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n                            </Droppable>\r\n                        </DragDropContext>\r\n                       { !this.state.hideColorPicker&&<div className='status-color-picker'>\r\n                            {colorsPicker.map(color=>\r\n                                <div \r\n                                className=\"color\" \r\n                                style={{backgroundColor:`${color}`}}\r\n                                onMouseEnter={() => this.onChangeNewLabelColor(color)}\r\n                                onMouseLeave={() => this.onRemoveNewLabelColor()}\r\n                                onClick={()=>this.onAddNewLabel(color)}\r\n                                ></div>\r\n                            )}\r\n                        </div>}\r\n                        <div className=\"status-label-btn\" onClick={this.closeEditLabelsModal}>\r\n                            <span>Apply</span>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","export const stickers = [\r\n    {\r\n        name: ':alert1:',\r\n        img:\"fas fa-exclamation-circle\",\r\n        customCategory: 'FA',\r\n        class:'green'\r\n    }, \r\n    {\r\n        name: ':alert2:',\r\n        img:\"fas fa-exclamation-triangle\",\r\n        customCategory: 'FA',\r\n        class:'red'\r\n    }, \r\n    {\r\n        name: ':alert3:',\r\n        img:\"fas fa-exclamation-triangle\",\r\n        customCategory: 'FA',\r\n        class:'yellow'\r\n    },\r\n    {\r\n        name: ':check:',\r\n        img:\"fas fa-check\",\r\n        customCategory: 'FA',\r\n        class:'green'\r\n    }, \r\n    {\r\n        name: ':times:',\r\n        img:\"fas fa-times\",\r\n        customCategory: 'FA',\r\n        class:'red'\r\n    },\r\n    {\r\n        name: ':times:',\r\n        img:\"far fa-smile\",\r\n        customCategory: 'FA',\r\n        class:'gray'\r\n    },\r\n    {\r\n        name: ':clock1:',\r\n        img:\"far fa-clock\",\r\n        customCategory: 'FA',\r\n        class:'green'\r\n    },\r\n    {\r\n        name: ':clock2:',\r\n        img:\"far fa-clock\",\r\n        customCategory: 'FA',\r\n        class:'red'\r\n    },\r\n    {\r\n        name: ':bolt:',\r\n        img:\"fas fa-bolt\",\r\n        customCategory: 'FA',\r\n        class:'blue'\r\n    }, \r\n    {\r\n        name: ':arrow-r:',\r\n        img:\"fas fa-arrow-right\",\r\n        customCategory: 'FA',\r\n        class:'green'\r\n    },\r\n    {\r\n        name: ':arrow-l:',\r\n        img:\"fas fa-arrow-left\",\r\n        customCategory: 'FA',\r\n        class:'red'\r\n    },  \r\n    {\r\n        name: ':rocket:',\r\n        img:\"fas fa-rocket\",\r\n        customCategory: 'FA',\r\n        class:'blue'\r\n    },\r\n    {\r\n        name: ':question:',\r\n        img:\"fas fa-question\",\r\n        customCategory: 'FA',\r\n        class:'green'\r\n    },\r\n    {\r\n        name: ':bug:',\r\n        img:\"fas fa-bug\",\r\n        customCategory: 'FA',\r\n        class:'red'\r\n    },\r\n    {\r\n        name: ':exclamation:',\r\n        img:\"fas fa-exclamation\",\r\n        customCategory: 'FA',\r\n        class:'gray'\r\n    },\r\n    {\r\n        name: ':party_parrot:',\r\n        imageUrl:'https://emojis.slackmojis.com/emojis/images/1471119458/990/party_parrot.gif?1471119458',\r\n        customCategory: 'Gif',\r\n    },\r\n    {\r\n        name: ':pika:',\r\n        imageUrl:\r\n          'https://emojis.slackmojis.com/emojis/images/1579216111/7550/pikachu_wave.gif?1579216111',\r\n        customCategory: 'Gif',\r\n    },\r\n    {\r\n        name: ':troll:',\r\n        imageUrl:\r\n          'https://emojis.slackmojis.com/emojis/images/1463602125/429/troll.png?1463602125',\r\n        customCategory: 'Gif',\r\n    },\r\n    {\r\n        name: ':apple:',\r\n        imageUrl:\r\n          'https://emojis.slackmojis.com/emojis/images/1614621881/15861/apple_tongue.gif?1614621881',\r\n        customCategory: 'Gif',\r\n    },\r\n    {\r\n        name: ':among_us2:',\r\n        imageUrl:\r\n          'https://emojis.slackmojis.com/emojis/images/1605479278/11110/crewmate.gif?1605479278',\r\n        customCategory: 'Gif',\r\n    }, \r\n    {\r\n        name: ':among_us:',\r\n        imageUrl:\r\n          'https://emojis.slackmojis.com/emojis/images/1605722420/11386/among_us_orange_dance.gif?1605722420',\r\n        customCategory: 'Gif',\r\n    },\r\n    // {\r\n    //     name: ':venting:',\r\n    //     imageUrl:\r\n    //       'https://emojis.slackmojis.com/emojis/images/1613270186/12725/venting.gif?1613270186',\r\n    //     customCategory: 'Gif',\r\n    // },\r\n    {\r\n        name: ':space_float:',\r\n        imageUrl:\r\n          'https://emojis.slackmojis.com/emojis/images/1613270271/12726/space_float.gif?1613270271',\r\n        customCategory: 'Gif',\r\n    },\r\n    {\r\n        name: ':rage-poop:',\r\n        imageUrl:\r\n          'https://emojis.slackmojis.com/emojis/images/1526489538/3928/rage-poop.png?1526489538',\r\n        customCategory: 'Gif',\r\n    },\r\n    {\r\n        name: ':alert:',\r\n        imageUrl:\r\n          'https://emojis.slackmojis.com/emojis/images/1497901371/2453/alert.gif?1497901371',\r\n        customCategory: 'Gif',\r\n    },\r\n    // {\r\n    //     name: ':lol:',\r\n    //     imageUrl:\r\n    //       'https://emojis.slackmojis.com/emojis/images/1542340468/4973/lol.gif?1542340468',\r\n    //     customCategory: 'Gif',\r\n    // },\r\n]","import React, { useEffect,useState,useRef } from 'react';\r\nimport { stickers } from '../data/stickers'\r\nimport { FaRegSmile} from 'react-icons/fa'\r\n\r\nexport function TaskText({onEditTask,table,task,setUpdatingText}){\r\n    const [text, setText] = useState('');\r\n    const [isUpdating, setUpdateText] = useState(false);\r\n    const [isShowModal, setShowModal] = useState(false);\r\n    const inputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        if(task.text){\r\n            setText(task.text)\r\n        }\r\n    }, [task])\r\n\r\n    const onUpdating=()=>{\r\n        setUpdateText(true)\r\n        setUpdatingText(true)\r\n        setTimeout(() => {\r\n            inputRef.current.focus()\r\n           }, 0);\r\n    }\r\n\r\n    const replaceWithSticker=(sticker)=>{\r\n        let result = sticker\r\n        stickers.forEach((em) => {\r\n            let emoji=''\r\n            switch (em.customCategory) {\r\n                case 'FA':\r\n                    emoji = `<i class='${em.img} ${em.class}'></i>`\r\n                    break;\r\n                case 'Gif':\r\n                    emoji = `\r\n                    <img src=${em.imageUrl} className='gif-img'></img>\r\n                    ` \r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            let temp = ''\r\n            while (result !== temp) {\r\n              temp = result\r\n              const searchStr = em.name\r\n              result = result.replace(searchStr,emoji)\r\n            }\r\n        })\r\n        return result\r\n    }\r\n\r\n    return (\r\n        <div\r\n         className=\"task-text\" onClick={onUpdating}\r\n        //  tabIndex=\"0\"\r\n        //  onBlur={()=>setUpdateText(false)}\r\n         >\r\n            {isUpdating?\r\n                <div className=\"updating-container\">\r\n                    <input \r\n                    type=\"text\" \r\n                    onChange={(e)=>setText(e.target.value)} \r\n                    value={text}\r\n                    onBlur={()=>\r\n                        {\r\n                            const updatedTask = {\r\n                                ...task,\r\n                                text: text\r\n                            }\r\n                            onEditTask(table,updatedTask)\r\n                            setUpdateText(false)\r\n                            setShowModal(false)\r\n                            setUpdatingText(false)\r\n                        }\r\n                    }\r\n                    ref={inputRef}\r\n                    onKeyDown={(ev) => {\r\n                        if (ev.key === 'Enter') {\r\n                            ev.target.blur()\r\n                        }\r\n                    }}\r\n                    />\r\n                    <span className={`${isShowModal?'active':''}`}>\r\n                        <FaRegSmile onClick={()=>setShowModal(curr=>!curr)}/>\r\n                        {\r\n                            isShowModal&&<div className='modal-default-style text-modal'>\r\n                                {stickers.map(sticker=>\r\n                                    <span \r\n                                    onClick={()=>setText(curr=>curr+' '+sticker.name)}> \r\n                                    {\r\n                                        sticker.customCategory==='FA'?\r\n                                        <i class={`${sticker.img} ${sticker.class} gif-img`}></i>\r\n                                        :\r\n                                        <img src={`${sticker.imageUrl}`} className='gif-img' alt=''></img>\r\n                                    }\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                        }\r\n                    </span>\r\n                </div>\r\n                    :\r\n                <div className=\"text-content\">\r\n                     <span className=\"dangerouslySetInnerHTML\" dangerouslySetInnerHTML={{__html: replaceWithSticker(text),}}></span>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState } from 'react';\r\nimport { FaCheck} from 'react-icons/fa'\r\n\r\nexport function TaskCheckBox({onEditTask,table,task}){\r\n    const [check, setCheck] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(task.checkBox){\r\n            setCheck(task.checkBox)\r\n        }\r\n    }, [task])\r\n\r\n    const toggleCheck=(val)=>{\r\n        setCheck(val)\r\n        const updatedTask = {\r\n            ...task,\r\n            checkBox: val\r\n        }\r\n        onEditTask(table,updatedTask)\r\n    }\r\n    return (\r\n        <div \r\n        className=\"task-check-box\"  \r\n        onClick={()=>toggleCheck(!check)}>\r\n            {\r\n            task.checkBox?\r\n            <FaCheck className=\"icon green\"/>\r\n            :''\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState,useRef } from 'react';\r\nimport {  IoChatbubbleOutline, } from 'react-icons/io5'\r\nimport { updateTaskConversation } from '../store/actions/workspaceActions'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport function TaskConversation({openConversationModal,task,table}) {\r\n    const [conversations,setConversations] = useState(task.conversations)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        setConversations(task.conversations)\r\n    }, [task])\r\n\r\n    return (\r\n        <>\r\n            <div className='task-conversation-wrapper'>\r\n                <IoChatbubbleOutline className=\"conversation-bubble\" \r\n                onClick={()=>{\r\n                    dispatch(updateTaskConversation(\r\n                        {\r\n                            taskId:task._id,\r\n                            tableId:table._id\r\n                        }\r\n                    ))\r\n                    openConversationModal()\r\n                }}\r\n                 />\r\n                {conversations.length>0&&<div className=\"conversations-count\">\r\n                    {conversations.length}\r\n                 </div>}\r\n                <span className=\"label-text arrow-down\">Start conversation</span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect,useState,useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadUsers } from '../store/actions/userActions'\r\n\r\nexport function OwnerModal({\r\n    task,\r\n    table,\r\n    onEditTask,\r\n}){\r\n    const dispatch = useDispatch();\r\n    const users = useSelector(state => state.user.users);\r\n    const [owners, setOwners] = useState(null);\r\n    const [newUsers, setNewUsers] = useState(null);\r\n    const [search, setSearch] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUsers())\r\n    }, [dispatch])    \r\n\r\n    function mapOrder (array, order, key) {\r\n        array.sort( function (a, b) {\r\n          var A = a[key], B = b[key];\r\n          if (order.indexOf(A) > order.indexOf(B)) {\r\n            return 1;\r\n          } else {\r\n            return -1;\r\n          }\r\n        });\r\n        return array;\r\n    };\r\n    \r\n    useEffect(() => {\r\n        //sorted by the task.owner order!\r\n        const itemsArray = users.filter(user=>\r\n            task.owner.includes(user._id)\r\n        )\r\n        const itemOrder = [...task.owner]\r\n        const orderedArray = mapOrder(itemsArray, itemOrder, '_id');\r\n\r\n        setOwners(orderedArray)\r\n    }, [task,users])    \r\n    \r\n    useEffect(() => {\r\n            if(owners){\r\n                const IdList = []\r\n                owners.map(owner=>\r\n                    IdList.push(owner._id)\r\n                )\r\n                setNewUsers(\r\n                    users.filter(user=>\r\n                        !IdList.includes(user._id)\r\n                    )\r\n                )\r\n            }\r\n    }, [users,owners])\r\n\r\n    const updateTaskOwner=(userId)=>{\r\n        const updatedTask = {\r\n            ...task,\r\n            owner:[...task.owner,userId]\r\n        }\r\n        onEditTask(table,updatedTask)\r\n        // setToggleOwnerModal(false)\r\n    }\r\n    const removeOwner=(userId)=>{\r\n        const updatedTask = {\r\n            ...task,\r\n            owner:task.owner.filter(id=>id!==userId),\r\n        }\r\n        onEditTask(table,updatedTask)\r\n    }\r\nconst getUserName=(name)=>{\r\n    let content  = []\r\n    for (var i = 0; i < name.length; i++) {\r\n        content.push(\r\n            <span className={`${search.toLowerCase().includes(name[i].toLowerCase())?'bold':''}`}>{name[i]}</span>\r\n        )\r\n    }\r\n    return content\r\n}\r\nfunction getLine(){\r\n    let content  = []\r\n    for (let i = 0; i < 12; i++) {\r\n        content.push(\r\n            <span className=\"title-line\">\r\n               -\r\n            </span>\r\n        )\r\n    }\r\n    return content\r\n}\r\n    return (\r\n       <>\r\n            <div className=\"owners-container\">\r\n            {owners&&owners.map(owner=>\r\n                 <div className=\"owner-details\">\r\n                    <img className=\"user-img\" src={`${owner.avatar}`} alt=\"\" srcset=\"\"/>\r\n                    <span className=\"user-name\">{owner.username}</span>\r\n                    <span className=\"remove-user\"\r\n                    onClick={()=>removeOwner(owner._id)}\r\n                    >x</span>\r\n                 </div>\r\n            )}\r\n            </div>\r\n            <input type=\"text\" placeholder='Enter name'\r\n            className=\"owner-modal-input\"\r\n            onChange={(e)=>setSearch(e.target.value)}\r\n            /> \r\n            <div className=\"title\">\r\n                {getLine()}\r\n               <span className=\"title-contant\"> People </span>\r\n                {getLine()}\r\n            </div>\r\n            {newUsers&&newUsers.map(user=>\r\n            user.username.toLowerCase().includes(search.toLowerCase())?\r\n                <div className=\"user-details\" onClick={()=>updateTaskOwner(user._id)}>\r\n                    <img className=\"user-img\" src={`${user.avatar}`} alt=\"\" srcset=\"\"/>\r\n                    <span className=\"user-name\">\r\n                       { getUserName(user.username)}\r\n                    </span>\r\n                </div>\r\n                :\r\n                null\r\n            )}\r\n          {/* <div>Teames</div> */}\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useEffect,useState,useRef } from 'react';\r\nimport { FaRegUserCircle,FaPencilAlt } from 'react-icons/fa'\r\nimport { TiArrowSortedDown } from 'react-icons/ti'\r\nimport { TaskStatus } from \"./TaskStatus\";\r\nimport { TaskText } from \"./TaskText\";\r\nimport { TaskCheckBox } from \"./TaskCheckBox\";\r\nimport { TaskConversation } from \"./TaskConversation\";\r\nimport { OwnerModal } from \"./OwnerModal\";\r\nimport { BsTrashFill ,BsPlusCircleFill} from 'react-icons/bs'\r\nimport { GoCheck} from 'react-icons/go'\r\nimport { addCheckedTasks,removeCheckedTasks} from '../store/actions/workspaceActions'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport { updateTaskConversation } from '../store/actions/workspaceActions'\r\n\r\n\r\nexport function Task({\r\n    task,\r\n    taskKeys, \r\n    table, \r\n    board,\r\n    onEditBoard,\r\n    provided,\r\n    isDragging,\r\n    openConversationModal,\r\n    onEditTable,\r\n    onEditTask,\r\n    unCheckTasks\r\n}){\r\n    const users = useSelector(state => state.user.users);\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const checkedTasks = useSelector(state => state.workspace.checkedTasks)\r\n    const [currTask, setTask] = useState(task);\r\n    const [isShowOptionsModal, setIsShowOptionsModal] = useState(false);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [isOwnerModalShown, setToggleOwnerModal] = useState(false);\r\n    const [isUpdatingText, setUpdatingText] = useState(false);\r\n    const [newDate, setNewDate] = useState(new Date().getTime());\r\n    const [timePassString, setTimePassString] = useState('');\r\n    const [isChecked, setCheckTask] = useState(false);\r\n    const [owners, setOwners] = useState(task.owner);\r\n    const editableTaskName = useRef()\r\n    const btnEl = useRef()\r\n    const modalEl = useRef(null)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUsers())\r\n    }, [dispatch])   \r\n    \r\n    function mapOrder (array, order, key) {\r\n        array.sort( function (a, b) {\r\n          var A = a[key], B = b[key];\r\n          if (order.indexOf(A) > order.indexOf(B)) {\r\n            return 1;\r\n          } else {\r\n            return -1;\r\n          }\r\n        });\r\n        return array;\r\n    };\r\n\r\n    useEffect(() => {\r\n        //sorted by the task.owner order!\r\n        const itemsArray = users.filter(user=>\r\n            task.owner.includes(user._id)\r\n        )\r\n        const itemOrder = [...task.owner]\r\n        const orderedArray = mapOrder(itemsArray, itemOrder, '_id');\r\n\r\n        setOwners(orderedArray)\r\n    }, [task,users,loggedInUser])\r\n\r\n    useEffect(() => {\r\n        const currCheckedTask = {\r\n            _id:task._id,\r\n            table:table\r\n        }\r\n        if(isChecked){\r\n            dispatch(addCheckedTasks(currCheckedTask))\r\n        }else{\r\n            dispatch(removeCheckedTasks(task._id))\r\n        }\r\n    }, [isChecked,dispatch,task._id,table])\r\n\r\n    useEffect(() => {\r\n        if(unCheckTasks){\r\n            setCheckTask(false)\r\n        }\r\n    }, [unCheckTasks])\r\n   \r\n\r\n    useEffect(() => {\r\n       setTask(task)\r\n    }, [task]) \r\n    \r\n    useEffect(() => {\r\n       if(isShowOptionsModal){\r\n       setTimeout(() => {\r\n        btnEl.current.focus()\r\n       }, 0);\r\n       }\r\n    }, [isShowOptionsModal])\r\n    \r\n     \r\n    useEffect(() => {\r\n       if(isUpdating){\r\n        setTask(task)\r\n        editableTaskName.current.focus()\r\n       }\r\n     }, [isUpdating,task])   \r\n\r\n    const focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    const handleChangeName = (ev) => {\r\n        setTask({\r\n            ...currTask,\r\n            name: ev.target.value \r\n        })\r\n    }\r\n    const onOpenModal =()=>{\r\n        // setToggleOwnerModal(true)\r\n        setToggleOwnerModal(curr=>!curr)\r\n        if(modalEl.current){\r\n            modalEl.current.focus()\r\n        }\r\n    }\r\n\r\n    const getTaskValue=(taskKey)=>{\r\n        let content = [];\r\n        switch(taskKey) {\r\n            case 'name':\r\n                content.push(\r\n                <React.Fragment>\r\n                    <div className=\"task-name-wrapper\">\r\n                        <span className={`task-name-span ${ isUpdating?'task-name-span-updating':''}`}>\r\n                        { isUpdating?\r\n                            <input \r\n                            className=\"task-name\"\r\n                            onFocus={focusText}\r\n                            type=\"text\" \r\n                            name=\"name\" \r\n                            ref={editableTaskName} \r\n                            value={currTask[taskKey]} \r\n                            onChange={handleChangeName}\r\n                            onBlur={() => {\r\n                                // if (task[taskKey] === currTask[taskKey]) return\r\n                                // const desc = `${loggedUser.fullName} Changed the task name from ${task[taskKey]} to ${currTask.name}`\r\n                                const updatedTask = {\r\n                                    ...task,\r\n                                    name: currTask.name\r\n                                }\r\n                                onEditTask(table,updatedTask)\r\n                                setIsUpdating(false)\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                }\r\n                            }}\r\n                            />:\r\n                            <span \r\n                            onClick={()=>{\r\n                                dispatch(updateTaskConversation(\r\n                                    {\r\n                                        taskId:task._id,\r\n                                        tableId:table._id\r\n                                    }\r\n                                ))\r\n                                openConversationModal()\r\n                            }}\r\n                            >{task[taskKey]}</span>\r\n                        }\r\n                        </span>\r\n                        <FaPencilAlt className=\"FaPencilAlt\" onClick={() => {\r\n                            setIsUpdating(true)\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <TaskConversation \r\n                    table={table}\r\n                    task={task}\r\n                    openConversationModal={openConversationModal}\r\n\r\n                    />\r\n                </React.Fragment>\r\n                );\r\n                break; \r\n            case 'owner':\r\n                content.push(\r\n                    <div className={`add-owner-btn-wrapper ${task[taskKey].length>0?'add-more':'add-first'}`}\r\n                    >\r\n                        <BsPlusCircleFill className={`add-owner ${isOwnerModalShown?'active':''}`}\r\n                        //    onClick={()=>onOpenModal()}\r\n                        /> \r\n                       { isOwnerModalShown&&\r\n                        <div className='modal-default-style owner-modal'\r\n                        ref={modalEl}\r\n                        tabIndex=\"0\"\r\n                        // onClick={()=> modalEl.current.focus()}\r\n                        onBlur={()=>setToggleOwnerModal(false)}\r\n                        >\r\n                            <OwnerModal\r\n                            task={task} \r\n                            onEditTask={onEditTask} \r\n                            table={table}\r\n                            setToggleOwnerModal={setToggleOwnerModal}\r\n                            />\r\n                        </div>}\r\n                    </div>\r\n                )\r\n                if(task[taskKey].length>0&&owners.length>0){\r\n                    // const owner = task[taskKey][0]\r\n                    content.push(\r\n                        <div className=\"owner-container\">\r\n                            <div className=\"owner-avatar-wrapper\">\r\n                                <img src={`${owners[0].avatar}`} alt=\"\"/>\r\n                            </div>\r\n                            {\r\n                                task[taskKey].length>1?\r\n                                <div className=\"owners-count\">\r\n                                    +{task[taskKey].length-1}\r\n                                </div>:\r\n                                null\r\n                            }\r\n                         </div>\r\n                    )\r\n                }else{\r\n                    content.push(\r\n                        <FaRegUserCircle style={{ width: '30px', height: '30px', color:\"rgb(180, 182, 188)\" }}/>\r\n                    )\r\n                }\r\n                break;\r\n            case 'createdAt':\r\n                if(!task[taskKey]){\r\n                    content.push(\r\n                        \"Jan 22\"\r\n                    )\r\n                }else{\r\n                    var date = new Date(task[taskKey]);\r\n                    var month = date.getMonth()+1;\r\n                    var day = date.getDate();      \r\n                    content.push(\r\n                        <React.Fragment>\r\n                            <span className=\"month\">{getMonthName(month)}</span>\r\n                            <span className=\"day\">{day}</span>\r\n                        </React.Fragment>\r\n                    );\r\n                }\r\n                break;\r\n            case 'text':\r\n                content.push(\r\n                    <TaskText onEditTask={onEditTask} task={task} table={table} setUpdatingText={setUpdatingText}/>\r\n                ) \r\n                break;\r\n            case 'checkBox':\r\n                content.push(\r\n                    <TaskCheckBox onEditTask={onEditTask} task={task} table={table} />\r\n                ) \r\n                break;\r\n            case 'lastUpdated':\r\n                if(task[taskKey]){\r\n                    // const string  = getTimePass()\r\n                    // setTimePassString(string)\r\n                    content.push(\r\n                        <div className=\"last-updated-task-container\">\r\n                            {timePassString}\r\n                        </div>\r\n                    ) \r\n                }\r\n                break;\r\n            default:\r\n                content.push(task[taskKey]);\r\n                break;\r\n        }                                \r\n        return content;\r\n    }\r\n\r\n    function getMonthName(month){\r\n        switch(month) {\r\n            case 1:\r\n              return 'Jan';\r\n            case 2:\r\n              return 'Feb';\r\n            case 3:\r\n              return 'Mar';\r\n            case 4:\r\n              return 'Apr';\r\n            case 5:\r\n              return 'May';\r\n            case 6:\r\n              return 'June';\r\n            case 7:\r\n              return 'July';\r\n            case 8:\r\n              return 'Aug';\r\n            case 9:\r\n              return 'Sept';\r\n            case 10:\r\n              return 'Oct';\r\n            case 11:\r\n              return 'Nov';\r\n            case 12:\r\n              return 'Dec';\r\n            default:\r\n              return 'foo';\r\n        }\r\n    }\r\n\r\n    const getColumnStyle=(val)=>{\r\n        switch (val) {\r\n            case 'text':\r\n                return 'text-style'\r\n            case 'checkBox':\r\n                return 'checkBox-style'\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    const removeTask=(currTask)=>{\r\n        const newTable = {\r\n            ...table,\r\n            tasks:table.tasks.filter(task=>task._id!==currTask._id)\r\n        }\r\n        onEditTable(newTable)\r\n        setIsShowOptionsModal(false)\r\n    }\r\n\r\n        if (!task) return <div>Loading....</div>\r\n        return (\r\n <div className={`table-row-wrapper ${isDragging?'task-dragging':''}`} ref={provided.innerRef} {...provided.draggableProps}  {...provided.dragHandleProps}>\r\n            <div\r\n                className=\"options-wrapper\"  \r\n            >\r\n                <div className={`options-btn ${isShowOptionsModal?'options-btn-visible':''}`} onClick={()=>setIsShowOptionsModal(true)} \r\n                tabIndex=\"0\"\r\n                ref={btnEl} \r\n                 onBlur={()=>setIsShowOptionsModal(false)\r\n                }\r\n                >\r\n                    <div className=\"TiArrowSortedDown-wrapper   TiArrowSortedDown-task-wrapper\">\r\n                        <TiArrowSortedDown/>\r\n                    </div>\r\n                    { \r\n                isShowOptionsModal&&\r\n                    <div className=\"options-modal task-options-modal\" >\r\n                        <div className='modal-btn item-actions-btn' >\r\n                            <FaPencilAlt className=\"icon\"/>\r\n                            <span onClick={() => {\r\n                                setIsUpdating(true)\r\n                                setIsShowOptionsModal(false)\r\n                            }}>Rename Item</span>\r\n                        </div>\r\n                        <div className='delete-btn-wrapper'>\r\n                            <div className='modal-btn item-actions-btn' onClick={()=>removeTask(task)}>\r\n                                <BsTrashFill className=\"icon\"/>\r\n                                <span>Delete</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                </div>\r\n            </div>\r\n            <div className=\"table-row task-row\" >\r\n                {taskKeys.map((taskKey)=>\r\n                    taskKey===\"status\"?\r\n                    <TaskStatus taskKey={taskKey} task={task} table={table} FaPencilAlt={FaPencilAlt} onEditTask={onEditTask} board={board} onEditBoard={onEditBoard}/>\r\n\r\n                    :\r\n                    <div className={`table-cell task-cell ${getColumnStyle(taskKey)} ${isUpdatingText?'updating-text':''}`}\r\n                    onClick={()=>\r\n                        {if(taskKey!=='owner') return\r\n                        onOpenModal()}}\r\n                    >\r\n                        <div className={`decoration-line task-line ${checkedTasks.length>0?'open':''}`} style={{backgroundColor:`${table.color}`}}>\r\n                            <div className={`task-line-square ${isChecked?'checked':''}`} onClick={()=>setCheckTask(curr=>!curr)}>\r\n                               { isChecked&&<GoCheck style={{color:`${table.color}`}}/>}\r\n                            </div>\r\n                        </div>\r\n                        <div className={`cell-content-wrapper ${taskKey==='name'?'name-wrapper-cell':''}`}\r\n                        >\r\n                            {getTaskValue(taskKey)}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div className='table-cell task-cell'></div>\r\n            </div>\r\n        </div>\r\n        )\r\n}","import React, { Component } from 'react'\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { BiGridVertical } from 'react-icons/bi'\r\nimport { CgExpand } from 'react-icons/cg'\r\nimport { AiOutlineShrink } from 'react-icons/ai'\r\n\r\nexport class TableColumnPreview extends Component {\r\n    state={\r\n        table:{},\r\n        board:{},\r\n        currTableColumn:{},\r\n        isDivOnFocus:false\r\n    }\r\n    componentDidMount(){\r\n        this.setState({table:this.props.table})\r\n        this.setState({board:this.props.board})\r\n        this.setState({currTableColumn:this.props.tableColumn})\r\n        this.editableGroupName = React.createRef();\r\n        this.editableGroupTitle = React.createRef();\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.currTableColumn.title !== this.state.currTableColumn.title) {\r\n            this.setState({board:this.props.board})\r\n        }\r\n        if (prevProps.tableColumn.title !== this.props.tableColumn.title) {\r\n            this.setState({board:this.props.board})\r\n        }\r\n        if(prevProps.board !== this.props.board){\r\n            this.setState({          \r\n                board: this.props.board\r\n            });\r\n            this.setState({currTableColumn:this.props.tableColumn})\r\n        }\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n \r\n    handleChangeGroupName = (ev) => {\r\n        this.setState({ table: { ...this.state.table, name: ev.target.value } })\r\n    }\r\n    handleChangeGroupTitle=(ev)=>{\r\n        this.setState({ currTableColumn : {...this.props.tableColumn, title:ev.target.value} },()=>{\r\n            this.setState({ board: { ...this.props.board, tableColumns:\r\n                this.props.board.tableColumns.map(tableColumn=>\r\n                    tableColumn._id===this.state.currTableColumn._id?\r\n                    this.state.currTableColumn:tableColumn\r\n                )\r\n            } })\r\n        })\r\n    }\r\n    toggleFocusOnDiv=(bool)=>{\r\n        this.setState({isDivOnFocus:bool})\r\n    }\r\n    changeToContentEditable=(value)=>{\r\n        const {dragHandle} = this.props\r\n            let content = [];\r\n            if(value.taskKey==='name'){\r\n                content.push(\r\n                    <div \r\n                    className={`${this.props.isOpenTableColorModal?'':'table-name-wrapper'}`}\r\n                    tabIndex='0' \r\n                    onClick={()=> this.toggleFocusOnDiv(true)} \r\n                    onBlur={()=>\r\n                        {\r\n                        this.toggleFocusOnDiv(false)\r\n                        this.props.closeTableColorModal()\r\n                        }   \r\n                    }  \r\n                    >\r\n\r\n                        <div className=\"table-actions\">\r\n                            {!this.props.isExpand?<CgExpand className=\"expand-btn\" onClick={()=>this.props.toggleExpandeTable(true)}/>:\r\n                            <AiOutlineShrink className=\"shrink-btn\" onClick={()=>this.props.toggleExpandeTable(false)}/> }\r\n                            <div  className=\"drag-btn\"  {...dragHandle.dragHandleProps}>\r\n                            <BiGridVertical/>\r\n                            </div>\r\n                        </div>\r\n                        <ContentEditable\r\n                        onFocus={this.focusText}\r\n                        className={`content-editable ${this.props.isOpenTableColorModal?'focus':''}`}\r\n                        innerRef={this.editableGroupName}\r\n                        html={this.state.table.name}\r\n                        disabled={false}  \r\n                        onChange={this.handleChangeGroupName}\r\n                        onBlur={() => {\r\n                            if (this.props.table.name === this.state.table.name) return\r\n                            // const desc = `${loggedUser.fullName} Changed the task name from ${task[taskKey]} to ${this.state.task.name}`\r\n                            const updatedTable = {\r\n                                ...this.props.table,\r\n                                name: this.state.table.name\r\n                            }\r\n                            this.props.onEditTable(updatedTable)\r\n                        }}\r\n                        onKeyDown={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                ev.target.blur()\r\n                            }\r\n                        }}\r\n                        />\r\n                    </div>\r\n                )\r\n            }else{\r\n                content.push(\r\n                    <ContentEditable\r\n                        onFocus={this.focusText}\r\n                        className='content-editable'\r\n                        innerRef={this.editableGroupTitle}\r\n                        html={this.state.currTableColumn.title}\r\n                        disabled={false}  \r\n                        onChange={this.handleChangeGroupTitle}\r\n                        onBlur={() => {\r\n                             if (this.props.tableColumn.title === this.state.currTableColumn.title) return\r\n                            // const desc = `${loggedUser.fullName} Changed the task name from ${task[taskKey]} to ${this.state.task.name}`\r\n                            const updatedBoard = {\r\n                                ...this.props.board,\r\n                                tableColumns: [...this.state.board.tableColumns]\r\n                            }\r\n                            this.props.onEditBoard(updatedBoard)\r\n                        }}\r\n                        onKeyDown={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                ev.target.blur()\r\n                            }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n            \r\n            return content;\r\n    }\r\n\r\n    render() {\r\n        const { board, tableColumn, table, IoMdNotifications } = this.props\r\n        if (!tableColumn) return <div>Loading....</div>\r\n        return (\r\n            <div key={tableColumn._id} className={`table-cell title-cell ${tableColumn.taskKey===\"checkBox\"?'checkBox-title':''}`} style={{color:`${table.color}` }}>\r\n                {tableColumn.taskKey===\"createdAt\"?\r\n                    <React.Fragment>\r\n                        <IoMdNotifications style={{ width: '18px', height: '18px' }}/>\r\n                        <span>{this.changeToContentEditable(tableColumn)}</span>\r\n                        {/* <span>{tableColumn.title}</span> */}\r\n                    </React.Fragment>\r\n                    :\r\n                    this.changeToContentEditable(tableColumn)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useEffect,useState,useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Task } from \"./Task\";\r\nimport { TableColumnPreview } from \"./TableColumnPreview\";\r\nimport { TiArrowSortedDown } from 'react-icons/ti'\r\nimport { VscTrash } from 'react-icons/vsc'\r\nimport { FaPencilAlt } from 'react-icons/fa'\r\nimport {BsCircleFill,BsTrashFill } from 'react-icons/bs'\r\nimport { DragDropContext,Droppable ,Draggable   } from 'react-beautiful-dnd';\r\nimport { BiGridVertical } from 'react-icons/bi'\r\nimport { CgExpand } from 'react-icons/cg'\r\nimport { AiOutlineShrink } from 'react-icons/ai'\r\nimport { GoThreeBars } from 'react-icons/go'\r\nimport { IoTextSharp } from 'react-icons/io5'\r\nimport { BsPeopleCircle,BsBoxArrowDown } from 'react-icons/bs'\r\nimport { MdDateRange } from 'react-icons/md'\r\nimport { TiSortNumerically } from 'react-icons/ti'\r\nimport { FcTimeline } from 'react-icons/fc'\r\nimport { HiHashtag } from 'react-icons/hi'\r\nimport { MdUpdate } from 'react-icons/md'\r\nimport { IoMdCheckboxOutline } from 'react-icons/io'\r\nimport {colorsPicker} from '../data/colorPicker'\r\nimport { loadUsers } from '../store/actions/userActions'\r\n\r\nexport function TablePreview({\r\n    // board,\r\n    taskKeys,\r\n    table,\r\n    IoMdNotifications,\r\n    HiPlusCircle,\r\n    onAddNewTask,\r\n    onEditTask,\r\n    onEditTable,\r\n    onEditBoard,\r\n    onRemoveTask,\r\n    removeTable,\r\n    openConversationModal,\r\n    dragHandle,\r\n    isDragging,\r\n    isShrink,\r\n    onShrink,\r\n    search,\r\n    unCheckTasks,\r\n    provided\r\n}){\r\n    // const [tableColumns, setTableColumns] = useState(board.tableColumns);\r\n    const users = useSelector(state => state.user.users);\r\n    const board = useSelector(state => state.workspace.currBoard);\r\n    const [newTaskName, setNewTaskName] = useState('');\r\n    const [isInputBtnVisable, setIsInputBtnVisable] = useState(false);\r\n    const [isShowTableOptionsModal, setIsShowTableOptionsModal] = useState(false);\r\n    const [isHover, setIsHover] = useState(false);\r\n    const [isOpenTableColorModal, setIsOpenTableColorModal] = useState(false);\r\n    const [tableCopy, setTableCopy] = useState(table);\r\n    const [isExpand, setExpandTable] = useState(true);\r\n    const [allOwners, setAllOwners] = useState([]);\r\n    const [allTablestatuses, setAllTablestatuses] = useState({});\r\n    const [statusTitles , setStatusTitles] = useState([]);\r\n    const [statusesSum , setStatusesSum] = useState([]);\r\n    const colorModal = useRef(null)\r\n    const [isShowAddColumnModal, setToggleAddColumnModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUsers())\r\n    }, [dispatch])    \r\n    \r\n\r\n    useEffect(() => {\r\n        let idList = []\r\n        table.tasks.map(task=>    \r\n            idList=[...idList,  ...task.owner]    \r\n        )\r\n        const uniqIdList = [...new Set(idList)];\r\n        setAllOwners(\r\n            users.filter(user=>\r\n                uniqIdList.includes(user._id)\r\n            )\r\n        )\r\n    }, [table,table.tasks,newTaskName,users]) \r\n\r\n\r\n     useEffect(() => {\r\n        let list = []\r\n        let statusesNameInUse = []\r\n        table.tasks.map((task,idx)=>\r\n            {list= [...list,task.status]\r\n            statusesNameInUse = [...statusesNameInUse,task.status.name]}\r\n        )   \r\n        const sortedList = list.sort((a, b) => a.name.localeCompare(b.name)) \r\n        setStatusesSum( list.length)\r\n        //string of the exisiting used statuses names in the table\r\n        //sorted\r\n        const sortedStatusesNameInUse = statusesNameInUse.sort((a, b) => a.localeCompare(b)) \r\n        const uniq = [...new Set(sortedStatusesNameInUse)];\r\n       setStatusTitles(uniq)\r\n        //[\"\", \"Done\", \"To do\"]\r\n        let tablestatuses = {}\r\n        uniq.map(title=>\r\n            tablestatuses[`${title}`]={\r\n                num:sortedList.filter(status=>status.name===title).length,\r\n                color:sortedList.filter(status=>status.name===title)[0].color\r\n            }\r\n        )\r\n        setAllTablestatuses(tablestatuses)\r\n        // setAllTablestatuses([...sortedList])\r\n    }, [table,table.tasks])    \r\n\r\n     useEffect(() => {\r\n        setTableCopy(table)\r\n    }, [table])    \r\n    \r\n    useEffect(() => {\r\n        setExpandTable(!isShrink)\r\n    }, [isShrink])    \r\n    \r\n    useEffect(() => {\r\n        onShrink(isDragging)\r\n    }, [isDragging,onShrink]) \r\n\r\n    const toggleExpandeTable=(value)=>{\r\n        setExpandTable(value)\r\n    }\r\n\r\n    const handleChange=(ev)=>{\r\n        setNewTaskName(ev.target.value)\r\n    }\r\n    const onShowBtn=(ev)=>{\r\n        setIsInputBtnVisable(true)\r\n    }   \r\n    const onHideBtn=()=>{\r\n        setIsInputBtnVisable(false)\r\n        cleanInput()\r\n    }\r\n    const cleanInput=()=>{\r\n        setNewTaskName('')\r\n    }\r\n    \r\n    const addNewTaskKeyUp=(ev,currTable,newTaskName)=>{\r\n        if (ev.keyCode === 13) {\r\n            ev.preventDefault();\r\n            onAddNewTask(currTable,newTaskName)\r\n            setNewTaskName('')\r\n        }\r\n    }\r\n\r\n    const onRemoveTable=(tableId)=>{\r\n        removeTable(tableId)\r\n        setIsShowTableOptionsModal(false)\r\n        //*add message popup\r\n    }   \r\n    \r\n    const toggleHover=()=>{\r\n        setIsHover(curr=>!curr)\r\n    }     \r\n    const updateTableColor=(color)=>{\r\n        const updatedTable = {\r\n            ...table,\r\n            color\r\n        }\r\n        onEditTable(updatedTable)\r\n        setIsOpenTableColorModal(false)\r\n    } \r\n    const onOpenTableColorModal=()=>{\r\n        setIsOpenTableColorModal(true)\r\n        setIsShowTableOptionsModal(false)\r\n    }\r\n    useEffect(() => {\r\n        if (isOpenTableColorModal) {\r\n            colorModal.current.focus();\r\n          }\r\n    }, [isOpenTableColorModal])\r\n    \r\n    const closeTableColorModal=()=>{\r\n        setIsOpenTableColorModal(false)\r\n    }\r\n    const handleDragEnd=({destination, source})=>{\r\n        if(!destination){\r\n            // \"not dropped in droppable\"\r\n            return\r\n        }\r\n        if(destination.index===source.index&&destination.draggableId===source.draggableId){\r\n            //\"dropped in same place\"\r\n            return\r\n        }\r\n        const itemCopy = {...table.tasks[source.index]}\r\n        setTableCopy(prev=>{\r\n            prev = {...prev}\r\n            prev.tasks.splice(source.index,1);\r\n            prev.tasks.splice(destination.index, 0, itemCopy);\r\n            return prev\r\n        })\r\n        onEditTable(tableCopy)\r\n    }\r\n    function addColumn(type){\r\n        let newColumn = {}\r\n        let updatedBoard = {}\r\n        switch (type) {\r\n            case 'People':\r\n                newColumn = {\r\n                    _id:Date.now(),\r\n                    title:'People',\r\n                    type:'People',\r\n                    taskKey:'owner'\r\n                }\r\n                updatedBoard = {\r\n                    ...board,\r\n                    tableColumns: [...board.tableColumns,newColumn]\r\n                }\r\n                onEditBoard(updatedBoard)\r\n                break;\r\n            case 'Status':\r\n                newColumn = {\r\n                    _id:Date.now(),\r\n                    title:'Status',\r\n                    type:'Status',\r\n                    taskKey:'status'\r\n                }\r\n                updatedBoard = {\r\n                    ...board,\r\n                    tableColumns: [...board.tableColumns,newColumn]\r\n                }\r\n                onEditBoard(updatedBoard)\r\n                break;\r\n            case 'Date':\r\n                newColumn = {\r\n                    _id:Date.now(),\r\n                    title:'Date',\r\n                    type:'Date',\r\n                    taskKey:'createdAt'\r\n                }\r\n                updatedBoard = {\r\n                    ...board,\r\n                    tableColumns: [...board.tableColumns,newColumn]\r\n                }\r\n                onEditBoard(updatedBoard)\r\n                break;\r\n            case 'Text':\r\n                newColumn = {\r\n                    _id:Date.now(),\r\n                    title:'Text',\r\n                    type:'Text',\r\n                    taskKey:'text'\r\n                }\r\n                updatedBoard = {\r\n                    ...board,\r\n                    tableColumns: [...board.tableColumns,newColumn]\r\n                }\r\n                onEditBoard(updatedBoard)\r\n                break;\r\n            case 'CheckBox':\r\n                newColumn = {\r\n                    _id:Date.now(),\r\n                    title:'Check Box',\r\n                    type:'CheckBox',\r\n                    taskKey:'checkBox'\r\n                }\r\n                updatedBoard = {\r\n                    ...board,\r\n                    tableColumns: [...board.tableColumns,newColumn]\r\n                }\r\n                onEditBoard(updatedBoard)\r\n                break;\r\n            case 'LastUpdated':\r\n                newColumn = {\r\n                    _id:Date.now(),\r\n                    title:'Last Updated',\r\n                    type:'LastUpdated',\r\n                    taskKey:'lastUpdated'\r\n                }\r\n                updatedBoard = {\r\n                    ...board,\r\n                    tableColumns: [...board.tableColumns,newColumn]\r\n                }\r\n                onEditBoard(updatedBoard)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setToggleAddColumnModal(false)\r\n    }\r\n\r\n\r\n    if (!table||!board) return <div>Loading....</div>\r\n    return (\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n                   { isExpand?<div className=\"table\" key={table._id}>\r\n                    <div \r\n                        className=\"title-row-wrapper\" \r\n                    >\r\n                        <div\r\n                            className=\"options-wrapper\"  \r\n                            tabIndex=\"0\" \r\n                            onBlur={()=>setIsShowTableOptionsModal(false)} \r\n                        >\r\n                            <div className=\"title-options-btn\" onMouseEnter={toggleHover} onMouseLeave={toggleHover}>\r\n                                <div className={`TiArrowSortedDown-wrapper TiArrowSortedDown-title-wrapper ${isShowTableOptionsModal?'active':''}`} \r\n                                style={isHover?{backgroundColor:`white`,borderColor:`${table.color}`}:{backgroundColor:`${table.color}`}}\r\n                                onClick={()=>setIsShowTableOptionsModal(curr=>!curr)}>\r\n                                    <TiArrowSortedDown className={`TiArrowSortedDown-title ${isShowTableOptionsModal?'active':''}`} style={isHover?{color:`${table.color}`}:{color:`white`}}/>\r\n                                </div>\r\n                            </div>\r\n                            {  \r\n                            isShowTableOptionsModal&&\r\n                                <div className=\"options-modal title-options-modal\">\r\n        \r\n                                    <div  className='modal-btn item-actions-btn'\r\n                                    >\r\n                                        <FaPencilAlt className=\"icon\"/>\r\n                                        <span>Rename Group-erorr</span>\r\n                                    </div>\r\n        \r\n                                    <div  className='modal-btn item-actions-btn'\r\n                                    onClick={onOpenTableColorModal}\r\n                                    >\r\n                                        <BsCircleFill \r\n                                        className=\"icon\"\r\n                                        style={{color:table.color}}\r\n                                        />\r\n                                        <span>Change Group Color</span>\r\n                                    </div>\r\n        \r\n                                    <div className='delete-btn-wrapper'>\r\n                                        <div className='modal-btn item-actions-btn' onClick={()=>{onRemoveTable(table._id)}}>\r\n                                            <BsTrashFill className=\"icon\"/>\r\n                                            <span>Delete</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {isOpenTableColorModal&&<div className=\"table-color-modal\" ref={colorModal} tabIndex='0' onBlur={()=>setIsOpenTableColorModal(false)}>\r\n                            <div className=\"first-section\">\r\n                                    <BsCircleFill \r\n                                        className=\"group-color\"\r\n                                        style={{color:table.color}}\r\n                                    />\r\n                            </div>\r\n                            <div  className=\"second-section\">\r\n                                {colorsPicker.map(color=>\r\n                                    <div className=\"color\" style={{backgroundColor:`${color}`}} onClick={()=>updateTableColor(color)}></div>\r\n                                )}\r\n                            </div>\r\n                        </div>}\r\n                        <div className=\"table-row title-row\">\r\n                            {\r\n                                board.tableColumns.map(tableColumn=>\r\n                                    <TableColumnPreview \r\n                                        board={board} \r\n                                        tableColumn={tableColumn} \r\n                                        table={table} \r\n                                        IoMdNotifications={IoMdNotifications} \r\n                                        onEditTable={onEditTable} \r\n                                        onEditBoard={onEditBoard}\r\n                                        isOpenTableColorModal={isOpenTableColorModal}\r\n                                        closeTableColorModal={closeTableColorModal}\r\n                                        toggleExpandeTable={toggleExpandeTable}\r\n                                        isExpand={isExpand}\r\n                                        dragHandle={dragHandle}\r\n                                    />\r\n                                ) \r\n                            }\r\n                                    <div className=\"table-cell title-cell\"\r\n                                     tabIndex=\"0\"\r\n                                     onBlur={()=>{\r\n                                         setToggleAddColumnModal(false)\r\n                                     }}\r\n                                    >\r\n                                        <HiPlusCircle \r\n                                        className=\"add-column-btn\"\r\n                                        onClick={()=>{\r\n                                            setToggleAddColumnModal(curr=>!curr)\r\n                                        }}\r\n                                        />\r\n                                        {isShowAddColumnModal&&<div className='modal-default-style new-column-modal'\r\n                                        >\r\n                                           <div className=\"title\">Essentials</div>\r\n                                           <div className='column-types-container'>\r\n                                                <div onClick={()=>addColumn('Status')}>\r\n                                                    <GoThreeBars className=\"icon\"/>\r\n                                                    <span>Status</span>\r\n                                                </div>\r\n                                                <div onClick={()=>addColumn('Dropdown')}>\r\n                                                    <BsBoxArrowDown className=\"icon\"/>\r\n                                                    <span>Dropdown</span>\r\n                                                </div>\r\n                                                <div onClick={()=>addColumn('Text')}>\r\n                                                    <IoTextSharp className=\"icon\"/>\r\n                                                    <span>Text</span>\r\n                                                </div>\r\n                                                <div onClick={()=>addColumn('Date')}>\r\n                                                    <MdDateRange className=\"icon\"/>\r\n                                                    <span>Date</span>\r\n                                                </div>\r\n                                                <div onClick={()=>addColumn('People')}>\r\n                                                    <BsPeopleCircle className=\"icon\"/>\r\n                                                    <span>People</span>\r\n                                                </div>\r\n                                                <div onClick={()=>addColumn('Numbers')}>\r\n                                                    <TiSortNumerically className=\"icon\"/>\r\n                                                    <span>Numbers</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"title\">Super Useful</div>\r\n\r\n                                            <div className='column-types-container'>\r\n                                                <div>\r\n                                                    <FcTimeline className=\"icon\"/>\r\n                                                    <span>Timeline</span>\r\n                                                </div>\r\n                                                <div onClick={()=>addColumn('LastUpdated')}>\r\n                                                    <MdUpdate className=\"icon\"/>\r\n                                                    <span>Last Updated</span>\r\n                                                </div>\r\n                                                <div onClick={()=>addColumn('CheckBox')}>\r\n                                                    <IoMdCheckboxOutline className=\"icon\"/>\r\n                                                    <span>Check box</span>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <HiHashtag className=\"icon\"/>\r\n                                                    <span>Tags</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>}\r\n                                    </div>\r\n                        </div> \r\n                    </div>\r\n                    {\r\n                        table.tasks.map((task,index)=>\r\n                        task.name.toLowerCase().includes(search.toLowerCase())?\r\n                        <>\r\n                        <Droppable droppableId={`droppable-${index}`} >\r\n                        {(provided,snapshot) => (\r\n                            <div className={`task-droppable-container ${snapshot.isDraggingOver?'droppable':''}`}\r\n                            {...provided.droppableProps} ref={provided.innerRef}\r\n                            >\r\n                                <Draggable key={task._id} draggableId={task._id} index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                        <Task \r\n                                        isDragging={snapshot.isDragging}\r\n                                        isDraggingOver={snapshot.isDraggingOver}\r\n                                        provided={provided}\r\n                                        task={task} \r\n                                        taskKeys={taskKeys} \r\n                                        table={table} \r\n                                        onEditTask={onEditTask} \r\n                                        onRemoveTask={onRemoveTask}\r\n                                        onEditTable={onEditTable} \r\n                                        board={board}\r\n                                        onEditBoard={onEditBoard}\r\n                                        openConversationModal={openConversationModal}\r\n                                        unCheckTasks={unCheckTasks}\r\n                                        />\r\n                                    )}\r\n                                </Draggable>\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                        </Droppable>\r\n                        </>\r\n                        :\r\n                        null\r\n                        )\r\n                    } \r\n                    <div className=\"table-row add-row\">\r\n                                <div className='table-cell add-cell'>\r\n                                    <div className='decoration-line' style={{backgroundColor:`${table.color}`}}></div>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        placeholder=\"+ Add\" \r\n                                        className={`add-new-task-input ${table.tasks.length>0?'':'new-table-input'}`}\r\n                                        onChange={(ev)=>handleChange(ev)}\r\n                                        value={newTaskName} \r\n                                        onKeyUp={(ev)=>{\r\n                                            addNewTaskKeyUp(ev,table,newTaskName)\r\n                                        }}\r\n                                        onFocus={(ev)=>onShowBtn(ev)}\r\n                                        onBlur={(ev)=>onHideBtn(ev)}\r\n                                    />\r\n                                     {isInputBtnVisable&&<div \r\n                                    className={`add-new-task-btn ${newTaskName.split(' ').join('').length>0?'active':''}`}\r\n                                    onMouseDown ={()=>onAddNewTask(table,newTaskName)}\r\n                                >Add</div>}\r\n                                </div>\r\n                                <div className='table-cell add-cell'></div>\r\n                    </div> \r\n                    <div className=\"table-row sum-row\">\r\n                        {\r\n                            taskKeys.map((taskKey)=>\r\n                                taskKey===\"status\"?\r\n                                <div className='table-cell sum-cell sum-cell-content-wrapper'>\r\n                                    <div className=\"sum-status-wrapper\">\r\n                                        {statusTitles.map((title,idx)=>\r\n                                         <span \r\n                                         key={idx} \r\n                                         style={{backgroundColor:`${allTablestatuses[`${title}`].color}`, width:`${allTablestatuses[`${title}`].num/statusesSum*100}%`}}>\r\n                                             <span className=\"label-text arrow-down status-label\">\r\n                                                 <span>{title===''?'Empty':title}</span>\r\n                                                 <span>{allTablestatuses[`${title}`].num}/{statusesSum}</span>\r\n                                                 <span>{Math.round(allTablestatuses[`${title}`].num/statusesSum*100)}%</span>\r\n                                             </span>\r\n                                         </span>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                taskKey===\"owner\"?\r\n                                <div className='table-cell sum-cell sum-cell-content-wrapper'>\r\n                                    {allOwners.length>0&&\r\n                                    <div className=\"owner-container\">\r\n                                        <div className=\"owner-avatar-wrapper\">\r\n                                            <img src={`${allOwners[0].avatar}`} alt=\"\"/>\r\n                                        </div>\r\n                                        {\r\n                                            allOwners.length>1?\r\n                                            <div className=\"owners-count\">\r\n                                                +{allOwners.length-1}\r\n                                            </div>:\r\n                                            null\r\n                                        }\r\n                                    </div>\r\n                                    }\r\n                                </div>\r\n                                :\r\n                                taskKey===\"checkBox\"?\r\n                                <div className='table-cell sum-cell checkbox-sum-cell'></div>\r\n                                :\r\n                                <div className='table-cell sum-cell'></div>\r\n                            )\r\n                        }\r\n                        <div className='table-cell sum-cell'></div>\r\n                    </div> \r\n                </div>:\r\n                <div className={`table ${!isExpand?'shrink':''}`} key={table._id}>\r\n                    <div className=\"title-row-wrapper\" >\r\n                        <div className=\"table-cell title-cell\" style={{color:`${table.color}` }} >\r\n                        <div \r\n                    className={`${isOpenTableColorModal?'':'table-name-wrapper'}`}\r\n                    tabIndex='0' \r\n                    onBlur={()=>\r\n                        {\r\n                        closeTableColorModal()\r\n                        }   \r\n                    }  \r\n                    >\r\n\r\n                        <div className=\"table-actions\">\r\n                            {!isExpand?<CgExpand className=\"expand-btn\" onClick={()=>toggleExpandeTable(true)}/>:\r\n                            <AiOutlineShrink className=\"shrink-btn\" onClick={()=>toggleExpandeTable(false)}/> }\r\n                            <div  className=\"drag-btn\"  {...dragHandle.dragHandleProps}>\r\n                            <BiGridVertical/>\r\n                            </div>\r\n                        </div>\r\n                        <span>{table.name}</span>\r\n                    </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n        </DragDropContext>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { loadWorkspaces, updateWorkspace } from '../store/actions/workspaceActions'\r\nimport { getCurrBoard, updateCurrBoard} from '../store/actions/workspaceActions'\r\nimport { TablePreview } from \"./TablePreview\";\r\nimport { DragDropContext,Droppable ,Draggable   } from 'react-beautiful-dnd';\r\nimport { BiGridVertical } from 'react-icons/bi'\r\n\r\nimport { IoMdNotifications} from 'react-icons/io'\r\nimport { HiPlusCircle } from 'react-icons/hi'\r\nimport { BsPlus} from 'react-icons/bs'\r\nimport { MdClose} from 'react-icons/md'\r\nimport { BsTrash} from 'react-icons/bs'\r\nimport { IoArrowForwardCircleOutline} from 'react-icons/io5'\r\nimport { HiOutlineDocumentDuplicate} from 'react-icons/hi'\r\n\r\nclass _BoardMain extends Component {\r\n    // const [isExpand, setExpandTable] = useState(true);\r\n    state={\r\n        board:null,\r\n        isShrink:false,\r\n        unCheckTasks:false\r\n    }\r\n\r\n    onShrink=(value)=>{\r\n        this.setState({isShrink:value})\r\n    }\r\n    componentDidMount(){\r\n        this.setState({board:this.props.board})\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.board !== this.props.board){\r\n            this.setState({          \r\n                board: this.props.board\r\n            });\r\n        }\r\n        if(prevProps.checkedTasks!==this.props.checkedTasks&&this.props.checkedTasks.length<1){\r\n            this.setState({unCheckTasks:false})\r\n        }\r\n    }\r\n    handleDragEnd=({destination, source})=>{\r\n       if(!destination){\r\n           // \"not dropped in droppable\"\r\n           return\r\n       }\r\n       if(destination.index===source.index&&destination.draggableId===source.draggableId){\r\n           // \"dropped in same place\"\r\n           return\r\n       }\r\n        // board.statusLabelList\r\n       const tableCopy = {...this.props.board.tables[source.index]}\r\n       this.setState({ // no previous or latest old state passed \r\n            board:{...this.state.board}\r\n            }, ()=>{\r\n                this.state.board.tables.splice(source.index,1);\r\n                this.state.board.tables.splice(destination.index, 0, tableCopy);\r\n                return this.state.board\r\n        })  \r\n\r\n        this.props.onEditBoard(this.state.board)\r\n   }\r\n\r\n   onRemoveCheckedTasks =()=>{\r\n       const ids = []\r\n       const tables = []\r\n       this.props.checkedTasks.forEach(item=>\r\n            {ids.push(item._id)\r\n            tables.push(item.table)}\r\n        )\r\n        tables.forEach(table => {\r\n            const newTable = {\r\n                ...table,\r\n                tasks:table.tasks.filter(task=>!ids.includes(task._id))\r\n            }\r\n            this.props.onEditTable(newTable)\r\n       });\r\n       this.setState({unCheckTasks:true})\r\n   }\r\n    render() {\r\n        const { \r\n            board,\r\n            getTaskValue,\r\n            removeTable,\r\n            onAddNewTask,\r\n            onEditTask,\r\n            onEditTable,\r\n            onEditBoard,\r\n            onRemoveTask,\r\n            openConversationModal,\r\n            search\r\n        } = this.props\r\n        const taskKeys = this.props.board.tableColumns.map(tableColumn=>\r\n                    tableColumn.taskKey\r\n                )\r\n        if (!board) return <div>Loading....</div>\r\n        return (\r\n        <DragDropContext  onDragEnd={this.handleDragEnd}>\r\n            <Droppable droppableId={board._id} >\r\n                {(provided) => (\r\n                    <div className=\"board-main\" key={board._id} {...provided.droppableProps} ref={provided.innerRef} >\r\n                    {\r\n                        board.tables.map((table,index)=>\r\n                            <Draggable key={table._id} draggableId={table._id} index={index}>\r\n                                {(provided,snapshot) => (\r\n                                     <div className={`table-wrapper ${this.state.isShrink?'shrink':''}`} ref={provided.innerRef} {...provided.draggableProps}>\r\n                                        <TablePreview\r\n                                        isDragging={snapshot.isDragging}\r\n                                         dragHandle={provided}\r\n                                         taskKeys={taskKeys} \r\n                                         table={table}\r\n                                         getTaskValue={getTaskValue}\r\n                                         IoMdNotifications={IoMdNotifications}\r\n                                         HiPlusCircle={HiPlusCircle}\r\n                                         BsPlus={BsPlus}\r\n                                         onAddNewTask={onAddNewTask}\r\n                                         onEditTask={onEditTask}\r\n                                         onEditTable={onEditTable}\r\n                                         onEditBoard={onEditBoard}\r\n                                         onRemoveTask={onRemoveTask}\r\n                                         removeTable={removeTable}\r\n                                         openConversationModal={openConversationModal}\r\n                                         isShrink={this.state.isShrink}\r\n                                         onShrink={this.onShrink}\r\n                                         search={search}\r\n                                         unCheckTasks={this.state.unCheckTasks}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                            </Draggable>\r\n                        ) \r\n                    }\r\n                      {provided.placeholder}\r\n                      {this.props.checkedTasks.length>0&&<div className=\"multiple-actions-modal slide-top\">\r\n                          <div className=\"items-count-wrapper\">{this.props.checkedTasks.length}</div>\r\n                          <div>\r\n                                <div className=\"middle-section\">\r\n                                    <div className=\"selected-items\">\r\n                                        <div className=\"title\">Item{`${this.props.checkedTasks.length>1?'s':''}`} selected</div>\r\n                                        <div className=\"dots-container\">\r\n                                            {this.props.checkedTasks.map(task=>\r\n                                                <div className=\"dot\"></div>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"options-wrapper\">\r\n                                        <div className=\"option-btn\">\r\n                                            <HiOutlineDocumentDuplicate className=\"icon\"/>\r\n                                            <div className=\"name\">Duplicate</div>\r\n                                        </div>\r\n                                        <div className=\"option-btn\">\r\n                                            <BsTrash className=\"icon\" onClick={this.onRemoveCheckedTasks}/>\r\n                                            <div className=\"name\">Delete</div>\r\n                                        </div>\r\n                                        <div className=\"option-btn\">\r\n                                            <IoArrowForwardCircleOutline className=\"icon\"/>\r\n                                            <div className=\"name\">Move tp</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                          </div>\r\n                          <div className=\"close-btn\" \r\n                          onClick={()=>this.setState({unCheckTasks:true})}\r\n                          >\r\n                            <MdClose/>\r\n                          </div>\r\n                        </div>}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    );\r\n}}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        workspaces: state.workspace.workspaces,\r\n        board: state.workspace.currBoard,\r\n        loggedInUser: state.user.loggedInUser,\r\n        checkedTasks: state.workspace.checkedTasks\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadWorkspaces,\r\n    updateWorkspace,\r\n    updateCurrBoard,\r\n}\r\nexport const BoardMain = connect(mapStateToProps, mapDispatchToProps)(withRouter(_BoardMain))\r\n","import React, { useState,useRef,useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FaPencilAlt } from 'react-icons/fa'\r\nimport { BiCheck } from 'react-icons/bi';\r\nimport { BsThreeDots,BsTrashFill } from 'react-icons/bs';\r\nimport { WorkspaceIconPicker } from \"./WorkspaceIconPicker\";\r\n\r\nexport function NewWorkspaceBoardMain({updateWorkspace,deleteWorkspace}) {\r\n    const workspace = useSelector(state => state.workspace.currWorkspace);\r\n    const[isOpenModal,setIsOpenModal]=useState(false)\r\n    const[isShowModal,setIsShowModal]=useState(false)\r\n    const[newWorkspaceColor,setNewWorkspaceColor]=useState(workspace.color)\r\n    const[newWorkspaceIcon,setNewWorkspaceIcon]=useState(workspace.img)\r\n    const [isUpdateName, setIsUpdateName] = useState(false);\r\n    const [workspaceName, setWorkspaceName] = useState(workspace.name);\r\n    const [isUpdateDesc, setIsUpdateDesc] = useState(false);\r\n    const [workspaceDesc, setWorkspaceDesc] = useState(workspace.desc);\r\n    const nameInputEl = useRef()\r\n    const descInputEl = useRef()\r\n\r\n    useEffect(() => {\r\n        setNewWorkspaceColor(workspace.color)\r\n        setNewWorkspaceIcon(workspace.img)\r\n        setWorkspaceName(workspace.name)\r\n        setWorkspaceDesc(workspace.desc)\r\n    }, [workspace])\r\n\r\n    function handleChangeName(ev) {\r\n        // if(ev.target.value.length<1)return\r\n        setWorkspaceName(ev.target.value)\r\n    }    \r\n    function onUpdateName() {\r\n        setIsUpdateName(true)\r\n        setTimeout(() => {\r\n            nameInputEl.current.focus()\r\n            nameInputEl.current.select()\r\n        }, 0); \r\n    }\r\n\r\n    function handleChangDesc(ev) {\r\n        setWorkspaceDesc(ev.target.value)\r\n    }\r\n    function onUpdateDesc() {\r\n        setIsUpdateDesc(true)\r\n        setTimeout(() => {\r\n            descInputEl.current.focus()\r\n            descInputEl.current.select()\r\n        }, 0); \r\n    }\r\n    return (\r\n        <div className=\"new-workspace-board-main-wrapper\">\r\n            <div\r\n                className=\"workspace-icon\"  \r\n                style={{backgroundColor:`${newWorkspaceColor}`}}\r\n                onClick={()=>{setIsOpenModal(true)}}\r\n                tabIndex=\"0\"\r\n                onBlur={()=>{\r\n                    if(newWorkspaceColor!==workspace.color||newWorkspaceIcon!==workspace.img){\r\n                        const newWorkspace={\r\n                            ...workspace,\r\n                            img:newWorkspaceIcon,\r\n                            color:newWorkspaceColor\r\n                        }\r\n                        updateWorkspace(newWorkspace)\r\n                    }\r\n                    setIsOpenModal(false)\r\n                }}\r\n            >\r\n                {newWorkspaceIcon}\r\n                {!isOpenModal&&\r\n                    <div className=\"workspace-icon-edit\" >\r\n                        <div><FaPencilAlt className=\"workspace-edit-pencil\"/></div>\r\n                        <div>Edit</div>\r\n                    </div>\r\n                }\r\n                {isOpenModal&&\r\n                    <div className=\" modal-default-style workspace-icon-modal\">\r\n                        <WorkspaceIconPicker updateWorkspace={updateWorkspace}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"workspace-name-container\">\r\n                    <div\r\n                        className={`name-wrapper  ${isUpdateName?'updating':''}`} onClick={onUpdateName}>\r\n                        {isUpdateName?\r\n                        <input \r\n                            className=\"update-workspace-input\" \r\n                            type=\"text\" \r\n                            value={workspaceName}\r\n                            onChange={handleChangeName}\r\n                            ref={nameInputEl}\r\n                            onBlur={()=>{\r\n                                setIsUpdateName(false)\r\n                                if(workspaceName!==workspace.name){\r\n                                    const newWorkspace={\r\n                                        ...workspace,\r\n                                        name:workspaceName,\r\n                                    }\r\n                                    updateWorkspace(newWorkspace)\r\n                                }\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                }\r\n                            }}\r\n                        />\r\n                        :\r\n                        <div>{workspaceName}</div>\r\n                        }\r\n                    </div>\r\n                        <div className=\"workspace-options-container\"\r\n                        tabIndex=\"0\"\r\n                        onBlur={()=>setIsShowModal(false)}\r\n                        >\r\n                            <BsThreeDots className={`workspace-dots ${isShowModal?'open':''}`} onClick={()=>setIsShowModal(curr=>!curr)}/>\r\n                            {isShowModal&&\r\n                                <div className=\" modal-default-style workspace-options-modal\">\r\n                                    <div className=\"modal-btn workspace-options-btn\"\r\n                                    onClick={()=>\r\n                                        {onUpdateDesc()\r\n                                        setIsShowModal(false)}\r\n                                    }\r\n                                    >\r\n                                        <FaPencilAlt className=\"icon\"/>\r\n                                        <span>Rename workspace</span>\r\n                                    </div>\r\n                                    <div className=\"modal-btn workspace-options-btn\"\r\n                                     onClick={()=>\r\n                                        {\r\n                                            deleteWorkspace(workspace._id)\r\n                                            setIsShowModal(false)\r\n                                        }\r\n                                    }\r\n                                    >\r\n                                        <BsTrashFill className=\"icon\"/>\r\n                                        <span>Delete workspace</span>\r\n                                    </div>\r\n                                </div>}\r\n                        </div>\r\n                </div>\r\n\r\n                <div\r\n                    className={`desc-wrapper ${isUpdateDesc?'updating':''}`} onClick={onUpdateDesc}>\r\n                    {isUpdateDesc?\r\n                    <input \r\n                        className=\"update-workspace-input\" \r\n                        type=\"text\" \r\n                        value={workspaceDesc}\r\n                        onChange={handleChangDesc}\r\n                        ref={descInputEl}\r\n                        onBlur={()=>{\r\n                            setIsUpdateDesc(false)\r\n                            if(workspaceDesc!==workspace.desc){\r\n                                const newWorkspace={\r\n                                    ...workspace,\r\n                                    desc:workspaceDesc\r\n                                }\r\n                                updateWorkspace(newWorkspace)\r\n                            }\r\n                        }}\r\n                        onKeyDown={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                ev.target.blur()\r\n                            }\r\n                        }}\r\n                    />\r\n                    :\r\n                    <div>{workspaceDesc}</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState,useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BoardHeader } from './BoardHeader'\r\nimport { BoardMain } from './BoardMain'\r\nimport { NewWorkspaceBoardMain } from './NewWorkspaceBoardMain'\r\n\r\nexport function BoardDetails({\r\n    isNewWorkspaceCreated,\r\n    onAddNewTable,\r\n    onEditBoard,\r\n    getTaskValue,\r\n    removeTable,\r\n    onAddNewTask,\r\n    onEditTask,\r\n    onEditTable,\r\n    onRemoveTask,\r\n    openConversationModal,\r\n    updateWorkspace,\r\n    deleteWorkspace\r\n}){\r\n    const workspace = useSelector(state => state.workspace.currWorkspace);\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    return (\r\n        <div className=\"board-content-container\">\r\n        {\r\n        !isNewWorkspaceCreated?\r\n            <BoardHeader \r\n                workspace={workspace}\r\n                onAddNewTable={onAddNewTable}\r\n                onEditBoard={onEditBoard}\r\n                setSearch={setSearch} \r\n            />:\r\n            <div className=\"new-workspace-board-header\"></div>\r\n        }\r\n            {\r\n            !isNewWorkspaceCreated?\r\n                <BoardMain \r\n                isNewWorkspaceCreated={isNewWorkspaceCreated}\r\n                workspace={workspace} \r\n                getTaskValue={getTaskValue}\r\n                removeTable={removeTable}\r\n                onAddNewTask={onAddNewTask}\r\n                onEditTask={onEditTask}\r\n                onEditTable={onEditTable}\r\n                onEditBoard={onEditBoard}\r\n                onRemoveTask={onRemoveTask}\r\n                openConversationModal={openConversationModal}\r\n                search={search} \r\n            />:\r\n            <NewWorkspaceBoardMain \r\n            updateWorkspace={updateWorkspace}\r\n            deleteWorkspace={deleteWorkspace}\r\n            />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect,useState,useRef } from 'react';\r\nimport { TextareaEditor } from \"./TextareaEditor\";\r\nimport { FaQuoteRight,FaBold, FaUserEdit} from 'react-icons/fa'\r\nimport { AiOutlineItalic,AiOutlineBars} from 'react-icons/ai'\r\nimport { MdFormatColorText,MdFormatListNumbered} from 'react-icons/md'\r\nimport { BsTextLeft,BsTextRight} from 'react-icons/bs'\r\nimport { GoMention} from 'react-icons/go'\r\nimport { TiAttachment } from 'react-icons/ti'\r\nimport { BiSmile } from 'react-icons/bi'\r\nimport { AiOutlineLike } from 'react-icons/ai'\r\nimport { RiReplyLine } from 'react-icons/ri'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\nexport function ConversationModal({\r\n    onEditTask,\r\n    isOpenConversationModal\r\n}) {\r\n\r\n    const users = useSelector(state => state.user.users)\r\n    const currBoard = useSelector(state => state.workspace.currBoard)\r\n    const conversationLocation = useSelector(state => state.workspace.conversationLocation)\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const [currTable, setCurrTable] = useState(null);\r\n    const [currTask, setCurrTask] = useState(null);\r\n    const [isActiveInput, setActiveInput] = useState(false);\r\n    const [isReplyActive, setReply] = useState(false);\r\n    const [msg, setMsg] = useState('');\r\n    const inuptRef = useRef()\r\n\r\n    useEffect(() => {\r\n        if(conversationLocation.tableId){\r\n            setCurrTable( currBoard.tables.filter(table=>\r\n                table._id===conversationLocation.tableId\r\n            )[0])\r\n        }\r\n    }, [conversationLocation.tableId,currBoard])\r\n\r\n    useEffect(() => {\r\n        if(conversationLocation.taskId&&currTable){\r\n            setCurrTask(\r\n                currTable.tasks.filter(task=>\r\n                    task._id===conversationLocation.taskId\r\n                )[0]\r\n            )\r\n        }\r\n    }, [conversationLocation.taskId,currTable])\r\n\r\n\r\n    useEffect(() => {\r\n        if(!isOpenConversationModal){\r\n            setMsg('')\r\n        }\r\n    }, [isOpenConversationModal])\r\n\r\n\r\n    function getUserById(userId){\r\n        const user =  users.filter(user=>\r\n        user._id===userId)[0]\r\n        return user\r\n    }\r\n\r\n\r\n    function onAddMsg(){\r\n        if(msg.trim().length<1)return\r\n        const newConversations={\r\n            _id:Date.now(),\r\n            userId:loggedInUser._id,\r\n            msg:msg,\r\n            likes:0,\r\n            replys:[]\r\n        }\r\n        const updatedTask = {\r\n            ...currTask,\r\n            conversations: [...currTask.conversations, newConversations]\r\n        }\r\n        onEditTask(currTable,updatedTask)\r\n        setMsg('')\r\n    }\r\n\r\n    const editorBtns=[\r\n        {\r\n            icon:<FaQuoteRight/>,\r\n            name:'Blockquote'\r\n        },\r\n        {\r\n            icon:<FaBold/>,\r\n            name:'Strong'\r\n        },\r\n        {\r\n            icon:<AiOutlineItalic/>,\r\n            name:'Emphasis <em></em>'\r\n        }, \r\n        {\r\n            icon:<MdFormatColorText/>,\r\n            name:'Text color'\r\n        },\r\n        {\r\n            icon:<AiOutlineBars/>,\r\n            name:'Bulleted List '\r\n        },\r\n        {\r\n            icon:<MdFormatListNumbered/>,\r\n            name:'Numbered List'\r\n        },\r\n        {\r\n            icon:<BsTextLeft/>,\r\n            name:'Text left'\r\n        },\r\n        {\r\n            icon:<BsTextRight/>,\r\n            name:'Text right'\r\n        }\r\n\r\n    ]\r\n\r\n    const attachmentBtns= [\r\n        {\r\n            icon:<TiAttachment/>,\r\n            name:'Add files'\r\n        },\r\n        {\r\n            icon:'',\r\n            name:'GIF'\r\n        },\r\n        {\r\n            icon:<BiSmile/>,\r\n            name:'Emoji'\r\n        },\r\n        {\r\n            icon:<GoMention/>,\r\n            name:'Mention'\r\n        }\r\n    ]\r\n    return (\r\n        <div className={`conversation-modal-content`}>\r\n          <div className='conversation-modal-title'>\r\n              Customer Confirms Use Case(s) are Successfully Implemented\r\n          </div>\r\n          <div className='conversation-modal-updates'> \r\n              Updates\r\n          </div>\r\n          <div className=\"updates-section-content\">\r\n            {isActiveInput?\r\n                <input type=\"text\" placeholder='Write an update...' className=\"conversation-input\" onClick={()=>{\r\n                    setActiveInput(true)\r\n                    setTimeout(() => {\r\n                        if(inuptRef&&inuptRef.current){\r\n                            inuptRef.current.focus()\r\n                        }\r\n                    }, 0);\r\n                }}/>\r\n                :\r\n                <div className=\"new-msg-container\">\r\n                <div className=\"textarea-editor-wrapper\">\r\n                    {/* <TextareaEditor/> */}\r\n                    <div className=\"buttons-bar\">\r\n                        {editorBtns.map(btn=>\r\n                            <div className=\"editor-btn\">\r\n                            {btn.icon}\r\n                                <span className=\"label-text arrow-up text-editor-label\">{btn.name}</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" ref={inuptRef}\r\n                    onBlur={()=> setActiveInput(false)}\r\n                    value={msg}\r\n                    onChange={(ev)=>setMsg(ev.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"attachments-bar\">\r\n                        {attachmentBtns.map(btn=>\r\n                            <div className=\"attachment-btn\">\r\n                                {btn.icon}\r\n                                <span>{btn.name}</span>\r\n                            </div>\r\n                        )}\r\n                        <div className=\"add-msg-btn\"\r\n                        onClick={onAddMsg}\r\n                        >Update</div>\r\n                </div>\r\n                </div>\r\n            }\r\n            {\r\n                <div className='updates-list'>\r\n                    {\r\n                        currTask&&currTask.conversations.length>0?\r\n                            <>\r\n                            {currTask.conversations.map(conversation=>\r\n                                <div className=\"conversation-wrapper\">\r\n                                    <div className=\"content-wrapper\">\r\n                                        <div className=\"sender-details\">\r\n                                            <div className='sender-img' style={{backgroundImage:`url(${getUserById(conversation.userId).avatar})`}}></div>\r\n                                            <div className='sender-name'>{getUserById(conversation.userId).username}</div>\r\n                                        </div>\r\n                                        <div className=\"msg\">{conversation.msg}</div>\r\n                                    </div>\r\n                                    <div className=\"btns-wrapper\">\r\n                                        <div className=\"btn-wrapper\">\r\n                                            <div className=\"like-btn\">\r\n                                                <AiOutlineLike/>\r\n                                                <span>Like</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"btn-wrapper\">\r\n                                            <div className='reply-btn' onClick={()=>setReply(cur=>!cur)}>\r\n                                                <RiReplyLine/>\r\n                                                <span>Reply</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {isReplyActive&&<div className=\"reply-wrapper\">\r\n                                        <div className=\"user-img\" style={{backgroundImage:`url(${loggedInUser.avatar})`}}></div>\r\n                                        <div className=\"reply-msg-wrapper\">\r\n                                            <textarea \r\n                                            name=\"\" \r\n                                            id=\"\" \r\n                                            cols=\"30\" \r\n                                            rows=\"4\"\r\n                                            className=\"reply-textarea\"\r\n                                            ></textarea>\r\n                                            <div className=\"attachments-bar\">\r\n                                                {attachmentBtns.map(btn=>\r\n                                                    <div className=\"attachment-btn\">\r\n                                                        {btn.icon}\r\n                                                        <span>{btn.name}</span>\r\n                                                    </div>\r\n                                                )}\r\n                                                <div className=\"add-msg-btn\"\r\n                                                onClick={onAddMsg}\r\n                                                >Reply</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>}\r\n                                </div>\r\n                            )}\r\n                            </>\r\n                        :\r\n                            <span className='no-updates'>No updates yet...</span>\r\n                        }\r\n                </div>\r\n            }\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n","export const folderService = {\r\n    // query,\r\n    getById,\r\n    // remove,\r\n    // add,\r\n    update\r\n    \r\n}\r\n\r\nfunction getById(workspaces,folderId) {\r\n    const folder = workspaces.filter(workspace=>\r\n        workspace.folders.filter(folder=>\r\n            folder._id===folderId\r\n        )\r\n    )[0]\r\n    return folder\r\n}\r\n\r\nfunction update(newFolder,workspaces) {\r\n    workspaces.map(workspace=>\r\n        workspace.folders.map(folder=>\r\n            folder._id===newFolder._id?newFolder:folder\r\n        )\r\n    )\r\n    return workspaces\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardToolbar } from '../cmps/BoardToolbar'\r\nimport { BoardToolbarMenu } from '../cmps/BoardToolbarMenu'\r\nimport { BoardHeader } from '../cmps/BoardHeader'\r\nimport { BoardMain } from '../cmps/BoardMain'\r\nimport { BoardDetails } from '../cmps/BoardDetails'\r\n\r\nimport { ConversationModal } from '../cmps/ConversationModal'\r\nimport { NewWorkspaceBoardMain } from '../cmps/NewWorkspaceBoardMain'\r\nimport { loadWorkspaces, updateWorkspace,updateCurrWorkspace, addWorkspace,removeWorkspace} from '../store/actions/workspaceActions'\r\nimport { getCurrBoard, updateCurrBoard} from '../store/actions/workspaceActions'\r\nimport { updateUser} from '../store/actions/userActions'\r\nimport { boardService } from '../services/boardService'\r\nimport { folderService } from '../services/folderService'\r\nimport { \r\n    BsLightning, \r\n    BsStar, \r\n    BsThreeDots, \r\n    BsFillStarFill, \r\n    BsPeople, \r\n    BsFilter,\r\n    BsPlus\r\n} from 'react-icons/bs'\r\nimport { \r\n    IoIosArrowForward, \r\n    IoIosArrowBack, \r\n    IoIosArrowDown,\r\n    IoMdArrowDropdown,\r\n    IoMdNotifications\r\n} from 'react-icons/io'\r\n\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\nimport { SiProbot } from 'react-icons/si'\r\nimport { ImTable } from 'react-icons/im'\r\nimport { BiUserCircle } from 'react-icons/bi'\r\nimport { RiArrowUpDownFill } from 'react-icons/ri'\r\nimport { CgViewComfortable } from 'react-icons/cg'\r\nimport { HiPlusCircle } from 'react-icons/hi'\r\nimport { GrClose } from 'react-icons/gr'\r\nimport { workspaceService } from '../services/workspaceService'\r\n\r\nexport class _Workspace extends Component {\r\n    state={\r\n        isToolbarMenuClose:false,\r\n        workspace:null,\r\n        isFolderOpen:false,\r\n        board:null,\r\n        folder:null,\r\n        task:{},\r\n        isOpenConversationModal:false,\r\n        isNewFolderCreated:false,\r\n        isNewWorkspaceCreated:false,\r\n        toolbarActiveBtn:''\r\n    }\r\n    async componentDidMount() {\r\n        await this.props.loadWorkspaces()\r\n        this.editableName = React.createRef();\r\n        // const mainWorkspace = await this.props.workspaces.filter(workspace=>workspace.isMain===true)[0];\r\n        // this.setState({workspace:mainWorkspace})\r\n\r\n        await this.props.workspaces.map(workspace=>workspace.boards.map(board=>board.isLastSeen===true? this.setState({board},()=>{\r\n            this.props.history.push(`/boards/${board._id}`)\r\n            this.props.updateCurrBoard(board)\r\n            this.setState({workspace})\r\n            this.props.updateCurrWorkspace(workspace)\r\n        }):null))[0];\r\n    }\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    onEndNewFolderUpdating=()=>{\r\n        this.setState({ isNewFolderCreated:false})\r\n    }\r\n\r\n    onToggleToolbarMenu=()=>{\r\n        this.setState({isToolbarMenuClose:!this.state.isToolbarMenuClose})\r\n    }\r\n\r\n    onGettingCurrentWorkspace=(workspace)=>{\r\n        this.setState({workspace},()=>{\r\n            this.props.updateCurrWorkspace(workspace)\r\n            this.setState({isNewWorkspaceCreated:false})\r\n        })\r\n    }\r\n\r\n    isBoardInsideFolder = this.props.match.url.split('/').includes('folders')\r\n\r\n    // getCurrWorkspace = () =>{\r\n    //     const workspaceId = this.props.match.url.split('/')[2]\r\n    //     const currWorkspace = workspaceService.getById(workspaceId)\r\n    //     return currWorkspace\r\n    // }\r\n    getCurrFolder = () =>{\r\n       const isBoardInsideFolder = this.props.match.url.split('/').includes('folders')\r\n        if(!isBoardInsideFolder)return\r\n        const folderId = this.props.match.url.split('/')[4]\r\n        const currFolder = folderService.getById(this.props.workspaces,folderId)\r\n        return currFolder\r\n    }\r\n    getCurrBoard = () =>{\r\n        const isBoardInsideFolder = this.props.match.url.split('/').includes('folders')\r\n        if(isBoardInsideFolder){\r\n            const folderId = this.props.match.url.split('/')[4]\r\n            const currFolder = folderService.getById(this.props.workspaces,folderId)\r\n            const boardId = this.props.match.params.id\r\n            const currBoard = boardService.getById(this.props.workspaces,boardId,currFolder)\r\n            // return currBoard\r\n            if(currBoard){\r\n                this.setState({board:currBoard},()=>{\r\n                    this.props.history.push(`/boards/${currBoard._id}`)\r\n                })\r\n            }\r\n        }else{\r\n            // const boardId = this.props.match.url.split('/')[4]\r\n            const boardId = this.props.match.params.id\r\n            const folder=null\r\n            const currBoard = boardService.getById(this.props.workspaces,boardId,folder)\r\n            // return currBoard\r\n            if(currBoard){\r\n                this.setState({board:currBoard},()=>{\r\n                    this.props.history.push(`/boards/${currBoard._id}`)\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onToggleFolder=(folder)=>{\r\n        this.setState({isFolderOpen:!this.state.isFolderOpen})\r\n    } \r\n\r\n\r\n    onGettingCurrentBoard=async(board)=>{\r\n        this.setState({board},()=>{\r\n            this.props.history.push(`/boards/${board._id}`)\r\n        })\r\n        await this.props.updateCurrBoard(board)\r\n        this.setState({isNewWorkspaceCreated:false})\r\n    }\r\n   \r\n\r\n    onEditBoard=(updatedBoard)=>{\r\n        this.updateBoard(updatedBoard)\r\n    }\r\n\r\n    onAddNewTable=()=>{\r\n        const newBoard = boardService.addTable(this.state.board)\r\n        this.updateBoard(newBoard)\r\n    }\r\n \r\n    onEditTable=(updatedTable)=>{\r\n        const newBoard = boardService.updateTable(this.state.board,updatedTable)\r\n        this.updateBoard(newBoard)\r\n    }\r\n\r\n    removeTable=(tableId)=>{\r\n        const newBoard = boardService.removeTable(tableId,this.state.board)\r\n        this.updateBoard(newBoard)\r\n    }\r\n\r\n    onAddNewTask=(currTable,newTaskName)=>{\r\n        if(!newTaskName.split(' ').join(''))return\r\n        const newBoard = boardService.addTask(currTable,this.state.board,newTaskName,this.props.loggedInUser)\r\n        this.updateBoard(newBoard)\r\n    }\r\n\r\n    onEditTask=(currTable,currTask)=>{\r\n        const newBoard = boardService.updateTask(currTable,this.state.board,currTask,this.props.loggedInUser)\r\n        this.updateBoard(newBoard)\r\n    }\r\n\r\n    onRemoveTask=(taskId,currTable)=>{\r\n        const newBoard = boardService.removeTask(taskId,currTable,this.state.board)\r\n        this.updateBoard(newBoard)\r\n    }\r\n\r\n    editBoard=(newBoard)=>{\r\n        this.updateBoard(newBoard)\r\n    }\r\n\r\n    updateBoard(newBoard){\r\n        this.setState({board:newBoard},()=>{\r\n            this.props.updateCurrBoard(newBoard)\r\n            let newWorkspace = this.state.workspace\r\n            // let isBoardInsideFolder = newWorkspace.folders.includes(folder=>\r\n            //  folder.boards.includes(board=>\r\n            //      board._id === newBoard._id\r\n            //  ))\r\n            let boardInsideFolder = {\r\n                isBoardInsideFolder:false,\r\n                cuurFolde:null\r\n            }\r\n            newWorkspace.folders.map(folder=>\r\n                folder.boards.map(board=>\r\n                    board._id === newBoard._id?boardInsideFolder={\r\n                        ...boardInsideFolder,\r\n                        isBoardInsideFolder:true,\r\n                        cuurFolde:folder\r\n                    }\r\n                    :null\r\n                    \r\n            ))\r\n            if(boardInsideFolder.isBoardInsideFolder){\r\n                //board insode folder\r\n                newWorkspace ={\r\n                    ...this.state.workspace, \r\n                    folders: this.state.workspace.folders.map(folder=>\r\n                        folder._id===boardInsideFolder.cuurFolde._id?\r\n                       {...folder, boards:\r\n                        folder.boards.map(board=>\r\n                            board._id === newBoard._id?\r\n                            newBoard:board\r\n                        )}\r\n                        :folder\r\n                    )\r\n                }\r\n            }else{\r\n                //board insode workspace\r\n                 //replace the currBoard whith the new Board\r\n                 newWorkspace.boards = newWorkspace.boards.map(board=>\r\n                    board._id === newBoard._id?newBoard:board\r\n                )\r\n            }\r\n     \r\n            // send to update updateWorkspace\r\n            this.props.updateCurrWorkspace(newWorkspace)\r\n            this.setState({workspace:newWorkspace},()=>{\r\n                this.props.updateWorkspace(newWorkspace)\r\n            })\r\n        })\r\n    }\r\n//move folder to another workspace\r\n    moveFolder=(newWorkspace,cuurFolder)=>{\r\n        this.removeFolder(cuurFolder._id)\r\n        const newWorkspaceToUpdate={\r\n            ...newWorkspace,\r\n            folders:[...newWorkspace.folders, cuurFolder]\r\n        }\r\n        this.props.updateWorkspace(newWorkspaceToUpdate)\r\n    }\r\n//move board to another workspace or move board in folder to the workspace\r\n    moveBoard=(newWorkspace,cuurBoard)=>{\r\n        if(this.state.workspace._id===newWorkspace._id){\r\n            const updatedWorkspace = boardService.removeBoard(this.state.workspace, cuurBoard._id)\r\n            const newWorkspaceToUpdate={\r\n                ...updatedWorkspace,\r\n                boards:[...updatedWorkspace.boards, cuurBoard]\r\n            }\r\n            this.setState({workspace:newWorkspaceToUpdate},()=>{\r\n                this.props.updateCurrWorkspace(newWorkspaceToUpdate)\r\n            })\r\n            this.props.updateWorkspace(newWorkspaceToUpdate)\r\n        }else{\r\n            this.removeBoard(cuurBoard._id)\r\n            const newWorkspaceToUpdate={\r\n                ...newWorkspace,\r\n                boards:[...newWorkspace.boards, cuurBoard]\r\n            }\r\n            this.props.updateWorkspace(newWorkspaceToUpdate)\r\n        }\r\n    }\r\n//move board to another folder\r\n    moveBoardToFolder=(folderWorkspace,newFolder,cuurBoard)=>{\r\n        const updatedWorkspace = boardService.removeBoard(this.state.workspace, cuurBoard._id)\r\n        this.setState({workspace:updatedWorkspace},()=>{\r\n            this.props.updateWorkspace(updatedWorkspace)\r\n            this.props.updateCurrWorkspace(updatedWorkspace)\r\n        })\r\n        const newFolderToUpdate={\r\n            ...newFolder,\r\n            boards:[...newFolder.boards, cuurBoard]\r\n        }\r\n        if(updatedWorkspace._id===folderWorkspace._id){\r\n            const newWorkspace = boardService.updateFolder(updatedWorkspace, newFolderToUpdate)\r\n            if( newWorkspace._id===this.state.workspace._id){\r\n                this.setState({workspace:newWorkspace},()=>{\r\n                    this.props.updateCurrWorkspace(newWorkspace)\r\n                })\r\n            }\r\n            this.props.updateWorkspace(newWorkspace)\r\n        }else{\r\n            const newWorkspace = boardService.updateFolder(folderWorkspace, newFolderToUpdate)\r\n            if( newWorkspace._id===this.state.workspace._id){\r\n                this.setState({workspace:newWorkspace},()=>{\r\n                    this.props.updateCurrWorkspace(newWorkspace)\r\n                })\r\n            }\r\n            this.props.updateWorkspace(newWorkspace)\r\n        }\r\n    }  \r\n    \r\n\r\n    removeBoard=(boardId)=>{\r\n        const newWorkspace = boardService.removeBoard(this.state.workspace, boardId)\r\n        this.setState({workspace:newWorkspace},()=>{\r\n            this.props.updateWorkspace(newWorkspace)\r\n            this.props.updateCurrWorkspace(newWorkspace)\r\n        })\r\n    }\r\n\r\n    addNewBoard=(boardName)=>{\r\n        const newWorkspace = boardService.addBoard(this.state.workspace,boardName)\r\n        this.setState({workspace:newWorkspace},()=>{\r\n            this.props.updateWorkspace(newWorkspace)\r\n            this.props.updateCurrWorkspace(newWorkspace)\r\n        })\r\n    }\r\n\r\n    addNewWorkspace=(workspaceName,workspaceColor,workspaceIcon)=>{\r\n        \r\n        const newWorkspace =   {\r\n            name:workspaceName,\r\n            isMain : false,\r\n            desc : \"description about the workspace\",\r\n            img : workspaceIcon,\r\n            color : workspaceColor,\r\n            owner:this.state.loggedInUser,//added in backend\r\n            folders : [],\r\n            boards : []\r\n            }   \r\n        const x = this.props.addWorkspace(newWorkspace)\r\n        x.then(workspace=> \r\n            this.setState({workspace:workspace},()=>{\r\n                this.setState({isNewWorkspaceCreated:true})\r\n                const newUser= {\r\n                    ...this.props.loggedInUser,\r\n                    pinnedWorkspaces:[\r\n                        ...this.props.loggedInUser.pinnedWorkspaces,\r\n                        workspace._id\r\n                    ]\r\n                }\r\n                this.props.updateUser(newUser)\r\n            })\r\n        )\r\n    }\r\n\r\n    updateWorkspace=(newWorkspace)=>{\r\n        this.props.updateWorkspace(newWorkspace)\r\n        this.setState({workspace:newWorkspace},()=>{\r\n            this.props.updateCurrWorkspace(newWorkspace)\r\n        })\r\n    }  \r\n     \r\n    deleteWorkspace=(workspaceId)=>{\r\n        this.props.removeWorkspace(workspaceId)\r\n        this.props.workspaces.map(workspace=>\r\n            workspace.boards.map(board=>\r\n                board.isLastSeen===true? \r\n                    this.setState({workspace},()=>{\r\n                        this.props.updateCurrWorkspace(workspace)\r\n                    })\r\n                    :null\r\n            )   \r\n        )\r\n    }\r\n\r\n    addBoardInFolder=(currFolder,boardName)=>{\r\n        const newWorkspace = boardService.addBoardInFolder(this.state.workspace,currFolder,boardName)\r\n        this.setState({workspace:newWorkspace},()=>{\r\n            this.props.updateWorkspace(newWorkspace)\r\n            this.props.updateCurrWorkspace(newWorkspace)\r\n        })\r\n    }\r\n    addNewFloder=()=>{\r\n        const newWorkspace = boardService.addFolder(this.state.workspace)\r\n        this.setState({workspace:newWorkspace},()=>{\r\n            this.props.updateWorkspace(newWorkspace)\r\n            this.props.updateCurrWorkspace(newWorkspace)\r\n            this.setState({isNewFolderCreated:true})\r\n        })\r\n    }\r\n    \r\n    removeFolder=(folderId)=>{\r\n        const newWorkspace = boardService.removeFolder(this.state.workspace, folderId)\r\n        this.setState({workspace:newWorkspace},()=>{\r\n            this.props.updateWorkspace(newWorkspace)\r\n            this.props.updateCurrWorkspace(newWorkspace)\r\n        })\r\n    }\r\n    updateFolder=(newFolder)=>{\r\n        const newWorkspace = boardService.updateFolder(this.state.workspace, newFolder)\r\n        this.setState({workspace:newWorkspace},()=>{\r\n            this.props.updateWorkspace(newWorkspace)\r\n            this.props.updateCurrWorkspace(newWorkspace)\r\n\r\n        })\r\n    }\r\n\r\n    openConversationModal=()=>{\r\n        this.setState({isOpenConversationModal:true})\r\n    }\r\n\r\n    onManageWorkspace=()=>{\r\n        this.setState({isNewWorkspaceCreated:true})\r\n    }\r\n    onSetToolbarMenu=(val)=>{\r\n         this.setState({toolbarActiveBtn:val})\r\n    }\r\n\r\n    render() {\r\n        const { workspaces } = this.props\r\n        const { workspace,board ,isNewWorkspaceCreated} = this.state\r\n        if (!workspaces||!board||!workspace) return <div>Loading....</div>\r\n        return (\r\n            <div className=\"board-page-container\">\r\n                <BoardToolbar \r\n                    BsLightning={BsLightning} \r\n                    BsStar={BsStar} \r\n                    BsThreeDots={BsThreeDots}\r\n                    // workspaces={workspaces}\r\n                    onGettingCurrentWorkspace={this.onGettingCurrentWorkspace}\r\n                    addNewWorkspace={this.addNewWorkspace}\r\n                    onSetToolbarMenu={this.onSetToolbarMenu}\r\n                />\r\n                <BoardToolbarMenu \r\n                    isToolbarMenuClose={this.state.isToolbarMenuClose} \r\n                    onToggleToolbarMenu={this.onToggleToolbarMenu}\r\n                    IoIosArrowForward={IoIosArrowForward}\r\n                    IoIosArrowBack={IoIosArrowBack}\r\n                    workspace={workspace}\r\n                    onToggleFolder={this.onToggleFolder}\r\n                    isFolderOpen={this.state.isFolderOpen}\r\n                    IoMdArrowDropdown={IoMdArrowDropdown}\r\n                    CgViewComfortable={CgViewComfortable}\r\n                    onGettingCurrentBoard={this.onGettingCurrentBoard}\r\n                    onGettingCurrentBoardInWorkspace={this.onGettingCurrentBoardInWorkspace}\r\n                    addNewBoard={this.addNewBoard}\r\n                    addNewFloder={this.addNewFloder}\r\n                    addBoardInFolder={this.addBoardInFolder}\r\n                    removeFolder={this.removeFolder}\r\n                    updateFolder={this.updateFolder}\r\n                    removeBoard={this.removeBoard}\r\n                    editBoard={this.editBoard}\r\n                    moveFolder={this.moveFolder}\r\n                    moveBoard={this.moveBoard}\r\n                    moveBoardToFolder={this.moveBoardToFolder}\r\n                    isNewFolderCreated={this.state.isNewFolderCreated}\r\n                    onEndNewFolderUpdating={this.onEndNewFolderUpdating}\r\n                    updateWorkspace={this.updateWorkspace}\r\n                    deleteWorkspace={this.deleteWorkspace}\r\n                    onGettingCurrentWorkspace={this.onGettingCurrentWorkspace}\r\n                    onManageWorkspace={this.onManageWorkspace}\r\n                    toolbarActiveBtn={this.state.toolbarActiveBtn}\r\n                />\r\n                <BoardDetails\r\n                   isNewWorkspaceCreated={isNewWorkspaceCreated}\r\n                   onAddNewTable={this.onAddNewTable}\r\n                   onEditBoard={this.onEditBoard}\r\n                   getTaskValue={this.getTaskValue}\r\n                   removeTable={this.removeTable}\r\n                   onAddNewTask={this.onAddNewTask}\r\n                   onEditTask={this.onEditTask}\r\n                   onEditTable={this.onEditTable}\r\n                   onRemoveTask={this.onRemoveTask}\r\n                   openConversationModal={this.openConversationModal}\r\n                   updateWorkspace={this.updateWorkspace}\r\n                   deleteWorkspace={this.deleteWorkspace}\r\n                />\r\n                { \r\n                <div className={`conversation-modal-wrapper ${this.state.isOpenConversationModal?'':'hide'}`}>\r\n                    <div className={`conversation-modal ${this.state.isOpenConversationModal?' slide-left':'slide-right'}`}\r\n                    // tabIndex='0' \r\n                    // onBlur={()=>{\r\n                    // this.setState({isOpenConversationModal:false})}}\r\n                    >\r\n                        <GrClose className='conversation-close-btn' onClick={()=>{\r\n                        this.setState({isOpenConversationModal:false})}}\r\n\r\n                        />\r\n                        <ConversationModal \r\n                        isOpenConversationModal={this.state.isOpenConversationModal}\r\n                        onEditTask={this.onEditTask}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        workspaces: state.workspace.workspaces,\r\n        workspace: state.workspace.currWorkspace,\r\n        board: state.workspace.currBoard,\r\n        loggedInUser: state.user.loggedInUser,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadWorkspaces,\r\n    updateWorkspace,\r\n    updateCurrWorkspace,\r\n    getCurrBoard,\r\n    updateCurrBoard,\r\n    addWorkspace,\r\n    removeWorkspace,\r\n    updateUser\r\n}\r\nexport const Workspace = connect(mapStateToProps, mapDispatchToProps)(_Workspace)","export const cloudinaryService = {\n    uploadImg\n}\n\nasync function uploadImg(ev) {\n    const CLOUD_NAME = \"dzvebcsrp\"\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n\n    const formData = new FormData();\n    formData.append('file', ev.target.files[0])\n    formData.append('upload_preset', 'mister_toy');\n    try {\n        const res = await fetch(UPLOAD_URL, {\n            method: 'POST',\n            body: formData\n        })\n        const data = await res.json()\n        // console.log(data.secure_url);\n        return data\n\n    } catch (err) {\n        console.log(err);\n    }\n}\n","import React, { useEffect,useState } from 'react';\r\nimport { cloudinaryService } from '../services/cloudinarySerivice';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUser} from '../store/actions/userActions'\r\nimport { ImUserPlus } from \"react-icons/im\";\r\n\r\nexport function UploadImg({itemName}){\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const [img, setImg] = useState(itemName==='logo'?\r\n    'https://res.cloudinary.com/dzvebcsrp/image/upload/v1616327732/logo_xw7dyu.ico':loggedInUser.avatar\r\n    )\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n       if(itemName==='logo'&&loggedInUser&&loggedInUser.logoImg){\r\n        setImg(loggedInUser.logoImg)\r\n       }\r\n       if(itemName==='user'&&loggedInUser&&loggedInUser.avatar){\r\n        setImg(loggedInUser.avatar)\r\n       }\r\n    }, [loggedInUser,itemName])\r\n\r\n\r\n\r\n    const onUploadImg = async (ev) => {//make costume hook!!!!!!\r\n        ev.preventDefault()\r\n        const cloudImg = await cloudinaryService.uploadImg(ev)\r\n        const imgUrl = cloudImg.secure_url\r\n        if(imgUrl){\r\n            setImg(imgUrl)\r\n           if( itemName==='logo'){\r\n                const newUser= {\r\n                    ...loggedInUser,\r\n                    logoImg:imgUrl\r\n                }\r\n                dispatch(updateUser(newUser))\r\n           }\r\n           if( itemName==='user'){\r\n                const newUser= {\r\n                    ...loggedInUser,\r\n                    avatar:imgUrl\r\n                }\r\n                dispatch(updateUser(newUser))\r\n            }\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <form>\r\n            <label>\r\n                <input onChange={onUploadImg} type=\"file\"/>\r\n                <div style={{backgroundImage: `url(${img})`}}>\r\n                    {itemName==='user'&&<div className=\"before\">\r\n                            <ImUserPlus className='update-img-icon'/>\r\n                            <div className=\"text\">Change profile picture</div>\r\n                    </div>}\r\n                </div>\r\n            </label>\r\n        </form>\r\n    )\r\n}","import { Home } from './pages/Home.jsx'\r\nimport { About } from './pages/About.jsx'\r\nimport { Workspace } from './pages/Workspace.jsx'\r\nimport { UserDetails } from './pages/UserDetails.jsx'\r\n\r\nexport const routes=[\r\n  {\r\n    path: '/',\r\n    component: Home,\r\n  },\r\n  {\r\n    path: '/about',\r\n    component: About,\r\n  },\r\n  {\r\n    path: '/boards',\r\n    component: Workspace,\r\n  },\r\n  {\r\n    path: '/boards/:id',\r\n    component: Workspace,\r\n  },\r\n  {\r\n    path: '/users/:id',\r\n    component: UserDetails,\r\n  }\r\n]\r\n","import React, { useEffect,useState,useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUser} from '../store/actions/userActions'\r\nimport { UploadImg } from '../cmps/UploadImg'\r\nimport { BsPencil } from 'react-icons/bs'\r\nimport { RiUser3Fill, RiPhoneFill } from 'react-icons/ri'\r\nimport { HiOutlineMail } from 'react-icons/hi'\r\nimport { AiFillSkype,AiFillGift } from 'react-icons/ai'\r\nimport { IoLocationOutline } from 'react-icons/io5'\r\nimport { BiTime } from 'react-icons/bi'\r\nimport { BiCalendarStar } from 'react-icons/bi'\r\n\r\nexport function UserDetails(){\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const [name, setName] = useState(loggedInUser.username)\r\n    const [isUpdate, setUpdate] = useState(false)\r\n    const dispatch = useDispatch();\r\n    const inputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        setName(loggedInUser.username)\r\n    }, [loggedInUser])\r\n\r\n    const onUpdating=()=>{\r\n        if(loggedInUser.username===name)return\r\n        const newUser= {\r\n            ...loggedInUser,\r\n            username:name\r\n        }\r\n        dispatch(updateUser(newUser))\r\n    }\r\n\r\n    const headerTitles = [\r\n        'Personal Info',\r\n        'Working Status',\r\n        'Password',\r\n        'Preferences',\r\n        'Notifications',\r\n        'Email Integration',\r\n        'Sessions'\r\n    ]\r\n\r\n    const icons = [\r\n        <RiUser3Fill className=\"icon\"/>,\r\n        <HiOutlineMail className=\"icon\"/>,\r\n        <RiPhoneFill className=\"icon\"/>,\r\n        <AiFillSkype className=\"icon\"/>,\r\n        <IoLocationOutline className=\"icon\"/>,\r\n        <BiTime className=\"icon\"/>,\r\n        <AiFillGift className=\"icon\"/>,\r\n        <BiCalendarStar className=\"icon\"/>,\r\n    ]\r\n\r\n    const titles=[\r\n        'Title',\r\n        'Email',\r\n        'Phone',\r\n        'Skype',\r\n        'Location',\r\n        'Timezone',\r\n        'Birthday',\r\n        'Work Anniversary',\r\n    ]\r\n\r\n    const userDetails=[\r\n        'Professional Engineer of something',\r\n        `${loggedInUser.email}`,\r\n        'Add a phone number',\r\n        'Add a Skype number',\r\n        'Dallas, TX',\r\n        'Jerusalem',\r\n        'Every day 🎉',\r\n        'Add a work anniversary'\r\n    ]\r\n\r\n   \r\n    return (\r\n        <div className=\"user-details\">\r\n            <div className=\"details-header\">\r\n                <div className=\"upload-img-wrapper\">\r\n                    <UploadImg itemName='user'/>\r\n                </div>\r\n                <div className=\"updating-user-name-wrapper\">\r\n                {!isUpdate?\r\n                    <div className=\"user-name\" onClick={()=>{\r\n                        setUpdate(true)\r\n                        setTimeout(() => {\r\n                            if(inputRef&&inputRef.current){\r\n                                inputRef.current.focus()\r\n                            }\r\n                        }, 0);\r\n                    }}>\r\n                        <div>{name}</div>\r\n                        <BsPencil className=\"BsPencil\"/>\r\n                        <span className=\"label-text edit-name\">Edit name</span>\r\n                    </div>\r\n                    :\r\n                    <input \r\n                    className=\"update-name\"\r\n                    ref={inputRef} \r\n                    type=\"text\" \r\n                    value={name} \r\n                    onChange={(e)=>setName(e.target.value)}\r\n                    onBlur={()=>\r\n                        {\r\n                            onUpdating()\r\n                            setUpdate(false)\r\n                        }\r\n                    }\r\n                    onKeyDown={(ev) => {\r\n                        if (ev.key === 'Enter') {\r\n                            ev.target.blur()\r\n                        }\r\n                    }}\r\n                    />\r\n                }\r\n                </div>\r\n                <div className=\"header-navigation\">\r\n                    {headerTitles.map(title=>\r\n                        <div className=\"title\">{title}</div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"details-main\">\r\n                <div className=\"details-main-content-wrapper\">\r\n                    <div className='title'>Overview</div>\r\n                    {titles.map((title,idx)=>\r\n                    <div className=\"overview-row-container\">\r\n                        <div className=\"icon-wrapper\">{icons[idx]}</div>\r\n                        <div className=\"user-info-wrapper\">\r\n                                <div>{title}:</div>\r\n                                <div>{userDetails[idx]}</div>\r\n                        </div>\r\n                    </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState } from 'react';\r\nimport { IoMdNotificationsOutline, IoIosSearch } from 'react-icons/io'\r\nimport { BsGrid } from 'react-icons/bs'\r\nimport { AiOutlineUserAdd } from 'react-icons/ai'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from '../store/actions/userActions'\r\nimport { FiLogOut } from \"react-icons/fi\";\r\nimport { FaRegUser } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { UploadImg } from \"./UploadImg\"\r\n\r\n\r\nexport function Navbar(){\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const [activeBtn, setActiveBtn] = useState(null)\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const _logout=()=>{\r\n        dispatch(logout())\r\n        window.location.assign('/')\r\n    }\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if(window.location.hash.includes('boards')){\r\n                setActiveBtn('workspaces')\r\n            }\r\n        }, 0);\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"navbar-section\">\r\n            <div className=\"navbar-first-area\">\r\n           \r\n            {/* <input onChange={onUploadImg} type=\"file\"/> */}\r\n            \r\n   \r\n                <div className=\"logo upload-img-wrapper\">\r\n                    <UploadImg itemName='logo'/>\r\n                </div>\r\n                <Link to={`/boards`} >\r\n                    <div \r\n                    className={`icon-wrapper ${activeBtn==='workspaces'?'selected':''}`}\r\n                    onClick={()=>{setActiveBtn('workspaces')}} \r\n                    >\r\n                        <BsGrid className='navbar-icon'/>\r\n                        <span className=\"label-text\">Wrokspaces</span>\r\n                    </div>\r\n                </Link>\r\n                <div \r\n                className={`icon-wrapper ${activeBtn==='notifications'?'selected':''}`}\r\n                onClick={()=>{setActiveBtn('notifications')}} \r\n                >\r\n                    <IoMdNotificationsOutline className={`navbar-icon`}/>\r\n                    <span className=\"label-text\">Notifications</span>\r\n                </div>\r\n                <div \r\n                className={`icon-wrapper ${activeBtn==='downloads'?'selected':''}`} \r\n                onClick={()=>{setActiveBtn('downloads')}} \r\n                >\r\n                    <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clipPath=\"url(#a)\"><path d=\"M11.443 6.365L8.071 9.739m0 0L4.699 6.366M8.07 9.738V.667\" stroke=\"rgb(233, 233, 233)\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path><path d=\"M4.95 11.333l.554-.23a.6.6 0 0 0-.554-.37v.6zm6.1 0v-.6a.6.6 0 0 0-.554.37l.554.23zm-6.1-.6H1.199v1.2h3.75v-1.2zm-3.751 0a1.13 1.13 0 0 0-1.132 1.133h1.2a.07.07 0 0 1-.068.067v-1.2zM.067 11.866v3.145h1.2v-3.145h-1.2zm0 3.145a1.13 1.13 0 0 0 1.132 1.132v-1.2a.07.07 0 0 1 .068.068h-1.2zm1.132 1.132H14.8v-1.2H1.199v1.2zm13.602 0a1.13 1.13 0 0 0 1.132-1.132h-1.2a.07.07 0 0 1 .068-.068v1.2zm1.132-1.132v-3.145h-1.2v3.145h1.2zm0-3.145a1.13 1.13 0 0 0-1.132-1.133v1.2a.07.07 0 0 1-.068-.067h1.2zm-1.132-1.133H11.05v1.2H14.8v-1.2zm-4.305.37c-.408.98-1.349 1.63-2.496 1.63v1.2c1.627 0 3.008-.938 3.604-2.369l-1.108-.461zM8 12.733c-1.147 0-2.089-.65-2.496-1.63l-1.108.461c.596 1.431 1.976 2.37 3.604 2.37v-1.2z\" fill=\"rgb(233, 233, 233)\"></path></g><defs><clipPath id=\"a\"><path fill=\"#fff\" d=\"M0 0h16v16H0z\"></path></clipPath></defs></svg>\r\n                    <span className=\"label-text\">text text text</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"navbar-second-area\">\r\n                <div \r\n                className={`icon-wrapper ${activeBtn==='my week'?'selected':''}`} \r\n                onClick={()=>{setActiveBtn('my week')}} \r\n                >\r\n                    <svg width=\"22\" height=\"22\" viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M177.23 32.224V7.16a7.16 7.16 0 0 1 14.322 0v25.063h41.175c12.849 0 23.273 10.424 23.273 23.273v80.559a7.16 7.16 0 0 1-14.322 0V94.88H14.322v137.846c0 4.94 4.012 8.951 8.95 8.951h96.672a7.16 7.16 0 0 1 0 14.322H23.273C10.424 256 0 245.576 0 232.727V55.497c0-12.85 10.424-23.273 23.273-23.273h41.175V7.16a7.16 7.16 0 0 1 14.321 0v25.063h98.462zm64.448 48.335V55.497c0-4.94-4.012-8.952-8.95-8.952H23.272c-4.94 0-8.951 4.013-8.951 8.952v25.062h227.356zm2.098 98.77a7.16 7.16 0 0 1 10.127 10.126l-64.448 64.448a7.16 7.16 0 0 1-10.127 0l-32.224-32.224a7.16 7.16 0 0 1 10.127-10.127l27.16 27.16 59.385-59.384z\" fill=\"rgb(233, 233, 233)\" fillRule=\"nonzero\"></path></svg>\r\n                    <span className=\"label-text\">My Week</span>\r\n                </div>\r\n                <div \r\n                className={`icon-wrapper ${activeBtn==='add user'?'selected':''}`}\r\n                onClick={()=>{setActiveBtn('add user')}} \r\n                >\r\n                    <AiOutlineUserAdd className={`navbar-icon`} />\r\n                    <span className=\"label-text\">text text text</span>\r\n                </div>\r\n                <div \r\n                className={`icon-wrapper ${activeBtn==='search'?'selected':''}`}\r\n                onClick={()=>{setActiveBtn('search')}} \r\n                >\r\n                    <IoIosSearch className={`navbar-icon`}/>\r\n                    <span className=\"label-text\">text text text</span>\r\n                </div>\r\n                <div \r\n                className={`icon-wrapper ${activeBtn==='help'?'selected':''}`}\r\n                onClick={()=>{setActiveBtn('help')}} \r\n                >\r\n                    <svg stroke=\"rgb(233, 233, 233)\" width=\"22\" height=\"22\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" className=\"icon\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"rgb(233, 233, 233)\" strokeWidth=\"2\" d=\"M12,23 C12.5522847,23 13,22.5522847 13,22 C13,21.4477153 12.5522847,21 12,21 C11.4477153,21 11,21.4477153 11,22 C11,22.5522847 11.4477153,23 12,23 Z M12,18 L12,15 C12,13 13,13 15,12 C17,11 18,9.15767339 18,7 C18,3.6862915 15.3137085,1 12,1 C8.6862915,1 6,3.6862915 6,7\"></path></svg>\r\n                    <span className=\"label-text\">text text text</span>\r\n                </div>\r\n                <div className=\"avatar-image-wrapper\" \r\n                    tabIndex='0' onBlur={()=>{setIsOpenModal(false)}}\r\n                >\r\n                    <div \r\n                    className=\"avatar-image-border\" \r\n                    onClick={()=>{setIsOpenModal(curr=>!curr)}}\r\n                    >\r\n                        {/* <AiOutlineUser className=\"AiOutlineUser\" style={{ width: '34px', height: '34px' }}/> */}\r\n                        {loggedInUser&&<div className=\"user-avatar\" style={{backgroundImage: `url(${loggedInUser.avatar})`}}></div> }\r\n\r\n                    </div>\r\n                    {isOpenModal&&<div className='modal-default-style user-modal-wrapper'>\r\n                            <div className='modal-btn' onClick={()=>\r\n                                {\r\n                                    history.push(`/users/${loggedInUser._id}`)\r\n                                    setActiveBtn(null)\r\n                                    setIsOpenModal(false)\r\n                                }}\r\n                            >\r\n                                <FaRegUser/>\r\n                                <span>Update Profile</span>\r\n                            </div>\r\n                            <div className='modal-btn' onClick={_logout}>\r\n                                <FiLogOut/>\r\n                                <span>Logout</span>\r\n                            </div>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport {routes} from './routes.js'\nimport { Navbar } from './cmps/Navbar'\nimport { useSelector } from \"react-redux\";\n\nexport function App() {\n  const loggedInUser = useSelector(state => state.user.loggedInUser);\n  return (\n    <div className=\"App\">\n      {loggedInUser&&<Navbar/>}\n      <Switch>\n        { routes.map(route => <Route key={ route.path } exact component={ route.component } path={ route.path } />) }\n      </Switch>\n    </div>\n  )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { store } from './store/store'\nimport { App } from './App.jsx'\nimport './styles/global.scss'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}