{"version":3,"sources":["store/reducers/userReducer.js","store/reducers/systemReducer.js","store/reducers/workspaceReducer.js","store/reducers/boardReducer.js","store/reducers/index.js","store/store.js","services/httpService.js","services/userService.js","store/actions/userActions.js","store/actions/systemActions.js","cmps/GoogleOauth.jsx","pages/Login.jsx","cmps/LoginModal.jsx","pages/Home.jsx","pages/About.jsx","data/shortColorPicker.js","data/iconsPicker.js","cmps/CreateWorkspace.jsx","cmps/PopupModal.jsx","cmps/PinCheckbox.jsx","cmps/WorkspaceList.jsx","cmps/ForwardModal.jsx","cmps/ToolbarOptionsModal.jsx","cmps/BoardToolbar.jsx","services/workspaceService.js","store/actions/workspaceActions.js","cmps/AvailableFoldersList.jsx","cmps/BoardPreview.jsx","cmps/BoardList.jsx","cmps/CreateBoard.jsx","cmps/FolderPreview.jsx","cmps/FolderList.jsx","cmps/WorkspaceIconPicker.jsx","cmps/UpdateWorkspace.jsx","cmps/ToolbarMenuActionsBtnModal.jsx","cmps/ToolbarMenuActionsBtn.jsx","cmps/Search.jsx","services/boardService.js","cmps/FavoriteBoards.jsx","cmps/BoardToolbarMenu.jsx","cmps/BoardHeader.jsx","cmps/task-cells-width.js","cmps/UpdateLabelName.jsx","cmps/StatusLabelPreview.jsx","data/colorPicker.js","cmps/TaskStatus.jsx","data/stickers.js","cmps/TaskText.jsx","cmps/TaskCheckBox.jsx","cmps/TaskDate.jsx","cmps/TaskConversation.jsx","cmps/OwnerModal.jsx","cmps/DropdownEditLabelPreview.jsx","cmps/DropdownModal.jsx","cmps/TaskNumbersColumn.jsx","cmps/TaskTimeline.jsx","cmps/Task.jsx","cmps/TitleOptionsBtn.jsx","cmps/TableColumnPreview.jsx","cmps/TablePreview.jsx","cmps/MultipleActionsModal.jsx","services/socketService.js","cmps/BoardMain.jsx","cmps/NewWorkspaceBoardMain.jsx","cmps/BoardDetails.jsx","cmps/ConversationModal.jsx","cmps/ActivitiesModal.jsx","services/folderService.js","pages/Workspace.jsx","services/cloudinarySerivice.js","cmps/UploadImg.jsx","routes.js","pages/UserDetails.jsx","cmps/Navbar.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["localLoggedinUser","sessionStorage","user","JSON","parse","initialState","loggedInUser","users","isLoading","workspaces","currWorkspace","boards","currBoard","checkedTasks","boardWorkspace","conversationLocation","board","statusLabelList","lastSeen","rootReducer","combineReducers","system","state","action","type","filter","_id","userId","workspace","workspaceId","map","baords","baord","newBoard","currCheckedTask","task","taskId","location","baordId","newLabel","label","labelId","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","BASE_URL","axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","login","logout","signup","getUsers","httpService","getById","remove","update","removeFavBoard","addFavBoard","loginByGoogle","guestLogin","newUser","_handleLogin","userCred","clear","setItem","stringify","email","password","boardId","favBoards","_boardId","loadUsers","dispatch","userService","updateUser","toggleFavUserBoardList","length","_GoogleOauth","responseGoogle","userCreds","profileObj","avatar","imageUrl","username","givenName","props","closeModal","assign","clientId","buttonText","onSuccess","this","onFailure","cookiePolicy","Component","mapDispatchToProps","GoogleOauth","connect","_Login","msg","loginCred","signupCred","section","loginHandleChange","ev","target","name","value","setState","prevState","signupHandleChange","doLogin","preventDefault","then","doSignup","signupCreds","removeUser","onSignup","signupSection","onSubmit","className","onChange","placeholder","maxLength","loginSection","Fragment","canvasClassName","params","particles","number","density","enable","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","onClick","addFavMovieTxt","Login","LoginModal","isShown","onOpenModal","stopPropagation","React","_Home","showComponent","history","pathname","push","onGuestLogin","id","Home","withRouter","About","colorsPicker","iconsPicker","CreateWorkspace","setIsShown","addNewWorkspace","useState","newWorkspaceName","setNewWorkspaceName","newWorkspaceColor","setNewWorkspaceColor","newWorkspaceIcon","setNewWorkspaceIcon","isOpenModal","setIsOpenModal","inputEl","useRef","useEffect","setTimeout","current","focus","style","backgroundColor","tabIndex","onBlur","color","icon","onFocus","document","execCommand","ref","onKeyDown","key","PopupModal","children","PinCheckbox","useDispatch","useSelector","pinnedWorkspaces","includes","checked","setChecked","handleChange","unpinWorkspace","pinWorkspace","defaultChecked","WorkspaceList","onMoveObject","object","isCheckbox","search","setSearch","listOfWorkspaces","setListOfWorkspaces","e","toLowerCase","img","ForwardModal","btn","setMoveToObject","isFolderModal","toggleShownForwardModal","isWorkspaceIconPicker","itemList","moveToObject","onMouseOver","onMouseLeave","ToolbarOptionsModal","setIsOpenToolbarOptionsModal","onSortWorkspces","isSorted","onMouseDown","BoardToolbar","BsLightning","BsStar","BsThreeDots","onGettingCurrentWorkspace","onSetToolbarMenu","allWorkspaces","setWorkspaces","activeBtn","setActiveBtn","activeBtnClass","setActiveBtnClass","isOpenToolbarOptionsModal","isShownPinWorkspaceModal","setIsShownPinWorkspaceModal","btnEl","setIsSorted","pinedworkspaces","setPinedworkspaces","array","sort","b","localeCompare","idx","curr","val","workspaceService","query","save","add","addLabel","getStatusLabelList","editLabel","removeLabel","filterBy","addedWorkspace","isLastSeen","getCurrBoard","loadWorkspaces","updateWorkspace","updateCurrWorkspace","err","updateTaskConversation","updateCurrBoard","AvailableFoldersList","onMoveBoardToFolder","folders","folder","BoardPreview","onGettingCurrentBoard","CgViewComfortable","removeBoard","editBoard","moveBoard","moveBoardToFolder","scroll","cmp","onEditBoard","dimensions","setDimensions","setCurrWorkspace","boardRef","onGetCurrWorkspace","theWorkspace","forEach","_board","getBoundingClientRect","bottom","setBoardName","isUpdateName","setIsUpdateName","boardName","isShownMoveToWorkspaceModal","setIsShownMoveToWorkspaceModal","updateBoardName","blur","title","toggleModal","top","desc","updatedBoard","activities","createdAt","Date","now","BoardList","index","CreateBoard","addNewBoard","newBoardName","setNewBoardName","FolderPreview","IoMdArrowDropdown","addBoardInFolder","removeFolder","updateFolder","moveFolder","isNewFolderCreated","onEndNewFolderUpdating","isFolderOpen","setIsFolderOpen","folderName","setFolderName","folderRef","newFolder","updateFolderName","FolderList","WorkspaceIconPicker","newWorkspace","UpdateWorkspace","deleteWorkspace","onManageWorkspace","workspaceColor","setWorkspaceColor","workspaceIcon","setWorkspaceIcon","workspaceName","setWorkspaceName","ToolbarMenuActionsBtnModal","btnName","addNewFloder","content","getBtnOptions","ToolbarMenuActionsBtn","getBtnValue","Search","setFilteredFolders","setFilteredBoards","isSearchActive","setSearchActive","inputRef","item","boardService","addBoard","toString","Math","lastUpdated","dropdownLabels","uniqId","isPrivate","owner","tableColumns","taskKey","tables","tasks","conversations","package","dropdown","milestone","policyState","timeline","from","to","tags","files","weight","dateCompleted","progress","_folder","boardToRemove","currFolder","addFolder","folderId","addTable","newTable","repeat","removeTable","tableId","table","updateTable","updatedTable","addTask","currTable","userInput","newTask","byUser","date","getTime","removeTask","updateTask","updatedTask","substr","FavoriteBoards","favBoardsIds","workspaceBoards","setWorkspaceBoards","folderBoards","setFolderBoards","favoriteWorkspaceBoards","setFavoriteWorkspaceBoards","favoriteFolderBoards","setFavoriteFolderBoards","cuurBoard","updatedWorkspace","newWorkspaceToUpdate","folderWorkspace","newFolderToUpdate","boardInsideFolder","isBoardInsideFolder","cuurFolde","BoardToolbarMenu","IoIosArrowForward","isToolbarMenuClose","onToggleToolbarMenu","IoIosArrowBack","onGettingCurrentBoardInWorkspace","toolbarActiveBtn","setScroll","filteredFolders","filteredBoards","width","height","onScroll","_BoardHeader","createRef","focusText","handleChangeBoardName","handleChangeBoardDesc","changeToContentEditable","innerRef","editableBoardName","html","disabled","editableBoardDesc","prevProps","match","onAddNewTable","getFavBoardStyle","src","alt","openActivitiesModal","BoardHeader","getColumnWidth","columnName","UpdateLabelName","isUpdateLabelName","handelChangeLabelName","updateLabel","onUpdateLabelName","statusLabel","editableLabelName","select","StatusLabelPreview","isUpdateLabelColor","newLabelColor","currLabel","onToggleUpdateLabelColor","hideColorPicker","onChangeNewLabelColor","currColor","onRemoveNewLabelColor","onSaveColor","BsDroplet","provided","draggableProps","dragHandleProps","tabindex","onRemoveLabel","gridRowStart","gridRowEnd","onMouseEnter","TaskStatus","boardCopy","onEditTask","setIsStatusModalOpen","onAddNewLabel","newstatusLabelList","toggleUpdateLabel","handleDragEnd","destination","source","draggableId","statusLabelListCopy","splice","FaPencilAlt","isEditLabelsModalOpen","openEditLabelsModal","closeEditLabelsModal","onDragEnd","droppableId","droppableProps","TiDelete","stickers","customCategory","class","TaskText","setUpdatingText","text","setText","isUpdating","setUpdateText","isShowModal","setShowModal","sticker","dangerouslySetInnerHTML","__html","result","em","emoji","temp","searchStr","replace","replaceWithSticker","TaskCheckBox","check","setCheck","checkBox","toggleCheck","TaskDate","startDate","setStartDate","getDateValue","dayNum","monthNum","parseInt","month","getMonthName","ExampleCustomInput","forwardRef","dateFormat","selected","customInput","TaskConversation","openConversationModal","setConversations","OwnerModal","owners","setOwners","newUsers","setNewUsers","order","itemsArray","itemOrder","orderedArray","A","B","indexOf","IdList","getUserName","i","getLine","srcset","userName","removeOwner","updateTaskOwner","DropdownEditLabelPreview","onEditBoardLabel","onRemoveLabelFromBoard","setIsUpdating","setNewLabel","trim","DropdownModal","boardDropdownLabels","setBoardDropdownLabels","taskDropdownLabels","setTaskDropdownLabels","newDropdownLabels","setNewDropdownLabels","isEditLabels","setToggleEditLabels","onAddLabelToBoard","oldLabel","_label","taskLabelsIdArray","newLabels","onRemoveLabelFromTask","onAddLabelToTask","prev","TaskNumbersColumn","setUpdatingNumbers","numbers","setNumbers","setUpdateNumbers","TaskTimeline","endDate","setEndDate","setTimeline","diffDays","setDiffDays","isMouseEnter","setIsmouseEnter","updateTimeline","Intl","DateTimeFormat","formatToParts","day","f","day1","day2","monthNumber1","monthNumber2","month1","month2","differenceTime","round","daysBetween","p","closeOnScroll","dates","start","end","selectsRange","inline","Task","taskKeys","isDragging","onEditTable","unCheckTasks","currTask","setTask","isShowOptionsModal","setIsShowOptionsModal","isOwnerModalShown","setToggleOwnerModal","isDropdownModalShown","setToggleDropdownModal","isUpdatingText","isUpdatingNumbers","isChecked","setCheckTask","getCurrTime","setCurrTime","newInterval","setNewInterval","editableTaskName","modalPosition","setModalPosition","modalName","setCurrModalName","cellEl","isStatusModalOpen","setIsEditLabelsModalOpen","addCheckedTasks","handleChangeName","interval","setInterval","tick","clearInterval","moment","fromNow","lastUpdatedUser","getModalPosition","translateY","clientY","innerHeight","translateX","clientX","innerWidth","divOffsetS","x","nativeEvent","offsetX","y","offsetY","offsetWidth","divSizes","offsetHeight","position","left","transform","getTaskValue","slice","getColumnStyle","closeStatusModal","toggleStatusModal","getModalStyle","TitleOptionsBtn","toggleTitleOptionsModal","isShownTitleOptionsModal","closeTitleOptionsModal","tableColumn","divEl","getDefaultValue","column","newTablesArray","flatMap","tableObj","find","newTableObj","_TableColumnPreview","currTableColumn","isDivOnFocus","handleChangeGroupName","handleChangeGroupTitle","toggleFocusOnDiv","bool","dragHandle","isOpenTableColorModal","closeTableColorModal","isExpand","toggleExpandeTable","editableGroupName","editableGroupTitle","getTitleColumnStyle","IoMdNotifications","TableColumnPreview","TablePreview","HiPlusCircle","onAddNewTask","onRemoveTask","isShrink","onShrink","updateBoard","newTaskName","setNewTaskName","isInputBtnVisable","setIsInputBtnVisable","isShowTableOptionsModal","setIsShowTableOptionsModal","isHover","setIsHover","setIsOpenTableColorModal","tableCopy","setTableCopy","setExpandTable","allOwners","setAllOwners","allTablestatuses","setAllTablestatuses","statusTitles","setStatusTitles","statusesSum","setStatusesSum","colorModal","isShowAddColumnModal","setToggleAddColumnModal","idList","uniqIdList","Set","usersArray","list","statusesNameInUse","sortedList","sortedStatusesNameInUse","uniq","tablestatuses","num","cleanInput","toggleHover","EditBoard","newColumn","columnBtnsContent","getColumnInUseStyle","columnsInUse","property","getColumnBtnContent","btnIcon","addColumn","itemCopy","borderColor","updateTableColor","snapshot","isDraggingOver","onKeyUp","keyCode","addNewTaskKeyUp","split","join","getSumColumnContent","MultipleActionsModal","onUnCheckTasks","ids","descArray","seen","filteredTables","el","duplicate","has","socket","socketService","setup","io","terminate","on","eventName","cb","off","emit","broadcast","_BoardMain","onTest","txt","BsPlus","BoardMain","NewWorkspaceBoardMain","setIsShowModal","isUpdateDesc","setIsUpdateDesc","workspaceDesc","setWorkspaceDesc","nameInputEl","descInputEl","onUpdateDesc","BoardDetails","isNewWorkspaceCreated","ReplyMsgPreview","replyMsg","getUserById","conversation","onUpdateReplyLikes","likes","_conversation","replys","_reply","count","backgroundImage","ConversationPreview","onUpdateMsgLikes","attachmentBtns","isReplyActive","setIsReplyActive","reply","setReply","replyTextareaFocus","setReplyTextareaFocus","cur","cols","rows","newReplyMsg","onReplyMsg","ConversationModal","isOpenConversationModal","setCurrTable","setCurrTask","isActiveInput","setActiveInput","setMsg","inuptRef","editorBtns","newConversation","ActivitiesModal","getUser","time","activity","folderService","_Workspace","isOpenActivitiesModal","getCurrFolder","onToggleFolder","activitiesArray","_desc","unshift","cuurFolder","isMain","addWorkspace","removeWorkspace","editableName","newworkspace","Workspace","cloudinaryService","uploadImg","UPLOAD_URL","formData","FormData","append","fetch","body","json","UploadImg","itemName","setImg","logoImg","onUploadImg","cloudImg","imgUrl","secure_url","routes","path","component","setName","isUpdate","setUpdate","icons","userDetails","onUpdating","Navbar","useHistory","hash","viewBox","fill","xmlns","clipPath","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fillRule","App","route","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.89163285.chunk.js","sourcesContent":["let localLoggedinUser = null\r\nif (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user)\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: [],\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user}\r\n    case 'USER_REMOVE':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => user._id !== action.userId),\r\n      }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n\r\n    case 'UPDATE_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'ADD_FAV_BOARD':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_FAV_BOARD':\r\n      return { ...state, loggedInUser: action.user }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    default: return state;\r\n  }\r\n}\r\n","const initialState = {\r\n    workspaces: [],\r\n    currWorkspace:{},\r\n    boards:[],\r\n    currBoard: {},\r\n    checkedTasks:[],\r\n    boardWorkspace:{},\r\n    conversationLocation:{}\r\n}\r\n\r\nexport function workspaceReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_WORKSPACES':\r\n            return {\r\n                ...state,\r\n                workspaces: action.workspaces\r\n            }\r\n        case 'UPDATE_CURR_WORKSPACE':\r\n            return {\r\n            ...state,\r\n            currWorkspace: action.workspace\r\n            } \r\n        case 'UPDATE_BOARD_WORKSPACE':\r\n            return {\r\n            ...state,\r\n            boardWorkspace: action.workspace\r\n            }\r\n        case 'ADD_WORKSPACE':\r\n            const workspaces = [...state.workspaces, action.workspace]\r\n            return {\r\n                ...state,\r\n                workspaces,\r\n                currWorkspace: action.workspace\r\n                } \r\n        case 'REMOVE_WORKSPACE':\r\n            return {\r\n                ...state,\r\n                workspaces: state.workspaces.filter((workspace) => workspace._id !== action.workspaceId),\r\n            }\r\n        case 'UPDATE_WORKSPACE':\r\n            return {\r\n                ...state,\r\n                workspaces: state.workspaces.map(workspace => workspace._id === action.workspace._id?action.workspace:workspace )\r\n            } \r\n        case 'UPDATE_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: state.currWorkspace.baords.map( baord=> baord._id === action.newBoard._id?action.newBoard:baord )\r\n            } \r\n        case 'ADD_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: [...state.currWorkspace.baords, action.newBoard]\r\n        } \r\n        case 'REMOVE_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: state.currWorkspace.baords.filter( baord=> baord._id !== action.newBoard._id)\r\n        }\r\n        case 'UPDATE_BOARD':\r\n            return {\r\n                ...state,\r\n                currBoard: action.board\r\n            }\r\n        case 'SET_BOARD':\r\n            return {\r\n                ...state,\r\n                currBoard: action.board\r\n            }\r\n        case 'ADD_CHECKED_TASK':\r\n            return {\r\n                ...state,\r\n                checkedTasks: [...state.checkedTasks,action.currCheckedTask]\r\n            }  \r\n        case 'REMOVE_CHECKED_TASK':\r\n            return {\r\n                ...state,\r\n                checkedTasks: state.checkedTasks.filter(task=>task._id!==action.taskId)\r\n            } \r\n        case 'UPDATE_TASK_CONVERSATION':\r\n            return {\r\n                ...state,\r\n                conversationLocation: action.location\r\n            } \r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    board:{},\r\n    statusLabelList:[],\r\n    lastSeen:'177452dcf160.31ce41e0732050000000000000009'\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARD':\r\n            return {\r\n                ...state,\r\n                board: action.board\r\n            }\r\n        case 'SET_LAST_SEEN_BOARD':\r\n            return {\r\n                ...state,\r\n                lastSeen: action.baordId\r\n            }\r\n\r\n        case 'SET_STATUS_LABLE_LIST':\r\n            return {\r\n                ...state,\r\n                statusLabelList: action.statusLabelList\r\n            }\r\n        case 'ADD_STATUS_LABLE_LIST':\r\n            const statusLabelList = [...state.statusLabelList, action.newLabel]\r\n            return {...state, statusLabelList} \r\n        case 'UPDATE_STATUS_LABLE_LIST':\r\n            return {\r\n                ...state,\r\n                statusLabelList: state.statusLabelList.map(label => label._id === action.label._id?action.label:label )\r\n            }\r\n        case 'REMOVE_STATUS_LABLE_LIST':\r\n            return {\r\n                ...state,\r\n                statusLabelList: state.statusLabelList.filter((label) => label._id !== action.labelId),\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport {userReducer} from './userReducer';\r\nimport systemReducer from './systemReducer';\r\nimport {workspaceReducer} from './workspaceReducer';\r\nimport {boardReducer} from './boardReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  system: systemReducer,\r\n  user: userReducer,\r\n  workspace: workspaceReducer,\r\n  board: boardReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index.js';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import Axios from 'axios'\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? '/api/' : '//localhost:3030/api/'\r\n\r\nvar axios = Axios.create({\r\n  withCredentials: true,\r\n})\r\n\r\nexport default {\r\n  get(endpoint, data) {\r\n    return ajax(endpoint, 'GET', data)\r\n  },\r\n  post(endpoint, data) {\r\n    return ajax(endpoint, 'POST', data)\r\n  },\r\n  put(endpoint, data) {\r\n    return ajax(endpoint, 'PUT', data)\r\n  },\r\n  delete(endpoint, data) {\r\n    return ajax(endpoint, 'DELETE', data)\r\n  },\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n  try {\r\n    const res = await axios({\r\n      url: `${BASE_URL}${endpoint}`,\r\n      method,\r\n      data,\r\n    })\r\n    return res.data\r\n  } catch (err) {\r\n    console.log(\r\n      `Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`\r\n    )\r\n    console.dir(err)\r\n    if (err.response && err.response.status === 401) {\r\n      // window.location.assign('/')\r\n      // window.location.assign('/#/login')\r\n    }\r\n    throw err\r\n  }\r\n}\r\n\r\n","import httpService from './httpService'\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  signup,\r\n  getUsers,\r\n  getById,\r\n  remove,\r\n  update,\r\n  removeFavBoard,\r\n  addFavBoard,\r\n  loginByGoogle,\r\n  guestLogin\r\n}\r\n\r\nfunction getUsers() {\r\n  return httpService.get('user')\r\n}\r\n\r\nfunction getById(userId) {\r\n  return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n  return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n  const newUser = await httpService.put(`user/${user._id}`, user)\r\n  return _handleLogin(newUser)\r\n}\r\n\r\nasync function login(userCred) {\r\n  const user = await httpService.post('auth/login', userCred)\r\n  if(user){ \r\n    return _handleLogin(user)\r\n  }\r\n  // return _handleLogin(user)\r\n}\r\nasync function signup(userCred) {\r\n  const user = await httpService.post('auth/signup', userCred)\r\n  return _handleLogin(user)\r\n}\r\nasync function logout() {\r\n  await httpService.post('auth/logout')\r\n  sessionStorage.clear()\r\n}\r\n\r\nasync function loginByGoogle(userCred) {\r\n  const user = await httpService.post('auth/loginByGoogle', userCred)\r\n  return _handleLogin(user)\r\n}\r\n\r\nfunction _handleLogin(user) {\r\n  sessionStorage.setItem('user', JSON.stringify(user))\r\n  return user\r\n}\r\n\r\nasync function guestLogin() {\r\n  try {\r\n      const user = await login({ email: 'guest@gmail.com', password: '12345' });\r\n      return user\r\n  } catch (err) {\r\n      console.log('userService: Couldn\\'t login as guest');\r\n      throw err;\r\n  }\r\n}\r\n\r\nasync function addFavBoard(user,boardId){\r\n  user.favBoards = [boardId, ...user.favBoards]\r\n  const newUser = await httpService.put(`user/${user._id}`, user)\r\n  return _handleLogin(newUser)\r\n}\r\nasync function removeFavBoard(user,boardId){\r\n  user.favBoards = user.favBoards.filter(_boardId=>_boardId!==boardId)\r\n  const newUser = await httpService.put(`user/${user._id}`, user)\r\n  return _handleLogin(newUser)\r\n}\r\n","import userService from '../../services/userService'\r\nimport { loading, doneLoading } from './systemActions'\r\n\r\n// THUNK\r\nexport function loadUsers() {\r\n  return async (dispatch) => {\r\n    try {\r\n      // example for loading\r\n      dispatch(loading())\r\n      const users = await userService.getUsers()\r\n      dispatch({ type: 'SET_USERS', users })\r\n    } catch (err) {\r\n      console.log('UserActions: err in loadUsers', err)\r\n      // example for rerouting - after changing the store\r\n      // history.push('/some/path');\r\n    } finally {\r\n      dispatch(doneLoading())\r\n    }\r\n  }\r\n}\r\n// THUNK\r\nexport function removeUser(userId) {\r\n  return async (dispatch) => {\r\n    try {\r\n      await userService.remove(userId)\r\n      dispatch({ type: 'USER_REMOVE', userId })\r\n    } catch (err) {\r\n      console.log('UserActions: err in removeUser', err)\r\n    }\r\n  }\r\n}\r\n// THUNK\r\nexport function login(userCreds) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const user = await userService.login(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n      return user\r\n    } catch (err) {\r\n      console.log('UserActions: err in login', err)\r\n    }\r\n  }\r\n}\r\nexport function signup(userCreds) {\r\n  return async (dispatch) => {\r\n    const user = await userService.signup(userCreds)\r\n    dispatch({ type: 'SET_USER', user })\r\n  }\r\n}\r\nexport function logout() {\r\n  return async (dispatch) => {\r\n    await userService.logout()\r\n    dispatch({ type: 'SET_USER', user: null })\r\n  }\r\n}\r\n\r\nexport function loginByGoogle(userCreds) {\r\n  return async (dispatch) => {\r\n    const user = await userService.loginByGoogle(userCreds)\r\n    dispatch({ type: 'SET_USER', user })\r\n  }\r\n}\r\n\r\nexport function guestLogin() {\r\n  return async dispatch => {\r\n      try {\r\n          const user = await userService.guestLogin();\r\n          dispatch({ type: 'SET_USER', user })\r\n      } catch (err) {\r\n          console.log('userActions: Couldn\\'t login as a guest');\r\n          throw err;\r\n      }\r\n  }\r\n}\r\n\r\nexport function updateUser(newUser) {\r\n  return async (dispatch) => {\r\n    const user = await userService.update(newUser)\r\n    dispatch({ type: 'UPDATE_USER', user })\r\n  }\r\n}\r\n\r\nexport function toggleFavUserBoardList(loggedInUser,boardId){\r\n    const newFavBoardList = loggedInUser.favBoards.filter(_boardId=>_boardId===boardId)\r\n    if(newFavBoardList.length>0){\r\n      return async dispatch => {\r\n        try{\r\n            const user = await userService.removeFavBoard(loggedInUser,boardId)\r\n            dispatch({ type: 'REMOVE_FAV_BOARD', user})\r\n        }catch(err){\r\n            console.log('UserActions: err in removeFavoriteBoard', err); \r\n        }\r\n      }\r\n    }else{\r\n      return async (dispatch) => {\r\n        try{\r\n            const user = await userService.addFavBoard(loggedInUser,boardId)\r\n            dispatch({ type: 'ADD_FAV_BOARD', user})\r\n        }catch(err){\r\n            console.log('UserActions: err in addFavoriteBoard', err); \r\n        }\r\n      }\r\n    }\r\n}\r\n\r\n","export function loading() {\r\n  return { type: 'LOADING_START' }\r\n}\r\nexport function doneLoading() {\r\n  return { type: 'LOADING_DONE' }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { loginByGoogle } from '../store/actions/userActions'\r\n\r\nexport class _GoogleOauth extends Component {\r\n    responseGoogle = (response) => {\r\n        const userCreds = { \r\n            email: response.profileObj.email,\r\n            avatar:response.profileObj.imageUrl, \r\n            username: response.profileObj.givenName \r\n        }\r\n        this.props.loginByGoogle(userCreds)\r\n        this.props.closeModal()\r\n        window.location.assign('/#/boards/')\r\n    }\r\n       \r\n    render() {\r\n        return (\r\n           <div>\r\n                <GoogleLogin\r\n                    clientId=\"866960241942-jhfvtsh6b7adl5jae5cth72jlhug4i72.apps.googleusercontent.com\"\r\n                    buttonText=\"Login With Google\"\r\n                    onSuccess={this.responseGoogle}\r\n                    onFailure={this.responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                />\r\n           </div> \r\n        )}\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      users: state.user.users,\r\n      loggedInUser: state.user.loggedInUser,\r\n      isLoading: state.system.isLoading,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loginByGoogle\r\n}\r\nexport const GoogleOauth = connect(mapStateToProps, mapDispatchToProps)(_GoogleOauth)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Particles from 'react-particles-js'\r\nimport { GoogleOauth } from '../cmps/GoogleOauth'\r\n\r\nimport {\r\n  loadUsers,\r\n  removeUser,\r\n  login,\r\n  logout,\r\n  signup,\r\n  guestLogin\r\n} from '../store/actions/userActions'\r\n\r\nclass _Login extends Component {\r\n  state = {\r\n    msg: '',\r\n    loginCred: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    signupCred: {\r\n      email: '',\r\n      password: '',\r\n      username: '',\r\n    },\r\n    section: true,\r\n  }\r\n\r\n  loginHandleChange = (ev) => {\r\n    const { name, value } = ev.target\r\n    this.setState((prevState) => ({\r\n      loginCred: {\r\n        ...prevState.loginCred,\r\n        [name]: value,\r\n      },\r\n    }))\r\n  }\r\n\r\n  signupHandleChange = (ev) => {\r\n    const { name, value } = ev.target\r\n    this.setState((prevState) => ({\r\n      signupCred: {\r\n        ...prevState.signupCred,\r\n        [name]: value,\r\n      },\r\n    }))\r\n  }\r\n\r\n  doLogin = async (ev) => {\r\n    ev.preventDefault()\r\n    const { email, password } = this.state.loginCred\r\n    if (!email || !password) {\r\n      return this.setState({ msg: 'Please enter user/password' })\r\n    }\r\n    const userCreds = { email, password }\r\n    const user = this.props.login(userCreds)\r\n    user.then(data=>\r\n      {if(data){\r\n        this.setState({ loginCred: { email: '', password: '' } })\r\n        this.props.closeModal()\r\n        window.location.assign('/#/boards/')\r\n      }else{\r\n        return this.setState({ msg: 'Invalid email or password'})\r\n      }\r\n    })\r\n  }\r\n\r\n  doSignup = async (ev) => {\r\n    ev.preventDefault()\r\n    const { email, password, username } = this.state.signupCred\r\n    if (!email || !password || !username) {\r\n      return this.setState({ msg: 'All inputs are required!' })\r\n    }\r\n    const signupCreds = { email, password, username }\r\n    this.props.signup(signupCreds)\r\n    this.setState({ signupCred: { email: '', password: '', username: '' } })\r\n    this.props.closeModal()\r\n    window.location.assign('/#/boards/')\r\n  }\r\n\r\n  // onGuestLogin = async () => {\r\n  //   await this.props.guestLogin();\r\n  //   window.location.assign('/#/boards/')\r\n  // }\r\n\r\n  removeUser = (userId) => {\r\n    this.props.removeUser(userId)\r\n  }\r\n\r\n  onSignup = () => {\r\n    this.setState({ section: !this.state.section })\r\n  }\r\n\r\n  render() {\r\n    let signupSection = (\r\n      <form onSubmit={this.doSignup} className='signup-container'>\r\n        <input\r\n          className='login-input'\r\n          type='text'\r\n          name='email'\r\n          value={this.state.signupCred.email}\r\n          onChange={this.signupHandleChange}\r\n          placeholder='Email'\r\n        />\r\n        <br />\r\n        <input\r\n          className='login-input'\r\n          name='password'\r\n          type='password'\r\n          value={this.state.signupCred.password}\r\n          onChange={this.signupHandleChange}\r\n          placeholder='Password'\r\n        />\r\n        <br />\r\n        <input\r\n          className='login-input'\r\n          type='text'\r\n          name='username'\r\n          value={this.state.signupCred.username}\r\n          onChange={this.signupHandleChange}\r\n          placeholder='Username'\r\n          maxLength=\"10\"\r\n        />\r\n        <br />\r\n        <button className='login-btn'>Signup</button>\r\n      </form>\r\n    )\r\n    let loginSection = (\r\n      <form onSubmit={this.doLogin} className='login-container'>\r\n        <input\r\n          className='login-input'\r\n          type='text'\r\n          name='email'\r\n          value={this.state.loginCred.email}\r\n          onChange={this.loginHandleChange}\r\n          placeholder='Email'\r\n        />\r\n        <br />\r\n        <input\r\n          className='login-input'\r\n          type='password'\r\n          name='password'\r\n          value={this.state.loginCred.password}\r\n          onChange={this.loginHandleChange}\r\n          placeholder='Password'\r\n        />\r\n        <br />\r\n        <button className='login-btn'>Login</button>\r\n      </form>\r\n    )\r\n\r\n    const { loggedInUser } = this.props\r\n    return (\r\n      <React.Fragment>\r\n        <Particles\r\n          canvasClassName='example'\r\n          params={{\r\n            particles: {\r\n              number: {\r\n                value: 160,\r\n                density: {\r\n                  enable: false,\r\n                },\r\n              },\r\n              size: {\r\n                value: 3,\r\n                random: true,\r\n                anim: {\r\n                  speed: 4,\r\n                  size_min: 0.3,\r\n                },\r\n              },\r\n              line_linked: {\r\n                enable: false,\r\n              },\r\n              move: {\r\n                random: true,\r\n                speed: 1,\r\n                direction: 'top',\r\n                out_mode: 'out',\r\n              },\r\n            },\r\n            interactivity: {\r\n              events: {\r\n                onhover: {\r\n                  enable: true,\r\n                  mode: 'bubble',\r\n                },\r\n                onclick: {\r\n                  enable: true,\r\n                  mode: 'repulse',\r\n                },\r\n              },\r\n              modes: {\r\n                bubble: {\r\n                  distance: 250,\r\n                  duration: 2,\r\n                  size: 0,\r\n                  opacity: 0,\r\n                },\r\n                repulse: {\r\n                  distance: 400,\r\n                  duration: 4,\r\n                },\r\n              },\r\n            },\r\n          }}></Particles>\r\n        <div className='login-page'>\r\n        <button className='close-modal' onClick={this.props.closeModal}>\r\n              x\r\n          </button>\r\n          <h1 className='login-title'>\r\n            <div\r\n              className={`welcome-txt ${\r\n                this.props.addFavMovieTxt ? 'hide-txt' : ''\r\n              }`}>\r\n              <div>Welcome</div>\r\n              <div className='welcome-txt2'>\r\n                Sign in with your email address\r\n              </div>\r\n            </div>\r\n          </h1>\r\n          <h2 className='mag'>{this.state.msg}</h2>\r\n\r\n\r\n          <div className='auth-form'>\r\n\r\n            {!loggedInUser && this.state.section ? loginSection : signupSection}\r\n            <div className='login-txt'>\r\n              {`${this.state.section ? \"DON'T HAVE ACCOUNT YET?\" : ''}`}{' '}\r\n            </div>\r\n            <div className=\"google-oauth\">\r\n            <GoogleOauth className=\"google-oauth-btn\" closeModal={this.props.closeModal}/>\r\n            </div>\r\n            <div className='login-txt-btn' onClick={this.onSignup}>{`${\r\n              this.state.section ? 'Signup Here' : 'Go Back'\r\n            }`}</div>\r\n          </div>\r\n\r\n          <hr />\r\n         \r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: state.user.users,\r\n    loggedInUser: state.user.loggedInUser,\r\n    isLoading: state.system.isLoading,\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  removeUser,\r\n  loadUsers,\r\n  guestLogin\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)\r\n","import React from 'react'\r\nimport {Login} from '../pages/Login'\r\nexport class LoginModal extends React.Component {\r\n  state = {\r\n    isShown: true,\r\n  }\r\n  closeModal = () => {\r\n    this.setState({ isShown: false })\r\n    this.props.onOpenModal()\r\n  }\r\n  render() {\r\n    const { isShown } = this.state\r\n    return (\r\n      <div\r\n        className={`modal-wrapper ${isShown ? '' : 'hide'}`}\r\n        onClick={this.closeModal}>\r\n        <div className='login-modal-content' onClick={(ev) => ev.stopPropagation()}>\r\n          <Login closeModal={this.closeModal} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions'\r\nimport { LoginModal } from '../cmps/LoginModal';\r\nimport {guestLogin} from '../store/actions/userActions'\r\n\r\nexport class _Home extends Component {\r\n    state ={\r\n        showComponent: false\r\n    }\r\n    onOpenModal=()=>{\r\n        this.setState({\r\n            showComponent: !this.state.showComponent\r\n          });\r\n    }\r\n    logout=()=>{\r\n        if(this.props.history.location.pathname==='/boards'){\r\n            this.props.history.push('/')\r\n            this.props.logout()\r\n        }else{\r\n            this.props.logout()\r\n        }\r\n    }\r\n\r\n    onGuestLogin = async () => {\r\n        await this.props.guestLogin();\r\n        window.location.assign('/#/boards/')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home-page\">\r\n                <div className=\"login-btn\">\r\n                {!this.props.loggedInUser&& \r\n                <div className=\"user-login  after-canvas\" onClick={this.onOpenModal}>Log in</div>\r\n                }\r\n                {this.props.loggedInUser && <div className=\"user-name\">Hello {this.props.loggedInUser.username}</div>}\r\n                {this.props.loggedInUser&&<div id=\"logout-btn\" onClick={this.logout}>Logout</div>}\r\n\r\n                </div>\r\n                {!this.props.loggedInUser&& <div className=\"login-btn\">\r\n                <div className=\"user-login  after-canvas\" onClick={this.onGuestLogin}>\r\n                    Try as a guest\r\n                </div>\r\n                </div>}\r\n                {this.state.showComponent&&<LoginModal onOpenModal={this.onOpenModal}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser, \r\n        users: state.user.users,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout,\r\n    guestLogin\r\n}\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Home))","import React, { Component } from 'react'\r\n\r\nexport class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>about</div>\r\n        )\r\n    }\r\n}\r\n","export const colorsPicker = [\r\n    '#f368e0',\r\n    '#FC427B',\r\n    '#e84118',\r\n    '#ff6b6b',\r\n    '#ff9f43',\r\n    '#f3a683',\r\n    '#feca57',\r\n    '#fbc531',\r\n    '#4cd137',\r\n    '#1dd1a1',\r\n    '#01a3a4',\r\n    '#48dbfb',\r\n    '#54a0ff',\r\n    '#00a8ff',\r\n    '#487eb0',\r\n    '#273c75',\r\n    '#3B3B98',\r\n    '#341f97',\r\n    '#5f27cd',\r\n    '#9c88ff',\r\n    '#D6A2E8',\r\n    // '#ff9ff3',\r\n    // '#f8a5c2',\r\n    // '#f78fb3',\r\n    // '#c8d6e5',\r\n    // '#7f8fa6',\r\n    // '#353b48',\r\n    // 'black'\r\n]","export const iconsPicker = [\r\n    'A',\r\n    'B',\r\n    'C',\r\n    'D',\r\n    'R',\r\n    'T',\r\n    'U',\r\n    'I',\r\n    'O',\r\n    'P',\r\n    'L',\r\n    'Q',\r\n    'Z',\r\n    'E',\r\n    'V',\r\n    'M',\r\n    'N',\r\n    'G',\r\n    'J',\r\n    'H',\r\n]","import React, { useState,useRef,useEffect } from 'react';\r\nimport { FaPencilAlt } from 'react-icons/fa'\r\nimport { SiPandora } from 'react-icons/si';\r\nimport { BiCheck } from 'react-icons/bi';\r\nimport {colorsPicker } from '../data/shortColorPicker.js';\r\nimport {iconsPicker } from '../data/iconsPicker';\r\n\r\nexport function CreateWorkspace({setIsShown,addNewWorkspace}) {\r\n\r\n    const[newWorkspaceName,setNewWorkspaceName]=useState('New Workspace')\r\n    const[newWorkspaceColor,setNewWorkspaceColor]=useState('#f368e0')\r\n    const[newWorkspaceIcon,setNewWorkspaceIcon]=useState('M')\r\n    const[isOpenModal,setIsOpenModal]=useState(false)\r\n\r\n    const inputEl = useRef()\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            inputEl.current.focus()\r\n        }, 0); \r\n    }, [])\r\n    const focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    const handleChangeName =(ev)=>{\r\n        setNewWorkspaceName(ev.target.value)\r\n    }\r\n\r\n    return (\r\n    <div className=\"create-workspace create-item-wrapper\"\r\n     >\r\n        <div className=\"create-item-title\">Create Workspace</div>\r\n        <div\r\n            className=\"workspace-icon\"  \r\n            style={{backgroundColor:`${newWorkspaceColor}`}}\r\n            onClick={()=>{setIsOpenModal(true)}}\r\n            tabIndex=\"0\"\r\n            onBlur={()=>{setIsOpenModal(false)}}\r\n            >\r\n           {newWorkspaceIcon}\r\n           {!isOpenModal&&<div className=\"workspace-icon-edit\" >\r\n               <div><FaPencilAlt className=\"workspace-edit-pencil\"/></div>\r\n               <div>Edit</div>\r\n           </div>}\r\n           {isOpenModal&&<div className=\" modal-default-style workspace-icon-modal\">\r\n                <div className=\"small-font\">Background color</div>\r\n                <div className=\"workspace-color-picker\">\r\n                    {colorsPicker.map(color=>\r\n                        <div className=\"workspace-color\" style={{backgroundColor:`${color}`}}\r\n                         onClick={()=>setNewWorkspaceColor(color)}\r\n                         >\r\n                             {newWorkspaceColor===color&&<BiCheck/>}\r\n                         </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"small-font\">Icon</div>\r\n                <div className=\"icon-picker\">\r\n                    {iconsPicker.map(icon=>\r\n                        <div className=\"icon\"\r\n                        style={{backgroundColor:`${newWorkspaceColor}`}}\r\n                         onClick={()=>setNewWorkspaceIcon(icon)}\r\n                         >\r\n                           {icon}\r\n                         </div>\r\n                    )}\r\n                </div>\r\n           </div>}\r\n        </div>\r\n        <div className=\"workspace-name small-font\">Workspace name</div>\r\n        <input \r\n            className=\"new-item-input\"\r\n            type=\"text\" \r\n            value={newWorkspaceName} \r\n            onChange={handleChangeName}\r\n            onFocus={focusText}\r\n            ref={inputEl}\r\n            onKeyDown={(ev) => {\r\n                if (ev.key === 'Enter') {\r\n                    if(newWorkspaceName.length<1)return\r\n                    addNewWorkspace(newWorkspaceName,newWorkspaceColor,newWorkspaceIcon)\r\n                    setIsShown(false)\r\n                }\r\n            }}\r\n        />\r\n        <div className=\"btns-container\">\r\n            <div className=\"cancel-btn\" onClick={ ()=>{setIsShown(false)} }>Cancel</div>\r\n            <div className='add-btn' onClick={()=>{\r\n            if(newWorkspaceName.length<1)return\r\n            addNewWorkspace(newWorkspaceName,newWorkspaceColor,newWorkspaceIcon)\r\n            setIsShown(false)\r\n            }}>Create Workspace</div>\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\nimport { IoCloseOutline } from 'react-icons/io5'\r\n\r\nexport function PopupModal({setIsShown,children}) {\r\n    return (\r\n        <div className={ `modal-wrapper` }>\r\n            <div className=\"modal-content\" onClick={ (ev) => ev.stopPropagation() }>\r\n                <div className=\"close-popup-modal\" onClick={ ()=>{setIsShown(false)} }><IoCloseOutline className=\"icon\"/></div>\r\n               { children }\r\n            </div>\r\n        </div >\r\n    )\r\n}","import React, { useState,useRef,useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUser } from '../store/actions/userActions'\r\n\r\nexport function PinCheckbox({workspace}){\r\n\r\n    const dispatch = useDispatch();\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const [checked, setChecked] = useState(loggedInUser.pinnedWorkspaces.includes(workspace._id))\r\n   \r\n\r\n    useEffect(() => {\r\n        setChecked(loggedInUser.pinnedWorkspaces.includes(workspace._id))\r\n    }, [workspace,loggedInUser.pinnedWorkspaces.length])\r\n\r\n\r\n    function handleChange(workspaceId) {\r\n        checked?unpinWorkspace(workspaceId):pinWorkspace(workspaceId)\r\n    }\r\n\r\n    function pinWorkspace(workspaceId) {\r\n        const newUser= {\r\n            ...loggedInUser,\r\n            pinnedWorkspaces:[\r\n                ...loggedInUser.pinnedWorkspaces,\r\n                workspaceId\r\n            ]\r\n        }\r\n        dispatch(updateUser(newUser))\r\n    }\r\n\r\n    function unpinWorkspace(workspaceId) {\r\n        const newUser= {\r\n            ...loggedInUser,\r\n            pinnedWorkspaces:loggedInUser.pinnedWorkspaces.filter(id=>id!==workspaceId)\r\n        }\r\n        dispatch(updateUser(newUser))\r\n    }\r\n\r\n    return(\r\n        <input type=\"checkbox\"\r\n                className=\"checkbox\"\r\n                defaultChecked={checked}\r\n                onChange={()=>handleChange(workspace._id)}\r\n        />\r\n    )\r\n}\r\n","import React, { useState,useRef,useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { PinCheckbox } from \"./PinCheckbox\";\r\n\r\nexport function WorkspaceList({\r\n    onMoveObject,\r\n    object,\r\n    isCheckbox,\r\n    search,\r\n    setSearch\r\n}){\r\n\r\n    const workspaces = useSelector(state => state.workspace.workspaces);\r\n    const currWorkspace = useSelector(state => state.workspace.currWorkspace);\r\n    const [listOfWorkspaces, setListOfWorkspaces] = useState(\r\n        object==='insideFolder'?\r\n        workspaces:\r\n        workspaces.filter(workspace=>workspace._id!==currWorkspace._id)\r\n    );\r\n    useEffect(() => {\r\n        object==='insideFolder'||isCheckbox?\r\n        setListOfWorkspaces(workspaces):\r\n        setListOfWorkspaces(\r\n            workspaces.filter(workspace=>workspace._id!==currWorkspace._id)\r\n        )\r\n    }, [currWorkspace,workspaces,object,isCheckbox])\r\n    return(\r\n        <div>\r\n            <input type=\"search\" placeholder=\"Search Workspace\" className=\"forward-modal-search-input\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n           {    listOfWorkspaces.map(workspace=>\r\n                    workspace.name.toLowerCase().includes(search.toLowerCase())?\r\n                    <div \r\n                    className={`modal-btn item-actions-btn forward-modal-btn ${isCheckbox?'remove-pointer':''}`}\r\n                    key={workspace._id} \r\n                    onClick={()=>{\r\n                        if(isCheckbox){\r\n                            return\r\n                        }\r\n                        onMoveObject(workspace)\r\n                    }}\r\n                    >\r\n                        <div>\r\n                            <div \r\n                            className=\"workspace-icon\" \r\n                            style={{backgroundColor:workspace.color}}\r\n                            >{workspace.img}</div>\r\n                            <span  className=\"workspace-name\">{workspace.name}</span>\r\n                        </div>\r\n                       {isCheckbox&&\r\n                       <PinCheckbox workspace={workspace}/>\r\n                        }\r\n                        \r\n                    </div>:\r\n                    null\r\n                )\r\n           }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState,useRef,useEffect } from 'react';\r\nimport {IoArrowForwardCircleOutline } from 'react-icons/io5'\r\nimport { IoIosArrowForward } from 'react-icons/io'\r\nexport function ForwardModal({\r\n    children,btn,setMoveToObject,isFolderModal,\r\n    toggleShownForwardModal,isWorkspaceIconPicker,\r\n    itemList,moveToObject,setSearch\r\n\r\n}) {\r\n    const [isShown, setIsShown] = useState(false);\r\n\r\n    useEffect(() => {\r\n        toggleShownForwardModal(isShown)\r\n    }, [isShown,toggleShownForwardModal])\r\n\r\n    return (\r\n        <div className='forward-modal-btn-wrapper'\r\n        onMouseOver={()=>setIsShown(true)}\r\n        onMouseLeave={()=>{\r\n            setIsShown(false)\r\n            if(isFolderModal){\r\n                setMoveToObject(null)\r\n            }\r\n            (itemList||moveToObject)&&setSearch('')\r\n        }}\r\n       >\r\n           <div  \r\n           className={`modal-btn item-actions-btn forward-modal-btn ${isShown?'open-modal':''} `}\r\n           >\r\n                {btn}\r\n               <IoIosArrowForward className=\"icon\"/>\r\n           </div>\r\n           {\r\n                   isShown&&\r\n                   <div \r\n                   className={`modal-default-style ${isWorkspaceIconPicker?'menu-icon-picker':'forward-modal'}\r\n                   ${itemList||moveToObject?'items-list':''}\r\n                   `}\r\n                   >\r\n                        {children}\r\n                   </div>\r\n           }\r\n       </div>     \r\n    );\r\n}\r\n","import React, { useEffect,useState } from 'react';\r\nimport { IoIosArrowForward,IoIosAddCircleOutline } from 'react-icons/io'\r\nimport {VscPinned } from 'react-icons/vsc'\r\nimport {MdSortByAlpha } from 'react-icons/md'\r\nimport { WorkspaceList } from './WorkspaceList';\r\nimport { ForwardModal } from \"./ForwardModal\";\r\n\r\nexport function ToolbarOptionsModal({\r\n    setIsShown,\r\n    setIsOpenToolbarOptionsModal,\r\n    toggleShownForwardModal,\r\n    onSortWorkspces,\r\n    isSorted\r\n}){\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    return(\r\n    <div className=\"modal-default-style item-actions-modal toolbar-options-modal\">\r\n        <div className=\"modal-btn item-actions-btn\" onMouseDown={()=>{\r\n            setIsShown(true)\r\n            setIsOpenToolbarOptionsModal(false)\r\n            }}\r\n        >\r\n            <IoIosAddCircleOutline className=\"icon\"/>\r\n           <span>Add new workspace</span>\r\n        </div>\r\n        <ForwardModal  \r\n        btn={<div>\r\n                <VscPinned className=\"icon\"/>\r\n                <span>Pin workspaces</span>\r\n            </div>\r\n        }\r\n        toggleShownForwardModal={toggleShownForwardModal}\r\n        itemList={true}\r\n        setSearch={setSearch} \r\n        >\r\n            <div className=\"pin-workspace-title\">Choose Workspace to pin on menu</div>\r\n            <WorkspaceList \r\n            isCheckbox = {true}\r\n            search={search} \r\n            setSearch={setSearch} \r\n            />\r\n        </ForwardModal>\r\n        <div className=\"modal-btn item-actions-btn\"\r\n         onMouseDown={()=>{\r\n            onSortWorkspces()\r\n            setIsOpenToolbarOptionsModal(false)\r\n        }}\r\n        >\r\n            <MdSortByAlpha className=\"icon\"/>\r\n            <span>Sort by {`${isSorted?'default':'alphabetical'}`} order</span>\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React, { useEffect,useState,useRef } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { CreateWorkspace } from \"./CreateWorkspace\";\r\nimport { PopupModal } from \"./PopupModal\";\r\nimport { ToolbarOptionsModal } from \"./ToolbarOptionsModal\";\r\n\r\nexport function BoardToolbar({BsLightning, BsStar, BsThreeDots, onGettingCurrentWorkspace,addNewWorkspace,onSetToolbarMenu}) {\r\n    const allWorkspaces = useSelector(state => state.workspace.workspaces);\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const [workspaces,setWorkspaces] = useState(allWorkspaces.filter(\r\n        workspace=>loggedInUser.pinnedWorkspaces.includes(workspace._id))\r\n        )\r\n    const currWorkspace = useSelector(state => state.workspace.currWorkspace);\r\n    const [activeBtn, setActiveBtn] = useState(currWorkspace._id)\r\n    const [activeBtnClass, setActiveBtnClass] = useState()\r\n    const [isShown, setIsShown] = useState(false)\r\n    const [isOpenToolbarOptionsModal, setIsOpenToolbarOptionsModal] = useState(false)\r\n    const [isShownPinWorkspaceModal, setIsShownPinWorkspaceModal] = useState(false)\r\n    const btnEl = useRef()\r\n    const [isSorted, setIsSorted] = useState(false)\r\n    const [pinedworkspaces, setPinedworkspaces] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setWorkspaces(allWorkspaces.filter(\r\n            workspace=>loggedInUser.pinnedWorkspaces.includes(workspace._id))\r\n            )\r\n    }, [loggedInUser,loggedInUser.pinnedWorkspaces,allWorkspaces])\r\n\r\n    useEffect(() => {\r\n        setActiveBtn(currWorkspace._id)\r\n    }, [currWorkspace,workspaces])\r\n    \r\n    useEffect(() => {\r\n        setActiveBtnClass(activeBtn)\r\n        onSetToolbarMenu(activeBtn)\r\n    }, [activeBtn,onSetToolbarMenu])\r\n\r\n    useEffect(() => {\r\n        if(!isShownPinWorkspaceModal){\r\n            // if(btnEl.current){\r\n            //     setTimeout(() => {\r\n            //         btnEl.current.focus()\r\n            //     }, 0);\r\n            // }\r\n            setTimeout(() => {\r\n                if(btnEl&&btnEl.current){\r\n                    btnEl.current.focus()\r\n                }\r\n            }, 0);\r\n        }\r\n    }, [isShownPinWorkspaceModal])\r\n\r\n    const toggleShownForwardModal=(val)=>{\r\n        setIsShownPinWorkspaceModal(val)\r\n    }\r\n\r\n    function onSortWorkspces() {\r\n        setIsSorted(curr=>!curr)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isSorted){\r\n            let array = [...workspaces]\r\n            array.sort((a, b) => a.name.localeCompare(b.name)) \r\n            setPinedworkspaces(array)\r\n        }else{\r\n            setPinedworkspaces(workspaces)\r\n        }\r\n    }, [isSorted,workspaces])\r\n   \r\n\r\n    if (!pinedworkspaces) return <div>Loading....</div>\r\n    return (\r\n    <div className=\"board-toolbar\">\r\n        <div className=\"board-first-area\">\r\n            <div className=\"icon-wrapper\">\r\n                <BsLightning \r\n                className={`tollbar-icon ${activeBtnClass==='lightning'?'selected':''}`}\r\n                onClick={()=>setActiveBtn('lightning')}\r\n                />\r\n                <span className=\"label-text\">Quick Search</span>\r\n            </div>\r\n            <div className=\"icon-wrapper\">\r\n                <BsStar \r\n                className={`tollbar-icon ${activeBtnClass==='favorite'?'selected':''}`}\r\n                onClick={()=>setActiveBtn('favorite')}\r\n                />\r\n                <span className=\"label-text\">Favorite boards</span>\r\n            </div>\r\n            {\r\n                pinedworkspaces.map((workspace,idx)=>\r\n                    <div key={workspace._id}\r\n                    className={`workspace-wrapper ${activeBtnClass===workspace._id?'selected':''}`}\r\n                    onClick={()=>setActiveBtn(workspace._id)}\r\n                    >\r\n                        <div \r\n                        className=\"workspace-icon\" \r\n                        onClick={()=>onGettingCurrentWorkspace(workspace)}\r\n                        style={{backgroundColor:workspace.color}}\r\n                        >{workspace.img}</div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        <div className=\"board-second-area\">\r\n            <div className=\"icon-wrapper\"\r\n            tabIndex=\"0\"\r\n            onClick={()=>{setIsOpenToolbarOptionsModal(curr=>!curr)}}\r\n            onBlur={()=>{\r\n                setIsOpenToolbarOptionsModal(isShownPinWorkspaceModal)\r\n            }}\r\n            ref={btnEl}\r\n            >\r\n                <BsThreeDots\r\n                className={`tollbar-icon ${isOpenToolbarOptionsModal?'selected':''}`}\r\n                />\r\n            </div>\r\n\r\n            {isOpenToolbarOptionsModal&&\r\n                <ToolbarOptionsModal \r\n                setIsOpenToolbarOptionsModal={setIsOpenToolbarOptionsModal}\r\n                setIsShown={setIsShown}\r\n                toggleShownForwardModal={toggleShownForwardModal}\r\n                onSortWorkspces={onSortWorkspces}\r\n                isSorted={isSorted}\r\n                />\r\n            }\r\n        </div>\r\n        {isShown&&<PopupModal setIsShown={setIsShown} >\r\n            <CreateWorkspace setIsShown={setIsShown} addNewWorkspace={addNewWorkspace}/>\r\n        </PopupModal>}\r\n    </div>\r\n    );\r\n}","import httpService from './httpService'\r\n\r\nexport const workspaceService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n    add,\r\n    addLabel,\r\n    editLabel,\r\n    removeLabel\r\n    \r\n}\r\n\r\n\r\nfunction query(filterBy) {\r\n    // const queryStr = `?search=${filterBy.search}&minYear=${filterBy.minYear}&maxYear=${filterBy.maxYear}&type=${filterBy.type}`;\r\n    // return httpService.get(`workspace${queryStr}`);\r\n    return httpService.get('workspace')\r\n}\r\n\r\nfunction getById(workspaceId) {\r\n    return httpService.get(`workspace/${workspaceId}`)\r\n}\r\n\r\nfunction save(workspace) {\r\n    return httpService.put(`workspace/${workspace._id}`, workspace)\r\n}\r\n\r\n\r\nfunction remove(workspaceId) {\r\n    return httpService.delete(`workspace/${workspaceId}`);\r\n}\r\n\r\nasync function add(workspace) {\r\n    const addedWorkspace  = await httpService.post('workspace', workspace);\r\n    return  addedWorkspace\r\n}\r\n\r\n//StatusLabelList\r\nasync function getCurrBoard() {\r\n    const workspaces = await query()\r\n    // console.log(\"workspaces from query:\",workspaces)\r\n    const currBoard = await workspaces.map(workspace=>workspace.boards.filter(board=>board.isLastSeen===true))[0]\r\n    return currBoard\r\n}\r\n\r\nfunction getStatusLabelList() {\r\n   const board = getCurrBoard()\r\n//    console.log(\"board.statusLabelList\",board.statusLabelList)\r\n   return board.statusLabelList\r\n}\r\nfunction addLabel(newLabel) {\r\n   let statusLabelList = getStatusLabelList()\r\n   statusLabelList = [...statusLabelList, newLabel]\r\n   return statusLabelList\r\n}\r\nfunction editLabel(newLabel) {\r\n    let statusLabelList = getStatusLabelList()\r\n    statusLabelList.map(label=>label._id===newLabel._id?newLabel:label)\r\n    return statusLabelList\r\n}\r\nfunction removeLabel(labelId) {\r\n    let statusLabelList = getStatusLabelList()\r\n    statusLabelList = statusLabelList.filter(label=>label._id!==labelId)\r\n    return statusLabelList\r\n}","import { workspaceService } from '../../services/workspaceService'\r\nimport { loading, doneLoading } from './systemActions';\r\n\r\nexport function loadWorkspaces(filterBy) {\r\n  \r\n    return async dispatch => {\r\n        try{\r\n            dispatch(loading());\r\n            const workspaces = await workspaceService.query(filterBy);\r\n            dispatch({ type: 'SET_WORKSPACES', workspaces })\r\n        }catch(err){\r\n            console.log('WorkspaceActions: err in loadWorkspaces', err);\r\n        }finally{\r\n            dispatch(doneLoading());\r\n        }\r\n    }\r\n}\r\n\r\nexport function addWorkspace(newworkspace) {\r\n    return async dispatch => {\r\n        try{\r\n          const workspace = await workspaceService.add(newworkspace)\r\n            dispatch({ type: 'ADD_WORKSPACE', workspace})\r\n            return workspace\r\n        }catch(err){\r\n            console.log('WorkspaceActions: err in addWorkspace', err); \r\n        }\r\n    }\r\n}\r\n\r\nexport function updateWorkspace(workspace) {\r\n    return async dispatch => {\r\n        try{\r\n            await workspaceService.save(workspace)\r\n            dispatch({ type: 'UPDATE_WORKSPACE', workspace})\r\n        }catch(err){\r\n            console.log('WorkspaceActions: err in updateWorkspace', err); \r\n        }\r\n    }\r\n}\r\n\r\nexport function removeWorkspace(workspaceId) {\r\n    return async (dispatch) => {\r\n      try {\r\n        await workspaceService.remove(workspaceId)\r\n        dispatch({ type: 'REMOVE_WORKSPACE', workspaceId })\r\n      } catch (err) {\r\n        console.log('WorkspaceActions: err in removeWorkspace', err)\r\n      }\r\n    }\r\n  }\r\n\r\n    \r\nexport function updateCurrWorkspace(workspace) {\r\n    return async (dispatch) => {\r\n      try {\r\n        dispatch({ type: 'UPDATE_CURR_WORKSPACE', workspace })\r\n      } catch (err) {\r\n        console.log('WorkspaceActions: err in updateCurrWorkspace', err)\r\n      }\r\n    }\r\n}\r\nexport function updateBoardWorkspace(workspace) {\r\n    return async (dispatch) => {\r\n      try {\r\n        dispatch({ type: 'UPDATE_BOARD_WORKSPACE', workspace })\r\n      } catch (err) {\r\n        console.log('WorkspaceActions: err in updateBoardWorkspace', err)\r\n      }\r\n    }\r\n}\r\n\r\nexport function updateTaskConversation(location) {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: 'UPDATE_TASK_CONVERSATION', location })\r\n    } catch (err) {\r\n      console.log('WorkspaceActions: err in updateTaskConversation', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function updateBoards(newBoard) {\r\n    return async (dispatch) => {\r\n      try {\r\n        // await workspaceService.updateBoards(workspace,newBoard)\r\n        dispatch({ type: 'UPDATE_BOARDS', newBoard })\r\n      } catch (err) {\r\n        console.log('WorkspaceActions: err in updateBoards', err)\r\n      }\r\n    }\r\n}\r\nexport function removeBoards(newBoard) {\r\n    return async (dispatch) => {\r\n      try {\r\n        // await workspaceService.updateBoards(workspace,newBoard)\r\n        dispatch({ type: 'REMOVE_BOARDS', newBoard })\r\n      } catch (err) {\r\n        console.log('WorkspaceActions: err in removeBoards', err)\r\n      }\r\n    }\r\n}\r\nexport function addBoards(newBoard) {\r\n    return async (dispatch) => {\r\n      try {\r\n        // await workspaceService.updateBoards(workspace,newBoard)\r\n        dispatch({ type: 'ADD_BOARDS', newBoard })\r\n      } catch (err) {\r\n        console.log('WorkspaceActions: err in addBoards', err)\r\n      }\r\n    }\r\n}\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n\r\nexport function getCurrBoard(board) {\r\n    return async dispatch => {\r\n        try{\r\n            dispatch({ type: 'SET_BOARD', board})\r\n        }catch(err){\r\n            console.log('WorkspaceActions: err in SET_BOARD', err); \r\n        }\r\n    }\r\n}\r\nexport function updateCurrBoard(board) {\r\n    return async dispatch => {\r\n        try{\r\n            dispatch({ type: 'UPDATE_BOARD', board})\r\n        }catch(err){\r\n            console.log('WorkspaceActions: err in UPDATE_BOARD', err); \r\n        }\r\n    }\r\n}\r\n\r\nexport function addCheckedTasks(currCheckedTask) {\r\n    return async dispatch => {\r\n        try{\r\n            dispatch({ type: 'ADD_CHECKED_TASK', currCheckedTask})\r\n        }catch(err){\r\n            console.log('WorkspaceActions: err in ADD_CHECKED_TASK', err); \r\n        }\r\n    }\r\n}\r\nexport function removeCheckedTasks(taskId) {\r\n    return async dispatch => {\r\n        try{\r\n            dispatch({ type: 'REMOVE_CHECKED_TASK', taskId})\r\n        }catch(err){\r\n            console.log('WorkspaceActions: err in REMOVE_CHECKED_TASK', err); \r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { FaRegFolderOpen } from \"react-icons/fa\";\r\n\r\nexport function AvailableFoldersList({\r\n    onMoveBoardToFolder,\r\n    search,\r\n    setSearch\r\n}){\r\n    const workspaces = useSelector(state => state.workspace.workspaces);\r\n\r\n    return(\r\n        <div>\r\n             <input type=\"search\" placeholder=\"Search Folder\"  className=\"forward-modal-search-input\"\r\n             onChange={(e) => setSearch(e.target.value)}\r\n             />\r\n           {    workspaces.map(workspace=>\r\n                    workspace.folders.map(folder=>\r\n                        folder.name.toLowerCase().includes(search.toLowerCase())?\r\n                        <div \r\n                            className='modal-btn \r\n                            item-actions-btn\r\n                            ' \r\n                            key={folder._id} \r\n                            onClick={()=>onMoveBoardToFolder(workspace,folder)}\r\n                        >\r\n                            <FaRegFolderOpen className=\"icon\"/>\r\n                            <span>{folder.name}</span>\r\n                        </div>\r\n                        :\r\n                        null\r\n                    )\r\n                )\r\n           }\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState,useRef,useEffect } from 'react';\r\nimport { BsThreeDots, BsPencil } from 'react-icons/bs'\r\nimport {IoArrowForwardCircleOutline } from 'react-icons/io5'\r\nimport { AiOutlineStar } from 'react-icons/ai'\r\nimport { VscTrash } from 'react-icons/vsc'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrBoard} from '../store/actions/workspaceActions'\r\nimport { WorkspaceList } from './WorkspaceList';\r\nimport { AvailableFoldersList } from './AvailableFoldersList';\r\nimport { toggleFavUserBoardList } from '../store/actions/userActions'\r\nimport { ForwardModal } from \"./ForwardModal\";\r\nimport { updateBoardWorkspace} from '../store/actions/workspaceActions'\r\n\r\nexport function BoardPreview({\r\n    board,\r\n    onGettingCurrentBoard,\r\n    CgViewComfortable,\r\n    removeBoard,\r\n    editBoard,\r\n    moveBoard,\r\n    moveBoardToFolder,\r\n    object,\r\n    scroll,\r\n    cmp,\r\n    onEditBoard\r\n}) {\r\n\r\n    const workspaces = useSelector(state => state.workspace.workspaces)\r\n    const currBoard = useSelector(state => state.workspace.currBoard)\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const [dimensions, setDimensions] = useState(null);\r\n    const [currWorkspace, setCurrWorkspace] = useState(null);\r\n    const boardRef = useRef(null)\r\n    const [search, setSearch] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n      \r\n    const onGetCurrWorkspace=()=>{\r\n        let theWorkspace = null\r\n        workspaces.forEach(workspace=>\r\n            workspace.boards.forEach(_board=>{ \r\n                   if(_board._id===board._id){\r\n                    theWorkspace= workspace\r\n                    }\r\n                }\r\n             \r\n            )\r\n        )\r\n        if(!theWorkspace){\r\n            workspaces.forEach(workspace=>\r\n                workspace.folders.forEach(folder=>\r\n                    folder.boards.forEach(_board=>\r\n                        { \r\n                            if(_board._id===board._id){\r\n                                theWorkspace= workspace\r\n                            }\r\n                        }\r\n                    )\r\n                )\r\n            )\r\n        }\r\n        setCurrWorkspace(theWorkspace)\r\n        dispatch(updateBoardWorkspace(theWorkspace))\r\n    }\r\n\r\n    const set = () =>\r\n    setDimensions(boardRef && boardRef.current ? \r\n        boardRef.current.getBoundingClientRect().bottom>500?\r\n            {...boardRef.current.getBoundingClientRect(),bottom:boardRef.current.getBoundingClientRect().bottom-191}\r\n            : boardRef.current.getBoundingClientRect()\r\n        : {}\r\n    );\r\n\r\n    useEffect(() => {\r\n        set();\r\n    }, [scroll]) \r\n\r\n    useEffect(() => {\r\n        setBoardName(board.name)\r\n    }, [board])\r\n\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const [isUpdateName, setIsUpdateName] = useState(false);\r\n    const [boardName, setBoardName] = useState(board.name);\r\n    const [moveToObject, setMoveToObject] = useState(null);\r\n    const inputEl = useRef()\r\n\r\n    const [isShownMoveToWorkspaceModal, setIsShownMoveToWorkspaceModal] = useState(false)\r\n\r\n    function toggleModal(ev){\r\n        ev.stopPropagation();\r\n        setIsOpenModal(curr=>!curr)\r\n    }\r\n\r\n    function handleChangeName(ev) {\r\n        setBoardName(ev.target.value)\r\n    }\r\n    function updateBoardName() {\r\n        const newBoard = {\r\n            ...board,\r\n            name:boardName\r\n        }\r\n        dispatch(updateCurrBoard(newBoard))\r\n        editBoard(newBoard)\r\n    }\r\n    function onMoveBoard(workspace) {\r\n        moveBoard(workspace,board)\r\n        setIsOpenModal(false)\r\n    }\r\n    function onMoveBoardToFolder(workspace,folder) {\r\n        moveBoardToFolder(workspace,folder,board)\r\n        setIsOpenModal(false)\r\n    }\r\n    const onToggleFavUserBoardList=()=>{\r\n        dispatch(toggleFavUserBoardList(loggedInUser,board._id))\r\n        const desc = `${loggedInUser.favBoards.includes(board._id)?'added board to ':'removed board from '}favorites`\r\n        const updatedBoard = {\r\n         ...board,\r\n        activities:[\r\n             {\r\n                 desc: desc,\r\n                 userId: loggedInUser._id,\r\n                 createdAt: Date.now()\r\n             },\r\n             ...board.activities]\r\n        }\r\n        onEditBoard(updatedBoard)\r\n        updateCurrBoard(updatedBoard)\r\n        setIsOpenModal(false)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(!isShownMoveToWorkspaceModal){\r\n            setTimeout(() => {\r\n               if(boardRef&&boardRef.current){\r\n                boardRef.current.focus()\r\n               }\r\n            }, 0);\r\n        }\r\n    }, [isShownMoveToWorkspaceModal])\r\n\r\n\r\n    const toggleShownForwardModal=(val)=>{\r\n        setIsShownMoveToWorkspaceModal(val)\r\n    }\r\n    if (!board) return <div>Loading...</div>\r\n    return (\r\n    <div\r\n    className={`board-wrapper \r\n    ${isOpenModal?'open-modal':''} \r\n    ${isUpdateName?'updating-style':''}\r\n    ${currBoard._id===board._id?'active':''}\r\n    `}\r\n     onClick={()=>\r\n        onGettingCurrentBoard(board)\r\n    }\r\n     tabIndex='0'\r\n     onBlur={()=>{\r\n         setIsOpenModal(isShownMoveToWorkspaceModal)\r\n    }}\r\n     ref={boardRef}\r\n    >\r\n        <div className=\"name-wrapper\">\r\n            <CgViewComfortable className={`icon ${isUpdateName?'updating-style':''}`}/>\r\n            {isUpdateName?\r\n                <input \r\n                className=\"update-board-name-input\" \r\n                type=\"text\" \r\n                value={boardName}\r\n                onChange={handleChangeName}\r\n                ref={inputEl}\r\n                onBlur={()=>{\r\n                    setIsUpdateName(false)\r\n                    updateBoardName()\r\n                }}\r\n                onKeyDown={(ev) => {\r\n                    if (ev.key === 'Enter') {\r\n                        ev.target.blur()\r\n                    }\r\n                }}\r\n                />\r\n                :\r\n                <span \r\n                title={boardName.length>14?boardName:''} \r\n                className={`${boardName.length>14?'ellipsis-board-name':''}`}\r\n                >\r\n                    {boardName}\r\n                </span>\r\n            }\r\n        </div>\r\n        <BsThreeDots className={`BsThreeDots ${isUpdateName?'hide':''}`} onClick={(ev)=>{\r\n            onGetCurrWorkspace()//for favorite section\r\n            if(boardRef.current.getBoundingClientRect().bottom>500){\r\n                setDimensions({...boardRef.current.getBoundingClientRect(),bottom:boardRef.current.getBoundingClientRect().bottom-191});\r\n            }else if(boardRef.current.getBoundingClientRect().bottom<250){\r\n                if(cmp){\r\n                    setDimensions({...boardRef.current.getBoundingClientRect(),bottom:boardRef.current.getBoundingClientRect().bottom+5+181});\r\n                }else{\r\n                    setDimensions({...boardRef.current.getBoundingClientRect(),bottom:boardRef.current.getBoundingClientRect().bottom+2});\r\n                }\r\n            }else{\r\n                setDimensions(boardRef.current.getBoundingClientRect());\r\n            }\r\n            toggleModal(ev) \r\n             console.log(boardRef.current.getBoundingClientRect())\r\n            }}/>\r\n        {\r\n        isOpenModal&&\r\n        <div className='modal-default-style item-actions-modal board-modal-wrapper'\r\n        style={{top: `${dimensions?dimensions.bottom-181:0}px`}}\r\n        >\r\n                    <div  className='modal-btn item-actions-btn' onClick={()=>{\r\n                        setIsOpenModal(false)\r\n                        setIsUpdateName(true)\r\n                        setTimeout(() => {\r\n                            inputEl.current.focus()\r\n                        }, 0); \r\n                    }}>\r\n                        <BsPencil className=\"icon\"/>\r\n                        <span>Rename Board</span>\r\n                    </div>\r\n                    <div className='modal-btn item-actions-btn' onClick={onToggleFavUserBoardList} >\r\n                        <AiOutlineStar className=\"icon\"/>\r\n                       {loggedInUser.favBoards.includes(board._id)? <span>Remove from favorites</span>:\r\n                        <span>Add to favorites</span>}\r\n                    </div>\r\n                    <ForwardModal \r\n                    btn={<div>\r\n                            <IoArrowForwardCircleOutline className=\"icon\"/>\r\n                            <span>Move To</span>\r\n                        </div>\r\n                    }\r\n                    setMoveToObject={setMoveToObject}\r\n                    isFolderModal={true}\r\n                    toggleShownForwardModal={toggleShownForwardModal}\r\n                    moveToObject={moveToObject}\r\n                    setSearch={setSearch} \r\n                    >\r\n                        {!moveToObject&&<div className='modal-btn item-actions-btn forward-modal-btn' onClick={()=>{setMoveToObject('Folder')}}>\r\n                            <IoArrowForwardCircleOutline className=\"icon\"/>\r\n                            <span>Move To Folder</span>\r\n                        </div>}\r\n                        {!moveToObject&&<div className='modal-btn item-actions-btn' onClick={()=>{setMoveToObject('Workspace')}}> \r\n                            <IoArrowForwardCircleOutline className=\"icon\"/>\r\n                            <span>Move To Workspace</span>\r\n                        </div>}\r\n                        { moveToObject&&<div>\r\n                            <div onClick={()=>{setMoveToObject(null)}} className='forward-modal-title'>\r\n                                <div>Choose {moveToObject}</div>\r\n                                <div  className='modal-btn item-actions-btn'>back</div>\r\n                            </div>\r\n                        </div>}\r\n                        {moveToObject==='Workspace'&& <WorkspaceList \r\n                            onMoveObject={onMoveBoard}\r\n                            object={object}\r\n                            search={search} \r\n                            setSearch={setSearch} \r\n                        />}\r\n                        {moveToObject==='Folder'&&<AvailableFoldersList onMoveBoardToFolder={onMoveBoardToFolder}\r\n                        search={search} \r\n                        setSearch={setSearch} \r\n                        /> }\r\n                    </ForwardModal>\r\n                    <div className='delete-btn-wrapper'>\r\n                        <div className='modal-btn item-actions-btn' onClick={()=>{\r\n                            removeBoard(board._id)\r\n                            setIsOpenModal(false)\r\n                        }}>\r\n                            <VscTrash className=\"icon\"/>\r\n                            <span>Delete</span>\r\n                        </div>\r\n                    </div>\r\n        </div>}\r\n    </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { BsThreeDots } from 'react-icons/bs'\r\nimport { BoardPreview } from './BoardPreview'\r\n\r\nexport function BoardList({\r\n    boards,\r\n    onGettingCurrentBoard,\r\n    CgViewComfortable,\r\n    removeBoard,\r\n    editBoard,\r\n    moveBoard,\r\n    moveBoardToFolder,\r\n    object,\r\n    scroll,\r\n    cmp,\r\n    onEditBoard\r\n}) {\r\n\r\n    // const boards = useSelector(state => state.workspace.boards);\r\n\r\n    if (!boards) return <div>Loading...</div>\r\n    return (\r\n      <>\r\n       {boards.map((board,index)=>\r\n              <BoardPreview\r\n              board={board}\r\n              onGettingCurrentBoard={onGettingCurrentBoard}\r\n              CgViewComfortable={CgViewComfortable}\r\n              BsThreeDots={BsThreeDots}\r\n              removeBoard={removeBoard}\r\n              editBoard={editBoard}\r\n              moveBoard={moveBoard}\r\n              moveBoardToFolder={moveBoardToFolder}        \r\n              object={object}\r\n              scroll={scroll}\r\n              cmp={cmp}\r\n              onEditBoard={onEditBoard}\r\n              />\r\n        )}\r\n      </>\r\n    );\r\n}\r\n","import React, { useState,useRef,useEffect } from 'react';\r\n\r\nexport function CreateBoard({setIsShown,addNewBoard}) {\r\n\r\n    const[newBoardName,setNewBoardName]=useState('New Board')\r\n    const inputEl = useRef()\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            inputEl.current.focus()\r\n        }, 0); \r\n    }, [])\r\n    const focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    const handleChangeName =(ev)=>{\r\n        setNewBoardName(ev.target.value)\r\n    }\r\n    return (\r\n    <div className=\"create-item-wrapper\">\r\n        <div className=\"create-item-title\">Create board</div>\r\n        <input \r\n            className=\"new-item-input\"\r\n            type=\"text\" \r\n            value={newBoardName} \r\n            onChange={handleChangeName}\r\n            onFocus={focusText}\r\n            ref={inputEl}\r\n            onKeyDown={(ev) => {\r\n                if (ev.key === 'Enter') {\r\n                    if(newBoardName.length<1)return\r\n                    addNewBoard(newBoardName)\r\n                    setIsShown(false)\r\n                }\r\n            }}\r\n        />\r\n        <div className=\"btns-container\">\r\n            <div className=\"cancel-btn\" onClick={ ()=>{setIsShown(false)} }>Cancel</div>\r\n            <div className='add-btn' onClick={()=>{\r\n            if(newBoardName.length<1)return\r\n            addNewBoard(newBoardName)\r\n            setIsShown(false)\r\n            }}>Create Board</div>\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React, { useState,useRef,useEffect } from 'react';\r\nimport { IoMdArrowDropright } from 'react-icons/io'\r\nimport {IoArrowForwardCircleOutline } from 'react-icons/io5'\r\nimport { BsThreeDots, BsPencil } from 'react-icons/bs'\r\nimport { VscTrash } from 'react-icons/vsc'\r\nimport { IoIosArrowForward } from 'react-icons/io'\r\nimport { BoardList } from \"./BoardList\";\r\nimport { WorkspaceList } from './WorkspaceList';\r\nimport { CreateBoard } from \"./CreateBoard\";\r\nimport { PopupModal } from \"./PopupModal\";\r\nimport { ForwardModal } from \"./ForwardModal\";\r\n\r\nexport function FolderPreview({\r\n    folder,\r\n    IoMdArrowDropdown,\r\n    CgViewComfortable,\r\n    onGettingCurrentBoard,\r\n    addBoardInFolder,\r\n    removeFolder,\r\n    updateFolder,\r\n    removeBoard,\r\n    editBoard,\r\n    moveFolder,\r\n    moveBoard,\r\n    moveBoardToFolder,\r\n    scroll,\r\n    index,\r\n    isNewFolderCreated,\r\n    onEndNewFolderUpdating,\r\n    folders,\r\n    onEditBoard\r\n}) {\r\n    const [isFolderOpen, setIsFolderOpen] = useState(false);\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const [isOpenMoveToModal, setIsOpenMoveToModal] = useState(false);\r\n    const [isUpdateName, setIsUpdateName] = useState(false);\r\n    const [folderName, setFolderName] = useState(folder.name);\r\n    const [isShown, setIsShown] = useState(false)\r\n    const inputEl = useRef()\r\n\r\n    const [dimensions, setDimensions] = useState(null);\r\n    const folderRef = useRef(null)\r\n\r\n    const [isShownMoveToWorkspaceModal, setIsShownMoveToWorkspaceModal] = useState(false)\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    \r\n    const set = () =>\r\n    setDimensions(folderRef && folderRef.current ? \r\n        folderRef.current.getBoundingClientRect().bottom>500?\r\n            {...folderRef.current.getBoundingClientRect(),bottom:folderRef.current.getBoundingClientRect().bottom-191}\r\n            : folderRef.current.getBoundingClientRect()\r\n        : {}\r\n    );\r\n\r\n    useEffect(() => {\r\n        if(index===folders.length-1&&isNewFolderCreated){\r\n            setIsUpdateName(true) \r\n            setTimeout(() => {\r\n                inputEl.current.focus()\r\n            }, 0);\r\n        }\r\n    }, [index,folders.length,isNewFolderCreated]) \r\n\r\n\r\n    useEffect(() => {\r\n        set();\r\n    }, [scroll]) \r\n\r\n    useEffect(() => {\r\n        setFolderName(folder.name)\r\n    }, [folder])\r\n    const onToggleFolder=()=>{\r\n        setIsFolderOpen(current => !current)\r\n    } \r\n    function toggleModal(ev){\r\n        ev.stopPropagation();\r\n        setIsOpenModal(curr=>!curr)\r\n    }\r\n\r\n\r\n    function handleChangeName(ev) {\r\n        setFolderName(ev.target.value)\r\n    }\r\n    function updateFolderName() {\r\n        const newFolder = {\r\n            ...folder,\r\n            name:folderName\r\n        }\r\n        updateFolder(newFolder)\r\n    }\r\n    // function onMoveFolder(currWorkspace,workspace) {\r\n    //     moveFolder(currWorkspace,workspace,folder)\r\n    //     setIsOpenModal(false)\r\n    // }\r\n    function onMoveFolder(workspace) {\r\n        moveFolder(workspace,folder)\r\n        setIsOpenModal(false)\r\n    }\r\n\r\n    function addNewBoard(boardName) {\r\n        addBoardInFolder(folder,boardName)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isShownMoveToWorkspaceModal){\r\n            setTimeout(() => {\r\n               if(folderRef&&folderRef.current){\r\n                folderRef.current.focus()\r\n               }\r\n            }, 0);\r\n        }\r\n    }, [isShownMoveToWorkspaceModal])\r\n    \r\n    const toggleShownForwardModal=(val)=>{\r\n        setIsShownMoveToWorkspaceModal(val)\r\n    }\r\n    \r\n\r\n    if (!folder) return <div>Loading...</div>\r\n    return (\r\n        <>\r\n        <div key={folder._id}>\r\n            <div \r\n                className={`\r\n                folder-wrapper \r\n                ${isOpenModal?'open-modal':''} \r\n                ${isUpdateName?'updating-style':''}`}\r\n                tabIndex={!isNewFolderCreated ? 0 : null}\r\n                onBlur={()=>{\r\n                    setIsOpenModal(isShownMoveToWorkspaceModal)\r\n                }}\r\n                ref={folderRef}\r\n            >\r\n               <div \r\n                onClick={onToggleFolder}\r\n                className=\"name-wrapper\"\r\n                >\r\n                    {isFolderOpen?\r\n                        <IoMdArrowDropdown className={`icon ${isUpdateName?'updating-style':''}`} />:\r\n                        <IoMdArrowDropright className={`icon ${isUpdateName?'updating-style':''}`}  />\r\n                    }\r\n                    {isUpdateName?\r\n                        <input \r\n                        className=\"update-folder-name-input\" \r\n                        type=\"text\" \r\n                        value={folderName}\r\n                        onChange={handleChangeName}\r\n                        ref={inputEl}\r\n                        onBlur={()=>{\r\n                            setIsUpdateName(false)\r\n                            updateFolderName()\r\n                            onEndNewFolderUpdating()\r\n                        }}\r\n                        onKeyDown={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                ev.target.blur()\r\n                            }\r\n                        }}\r\n                        />\r\n                        :\r\n                        <span  \r\n                        title={folderName.length>14?folderName:''} \r\n                        className={`${folderName.length>14?'ellipsis-folder-name':''}`}\r\n                        >{folderName}</span>\r\n                    }\r\n               </div>\r\n               <BsThreeDots className={`BsThreeDots ${isUpdateName?'hide':''}`}  onClick={(ev)=>{\r\n                   if(folderRef.current.getBoundingClientRect().bottom>500){\r\n                        setDimensions({...folderRef.current.getBoundingClientRect(),bottom:folderRef.current.getBoundingClientRect().bottom-191});\r\n                    }else{\r\n                        setDimensions(folderRef.current.getBoundingClientRect());\r\n                    }\r\n                   toggleModal(ev)\r\n                   }}/>\r\n               {\r\n               isOpenModal&&\r\n               <div className='modal-default-style item-actions-modal folder-modal-wrapper '\r\n               style={{top: `${dimensions?dimensions.bottom-181:0}px`}}\r\n               >\r\n                    <div className='modal-btn item-actions-btn' onClick={()=>{\r\n                        // addBoardInFolder(folder)\r\n                        setIsShown(true)\r\n                        setIsOpenModal(false)\r\n                    }}>\r\n                        <CgViewComfortable className=\"icon\" />\r\n                        <span>Create board in folder</span>\r\n                    </div>\r\n                    <div  className='modal-btn item-actions-btn' onClick={()=>{\r\n                        setIsOpenModal(false)\r\n                        setIsUpdateName(true)\r\n                        setTimeout(() => {\r\n                            inputEl.current.focus()\r\n                        }, 0); \r\n                    }}>\r\n                        <BsPencil className=\"icon\"/>\r\n                        <span>Rename folder</span>\r\n                    </div>\r\n                    <ForwardModal \r\n                    btn={<div>\r\n                            <IoArrowForwardCircleOutline className=\"icon\"/>\r\n                            <span>Move To Workspace</span>\r\n                        </div>\r\n                    }\r\n                    toggleShownForwardModal={toggleShownForwardModal}\r\n                    itemList={true}\r\n                    setSearch={setSearch} \r\n                    >\r\n                        <WorkspaceList \r\n                        onMoveObject={onMoveFolder}\r\n                        search={search} \r\n                        setSearch={setSearch} \r\n                        />\r\n                    </ForwardModal>\r\n                    <div className='delete-btn-wrapper'>\r\n                        <div className='modal-btn item-actions-btn' onClick={()=>{\r\n                            removeFolder(folder._id)\r\n                            setIsOpenModal(false)\r\n                        }}>\r\n                            <VscTrash className=\"icon\"/>\r\n                            <span>Delete folder</span>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n            {isFolderOpen&&\r\n             <div className='folder-dropdown' key={folder._id}>\r\n             {folder.boards.length>0&&\r\n                <BoardList \r\n                     boards={folder.boards}\r\n                     onGettingCurrentBoard={onGettingCurrentBoard}\r\n                     CgViewComfortable={CgViewComfortable}\r\n                     removeBoard={removeBoard}\r\n                     editBoard={editBoard}\r\n                     moveBoard={moveBoard}\r\n                     moveBoardToFolder={moveBoardToFolder}\r\n                     object='insideFolder'\r\n                     scroll={scroll}\r\n                     onEditBoard={onEditBoard}\r\n\r\n                />\r\n             }\r\n             </div>\r\n            }\r\n        </div >\r\n\r\n        \r\n        {isShown&&<PopupModal setIsShown={setIsShown} >\r\n            <CreateBoard addNewBoard={addNewBoard} setIsShown={setIsShown}/>\r\n        </PopupModal>}\r\n        </>\r\n    );\r\n}\r\n","import React, { useState,useRef,useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FolderPreview } from \"./FolderPreview\";\r\n\r\nexport function FolderList({\r\n    folders,\r\n    IoMdArrowDropdown,\r\n    CgViewComfortable,\r\n    onGettingCurrentBoard,\r\n    addBoardInFolder,\r\n    removeFolder,\r\n    updateFolder,\r\n    removeBoard,\r\n    editBoard,\r\n    moveFolder,\r\n    moveBoard,\r\n    moveBoardToFolder,\r\n    scroll,\r\n    isNewFolderCreated,\r\n    onEndNewFolderUpdating,\r\n    onEditBoard\r\n}) {\r\n    // const currWorkspace = useSelector(state => state.workspace.currWorkspace);\r\n \r\n    if (!folders) return <div>Loading...</div>\r\n    return (\r\n      <>\r\n       {folders.map((folder,index)=>\r\n    \r\n            <FolderPreview \r\n            folder={folder} \r\n            folders={folders}\r\n            IoMdArrowDropdown={IoMdArrowDropdown}\r\n            CgViewComfortable={CgViewComfortable}\r\n            onGettingCurrentBoard={onGettingCurrentBoard}\r\n            addBoardInFolder={addBoardInFolder}\r\n            removeFolder={removeFolder}\r\n            updateFolder={updateFolder}\r\n            removeBoard={removeBoard}\r\n            editBoard={editBoard}\r\n            moveFolder={moveFolder}\r\n            moveBoard={moveBoard}\r\n            moveBoardToFolder={moveBoardToFolder}\r\n            scroll={scroll}\r\n            index={index}\r\n            isNewFolderCreated={isNewFolderCreated}\r\n            onEndNewFolderUpdating={onEndNewFolderUpdating}\r\n            onEditBoard={onEditBoard}\r\n            />\r\n       )}\r\n      </>\r\n    );\r\n}\r\n","import React, { useState,useEffect } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { BiCheck } from 'react-icons/bi';\r\nimport {colorsPicker } from '../data/shortColorPicker.js';\r\nimport {iconsPicker } from '../data/iconsPicker';\r\n\r\nexport function WorkspaceIconPicker({updateWorkspace}) {\r\n\r\n    const workspace = useSelector(state => state.workspace.currWorkspace);\r\n    const[newWorkspaceColor,setNewWorkspaceColor]=useState(workspace.color)\r\n    const[newWorkspaceIcon,setNewWorkspaceIcon]=useState(workspace.img)\r\n\r\n    useEffect(() => {\r\n        setNewWorkspaceColor(workspace.color)\r\n        setNewWorkspaceIcon(workspace.img)\r\n    }, [workspace])\r\n\r\n    useEffect(() => {\r\n        if(newWorkspaceColor!==workspace.color){\r\n            const newWorkspace={\r\n                ...workspace,\r\n                color:newWorkspaceColor\r\n            }\r\n            updateWorkspace(newWorkspace)\r\n        }\r\n    }, [newWorkspaceColor,updateWorkspace,workspace])\r\n\r\n    useEffect(() => {\r\n        if(newWorkspaceIcon!==workspace.img){\r\n            const newWorkspace={\r\n                ...workspace,\r\n                img:newWorkspaceIcon\r\n            }\r\n            updateWorkspace(newWorkspace)\r\n        }\r\n    }, [newWorkspaceIcon,updateWorkspace,workspace])\r\n\r\n    return (\r\n    <>\r\n        <div className=\"small-font\">Background color</div>\r\n            <div className=\"workspace-color-picker\">\r\n                {colorsPicker.map(color=>\r\n                    <div className=\"workspace-color\" style={{backgroundColor:`${color}`}}\r\n                     onClick={()=>setNewWorkspaceColor(color)}\r\n                     >\r\n                         {newWorkspaceColor===color&&<BiCheck/>}\r\n                     </div>\r\n                )}\r\n            </div>\r\n        <div className=\"small-font\">Icon</div>\r\n            <div className=\"icon-picker\">\r\n                {iconsPicker.map(icon=>\r\n                    <div className=\"icon\"\r\n                    style={{backgroundColor:`${newWorkspaceColor}`}}\r\n                    onClick={()=>setNewWorkspaceIcon(icon)}\r\n                    >\r\n                       {icon}\r\n                     </div>\r\n                )}\r\n        </div>\r\n    </>\r\n    )\r\n}","import React, { useEffect,useState,useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUser} from '../store/actions/userActions'\r\nimport { BsThreeDots,BsPencil } from 'react-icons/bs'\r\nimport { VscPinned,VscTrash } from 'react-icons/vsc'\r\nimport {IoSettingsOutline} from 'react-icons/io5'\r\nimport {CgArrowsExchangeAlt} from 'react-icons/cg'\r\nimport { ForwardModal } from \"./ForwardModal\";\r\nimport { WorkspaceIconPicker } from \"./WorkspaceIconPicker\";\r\n\r\nexport function UpdateWorkspace({updateWorkspace,deleteWorkspace,onGettingCurrentWorkspace,onManageWorkspace}){\r\n    const dispatch = useDispatch()\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n\r\n    const allWorkspaces = useSelector(state => state.workspace.workspaces);\r\n    const [workspaces,setWorkspaces] = useState(allWorkspaces.filter(\r\n        workspace=>loggedInUser.pinnedWorkspaces.includes(workspace._id))\r\n        )\r\n\r\n    const workspace = useSelector(state => state.workspace.currWorkspace);\r\n    const[workspaceColor,setWorkspaceColor]=useState(workspace.color)\r\n    const[workspaceIcon,setWorkspaceIcon]=useState(workspace.img)\r\n    const [isUpdateName, setIsUpdateName] = useState(false);\r\n    const [workspaceName, setWorkspaceName] = useState(workspace.name);\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const inputEl = useRef()\r\n\r\n\r\n    \r\n    const [isShownMoveToWorkspaceModal, setIsShownMoveToWorkspaceModal] = useState(false)\r\n    const btnEl = useRef()\r\n\r\n    useEffect(() => {\r\n        setWorkspaces(allWorkspaces.filter(\r\n            workspace=>loggedInUser.pinnedWorkspaces.includes(workspace._id))\r\n            )\r\n    }, [loggedInUser,loggedInUser.pinnedWorkspaces,allWorkspaces])\r\n\r\n    useEffect(() => {\r\n        setWorkspaceColor(workspace.color)\r\n        setWorkspaceIcon(workspace.img)\r\n        setWorkspaceName(workspace.name)\r\n    }, [workspace])\r\n\r\n    function handleChangeName(ev) {\r\n        setWorkspaceName(ev.target.value)\r\n    }\r\n\r\n    function unpinWorkspace(workspaceId) {\r\n        const newUser= {\r\n            ...loggedInUser,\r\n            pinnedWorkspaces:loggedInUser.pinnedWorkspaces.filter(id=>id!==workspaceId)\r\n        }\r\n        dispatch(updateUser(newUser))\r\n        workspaces.map(workspace=>\r\n            workspace.boards.map(board=>\r\n                board.isLastSeen===true? \r\n                    onGettingCurrentWorkspace(workspace)\r\n                    :null\r\n            )   \r\n        )\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(!isShownMoveToWorkspaceModal){\r\n            // if(btnEl.current){\r\n            //     setTimeout(() => {\r\n            //         btnEl.current.focus()\r\n            //     }, 0);\r\n            // }\r\n            setTimeout(() => {\r\n                if(btnEl&&btnEl.current){\r\n                    btnEl.current.focus()\r\n                }\r\n            }, 0);\r\n        }\r\n    }, [isShownMoveToWorkspaceModal])\r\n    \r\n    const toggleShownForwardModal=(val)=>{\r\n        setIsShownMoveToWorkspaceModal(val)\r\n    }\r\n    return(\r\n    <div className={`workspace-title ${isOpenModal?'open-modal':''}`}>\r\n        <div className=\"workspace-symbol\" style={{backgroundColor:`${workspaceColor}`}}>{workspaceIcon}</div>\r\n       { isUpdateName?\r\n        <input\r\n            type=\"text\"\r\n            className=\"workspace-name-input\"\r\n            value={workspaceName}\r\n            onChange={handleChangeName}\r\n            ref={inputEl}\r\n            onBlur={()=>{\r\n                setIsUpdateName(false)\r\n                const newWorkspace = {\r\n                    ...workspace,\r\n                    name:workspaceName\r\n                }\r\n                if(workspaceName.length>1){\r\n                    updateWorkspace(newWorkspace)\r\n                }else{\r\n                    setWorkspaceName(workspace.name)\r\n                }\r\n            }}\r\n            onKeyDown={(ev) => {\r\n                if (ev.key === 'Enter') {\r\n                    ev.target.blur()\r\n                }\r\n            }}\r\n        />\r\n        :\r\n        <div \r\n        title={workspaceName.length>12?workspaceName:''} \r\n        className={`workspace-name ${workspaceName.length>12?'ellipsis-board-name':''}`}\r\n        >{workspaceName}</div>\r\n       }\r\n        <div className={`workspace-name-options-btn-wrapper workspace-title-btn ${isOpenModal?'show-btn':''}`}\r\n        tabIndex='0'\r\n        onBlur={()=>setIsOpenModal(false)}\r\n        ref={btnEl}\r\n        >\r\n            <BsThreeDots className=\"icon BsThreeDots\"\r\n            onClick={()=>{\r\n                setIsOpenModal(curr=>!curr)\r\n            }}\r\n            />\r\n           { isOpenModal&&<div className='modal-default-style toolbar-menu-options-modal item-actions-modal'>\r\n                   <div className=\"modal-btn item-actions-btn\"\r\n                    onClick={()=>{\r\n                        setIsUpdateName(true)\r\n                        setTimeout(() => {\r\n                            inputEl.current.focus()\r\n                        }, 0);\r\n                        setIsOpenModal(false)\r\n                    }}\r\n                   >\r\n                       <BsPencil className=\"icon\"/>\r\n                       <span>Rename workspace</span>\r\n                   </div>\r\n                   <ForwardModal \r\n                    btn={<div>\r\n                           <CgArrowsExchangeAlt className=\"icon\"/>\r\n                            <span>Change icon</span>\r\n                        </div>\r\n                    }\r\n                    toggleShownForwardModal={toggleShownForwardModal}\r\n                    isWorkspaceIconPicker={true}\r\n                    >\r\n                       <WorkspaceIconPicker updateWorkspace={updateWorkspace}/>\r\n                    </ForwardModal>\r\n                   {/* <div className=\"modal-btn item-actions-btn\">\r\n                       <CgArrowsExchangeAlt className=\"icon\"/>\r\n                        <span>Change icon</span>\r\n                   </div> */}\r\n                   <div className=\"modal-btn item-actions-btn\"\r\n                    onClick={()=>{\r\n                        unpinWorkspace(workspace._id)\r\n                        setIsOpenModal(false)\r\n                    }}\r\n                   >\r\n                       <VscPinned className=\"icon\"/>\r\n                       <span>Unpin workspace from menu</span>\r\n                   </div>\r\n                   <div className=\"modal-btn item-actions-btn\"\r\n                   onClick={()=>{\r\n                    onManageWorkspace()\r\n                    setIsOpenModal(false)\r\n                    }}\r\n                   >\r\n                       <IoSettingsOutline className=\"icon\"/>\r\n                       <span>Manage workspace</span>\r\n                   </div>\r\n                   <div className=\"modal-btn item-actions-btn\"\r\n                    onClick={()=>{\r\n                        deleteWorkspace(workspace._id)\r\n                        setIsOpenModal(false)\r\n                    }}\r\n                   >\r\n                       <VscTrash className=\"icon\"/>\r\n                       <span>Delete workspace</span>\r\n                   </div>\r\n            </div>}\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React, { useEffect,useState,useRef } from 'react';\r\nimport { CgViewComfortable } from 'react-icons/cg'\r\n// import { CreateBoard } from \"./CreateBoard\";\r\n// import { PopupModal } from \"./PopupModal\";\r\n\r\nexport function ToolbarMenuActionsBtnModal({\r\n    btnName,\r\n    addNewBoard,\r\n    addNewFloder,\r\n    setIsShown\r\n}) {\r\n    // const [isShown, setIsShown] = useState(false)\r\n\r\n    const getBtnOptions=()=>{\r\n        let content = [];\r\n        switch(btnName) {\r\n            case 'Add':\r\n                content.push(\r\n                <> \r\n                    <div className=\"actions-btn actions-modal-btn modal-btn \"\r\n                     onClick={()=>{setIsShown(true)}}\r\n                    //  onClick={addNewBoard}\r\n                     >\r\n                        <CgViewComfortable className=\"icon\" />\r\n                        <span>New Board</span>\r\n                    </div>  \r\n                    <div className=\"actions-btn modal-btn\" onClick={addNewFloder}>\r\n                        <CgViewComfortable className=\"icon\" />\r\n                        <span>New Folder</span>\r\n                    </div>   \r\n                </>\r\n                );\r\n                break; \r\n            case 'Filters':\r\n                content.push(\r\n                <>  \r\n                   {btnName}\r\n                </>\r\n                );\r\n                break;\r\n            case 'Search':\r\n                content.push(\r\n                <> \r\n                   {btnName}\r\n                </>\r\n                );\r\n                break;\r\n            default:\r\n                content.push('');\r\n                break;\r\n        }                                \r\n        return content;\r\n    }\r\n    return (\r\n        <>\r\n        <div className='modal-default-style actions-modal-wrapper'>\r\n           {getBtnOptions()}\r\n        </div>\r\n        {/* {isShown&&<PopupModal setIsShown={setIsShown} addNewBoard={addNewBoard}>\r\n            <CreateBoard/>\r\n        </PopupModal>} */}\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect,useState,useRef } from 'react';\r\nimport { ToolbarMenuActionsBtnModal } from \"./ToolbarMenuActionsBtnModal\";\r\nimport { AiOutlinePlusCircle } from 'react-icons/ai'\r\nimport { FiFilter } from 'react-icons/fi'\r\nimport { CreateBoard } from \"./CreateBoard\";\r\nimport { PopupModal } from \"./PopupModal\";\r\n\r\nexport function ToolbarMenuActionsBtn({\r\n    btnName,\r\n    addNewBoard,\r\n    addNewFloder\r\n}) {\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const [isShown, setIsShown] = useState(false)\r\n    const getBtnValue=()=>{\r\n        let content = [];\r\n        switch(btnName) {\r\n            case 'Add':\r\n                content.push(\r\n                <> \r\n                    <AiOutlinePlusCircle className=\"icon\"/>\r\n                    <span>Add</span>       \r\n                </>\r\n                );\r\n                break; \r\n            case 'Filters':\r\n                content.push(\r\n                <>  \r\n                    <FiFilter className=\"icon\"/>\r\n                    <span>Filters</span> \r\n                </>\r\n                );\r\n                break;\r\n            default:\r\n                content.push('');\r\n                break;\r\n        }                                \r\n        return content;\r\n    }\r\n    return (\r\n        <>\r\n    <div className='actions-btn-wrapper' \r\n    tabIndex='0'\r\n     onBlur={()=>{setIsOpenModal(false)}}\r\n     >\r\n        { isOpenModal&&<ToolbarMenuActionsBtnModal\r\n         btnName={btnName}\r\n         addNewBoard={addNewBoard}\r\n         addNewFloder={addNewFloder}\r\n         setIsShown={setIsShown}\r\n          />}\r\n        <div className={`add actions-btn ${isOpenModal?'active':''}`} onClick={()=>{setIsOpenModal(curr=>!curr)}}>\r\n            {getBtnValue()}\r\n        </div>\r\n    </div>\r\n\r\n    {isShown&&<PopupModal setIsShown={setIsShown} >\r\n            <CreateBoard addNewBoard={addNewBoard}  setIsShown={setIsShown}/>\r\n        </PopupModal>}\r\n    </>\r\n    );\r\n}\r\n","import React, { useState, useEffect,useRef } from \"react\";\r\nimport {  useSelector } from \"react-redux\";\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\n\r\nexport function Search({\r\n    search,\r\n    setSearch,\r\n    setFilteredFolders,\r\n    setFilteredBoards\r\n}) {\r\n    const currWorkspace = useSelector(state => state.workspace.currWorkspace);\r\n    const [isSearchActive, setSearchActive] = useState(false);\r\n    const inputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        setFilteredFolders(\r\n            currWorkspace.folders.filter((item) =>\r\n                item.name.toLowerCase().includes(search.toLowerCase())\r\n            )\r\n        );\r\n\r\n    }, [search, currWorkspace.folders,setFilteredFolders]);\r\n\r\n    useEffect(() => {\r\n        setFilteredBoards(\r\n            currWorkspace.boards.filter((item) =>\r\n                item.name.toLowerCase().includes(search.toLowerCase())\r\n            )\r\n        );\r\n    }, [search, currWorkspace.boards,setFilteredBoards]);\r\n\r\n    // useEffect(() => {\r\n    //     let items = []\r\n    //     currWorkspace.folders.map(folder =>\r\n    //         items=[...items,...folder.boards]\r\n    //     )\r\n    //     setFilteredBoardsInFolders(\r\n    //         items.filter((item) =>\r\n    //             item.name.toLowerCase().includes(search.toLowerCase())\r\n    //         )\r\n    //     )\r\n    // }, [search,currWorkspace.folders]);\r\n\r\n \r\n    return (\r\n        <>\r\n        {!isSearchActive?\r\n            <div className='actions-btn-wrapper'\r\n                onClick={()=>{\r\n                    setSearchActive(true)\r\n                    setTimeout(() => {\r\n                         if(inputRef&&inputRef.current){\r\n                             inputRef.current.focus()\r\n                         }\r\n                    }, 0);\r\n                }}\r\n            >\r\n                <div className=\"add actions-btn\">\r\n                    <HiOutlineSearch className=\"icon\"/>\r\n                    <span>Search</span> \r\n                </div>\r\n            </div>\r\n        :\r\n        <div className=\"search\">\r\n            <input\r\n                ref={inputRef}\r\n                className=\"search-input menu-btn\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                onChange={(e) => setSearch(e.target.value)}\r\n                onBlur={(e)=>{\r\n                    if(e.target.value!=='')return\r\n                    setSearchActive(false)\r\n                }}\r\n                onKeyDown={(ev) => {\r\n                    if (ev.key === 'Enter') {\r\n                        ev.target.blur()\r\n                    }\r\n                }}\r\n            />\r\n        </div>}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n// filters ALL THE ITEMS includes THE BOARDS INSIDE FOLDERS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n// const currWorkspace = useSelector(state => state.workspace.currWorkspace);\r\n// const [loading, setLoading] = useState(false);\r\n// // const [search, setSearch] = useState(\"\");\r\n// // const [filteredItems, setFilteredItems] = useState([]);\r\n\r\n\r\n// useEffect(() => {\r\n//     let items = []\r\n//     currWorkspace.folders.map(folder=>\r\n//         items=[...items, folder]\r\n//     )\r\n//     currWorkspace.boards.map(board=>\r\n//         items=[...items, board]\r\n//     )\r\n//     currWorkspace.folders.map(folder =>\r\n//         items=[...items, ...folder.boards]\r\n//     )\r\n//     setFilteredItems(\r\n//         items.filter((item) =>\r\n//             item.name.toLowerCase().includes(search.toLowerCase())\r\n//         )\r\n//     );\r\n\r\n// }, [search, currWorkspace.folders,currWorkspace.boards,setFilteredItems]);\r\n\r\n\r\n// return (\r\n//     <div className=\"search\">\r\n//         <input\r\n//             type=\"text\"\r\n//             placeholder=\"Search Countries\"\r\n//             onChange={(e) => setSearch(e.target.value)}\r\n//         />\r\n//     </div>\r\n// )","import httpService from './httpService'\r\nexport const boardService = {\r\n    getById,\r\n    addBoard,\r\n    addBoardInFolder,\r\n    removeBoard,\r\n    addFolder,\r\n    removeFolder,\r\n    updateFolder,\r\n    addTable,\r\n    removeTable,\r\n    updateTable,\r\n    addTask,\r\n    removeTask,\r\n    updateTask\r\n}\r\n\r\n\r\n//BOARD\r\n\r\nfunction getById(workspaces,boardId){\r\n    let board ={}\r\n    workspaces.map(workspace=>\r\n        workspace.boards.map(_board=>\r\n            _board._id===boardId?board=_board:board=null\r\n        )\r\n    )\r\n    if(!board){\r\n        workspaces.map(workspace=>\r\n            workspace.folders.map(folder=>\r\n                folder.boards.map(_board=>\r\n                    _board._id===boardId?board=_board:board=null\r\n                )\r\n            )\r\n        )\r\n    }\r\n    return board\r\n}\r\n\r\nfunction addBoard(currWorkspace, boardName) {\r\n    const newBoard = {\r\n        _id : Date.now().toString(16) + Math.random().toString(16),\r\n        isLastSeen : false,\r\n        name : boardName,\r\n        desc : \"Add board description\",\r\n        createdAt : Date.now(),\r\n        lastUpdated : null,\r\n        dropdownLabels:[],\r\n        statusLabelList: [\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#ffbe0c\",\r\n                    name:\"Working on it\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#2bd44e\",\r\n                    name:\"Done\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#c73d51\",\r\n                    name:\"Delayed\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"rgb(255 60 125)\",\r\n                    name:\"To do\"\r\n                }\r\n            ],\r\n            activities : [],\r\n            isPrivate : false,\r\n            owner : {},\r\n            tableColumns : [ \r\n                {\r\n                    _id :uniqId(),\r\n                    title : \"Group Title\",\r\n                    type : \"Group Title\",\r\n                    taskKey : \"name\"\r\n                }, \r\n                {\r\n                    _id :uniqId(),\r\n                    title : \"Person123\",\r\n                    type : \"People\",\r\n                    taskKey : \"owner\"\r\n                }, \r\n                {\r\n                    _id : uniqId(),\r\n                    title : \"Status123\",\r\n                    type : \"Status\",\r\n                    taskKey : \"status\"\r\n                }, \r\n                {\r\n                    _id : uniqId(),\r\n                    title : \"Date\",\r\n                    type : \"Date\",\r\n                    taskKey : \"createdAt\"\r\n                }\r\n            ],\r\n            tables : [ \r\n                {\r\n                    _id : uniqId(),\r\n                    name : \"Group Title\",\r\n                    color : \"#0085ff\",\r\n                    createdAt : Date.now(),\r\n                    lastUpdated : \"\",\r\n                    tasks : [ \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 1\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            dropdown : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"Done\",\r\n                                color : \"rgb(43, 212, 78)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 2\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            dropdown : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"Working on it\",\r\n                                color : \"rgb(255, 190, 12)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id :uniqId(),\r\n                            name : \"Item 3\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            dropdown : [], \r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }\r\n                    ]\r\n                }, \r\n                {\r\n                    _id :uniqId(),\r\n                    name : \"Group Title\",\r\n                    color : \"#b456dd\",\r\n                    createdAt : Date.now(),\r\n                    lastUpdated : \"\",\r\n                    tasks : [ \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 4\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            dropdown : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 5\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            dropdown : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n    }\r\n    const newWorkspace = currWorkspace\r\n    newWorkspace.boards = [...newWorkspace.boards,newBoard]\r\n    return newWorkspace\r\n}\r\n\r\nfunction addBoardInFolder(currWorkspace,folder,boardName=\"New Board\") {\r\n    const newBoard = {\r\n        _id : Date.now().toString(16) + Math.random().toString(16),\r\n        isLastSeen : false,\r\n        name : boardName,\r\n        desc : \"Add board description\",\r\n        createdAt : Date.now(),\r\n        lastUpdated : null,\r\n        dropdownLabels:[],\r\n        statusLabelList: [\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#ffbe0c\",\r\n                    name:\"Working on it\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#2bd44e\",\r\n                    name:\"Done\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#c73d51\",\r\n                    name:\"Delayed\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"rgb(255 60 125)\",\r\n                    name:\"To do\"\r\n                }\r\n            ],\r\n            activities : [ ],\r\n            isPrivate : false,\r\n            owner : {},\r\n            tableColumns : [ \r\n                {\r\n                    _id :uniqId(),\r\n                    title : \"Group Title\",\r\n                    type : \"Group Title\",\r\n                    taskKey : \"name\"\r\n                }, \r\n                {\r\n                    _id :uniqId(),\r\n                    title : \"Person123\",\r\n                    type : \"People\",\r\n                    taskKey : \"owner\"\r\n                }, \r\n                {\r\n                    _id : uniqId(),\r\n                    title : \"Status123\",\r\n                    type : \"Status\",\r\n                    taskKey : \"status\"\r\n                }, \r\n                {\r\n                    _id : uniqId(),\r\n                    title : \"Date\",\r\n                    type : \"Date\",\r\n                    taskKey : \"createdAt\"\r\n                }\r\n            ],\r\n            tables : [ \r\n                {\r\n                    _id : uniqId(),\r\n                    name : \"Group Title\",\r\n                    color : \"#0085ff\",\r\n                    createdAt : Date.now(),\r\n                    lastUpdated : \"\",\r\n                    tasks : [ \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 1\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            dropdown : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"Done\",\r\n                                color : \"rgb(43, 212, 78)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 2\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            dropdown : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"Working on it\",\r\n                                color : \"rgb(255, 190, 12)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id :uniqId(),\r\n                            name : \"Item 3\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            dropdown : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }\r\n                    ]\r\n                }, \r\n                {\r\n                    _id :uniqId(),\r\n                    name : \"Group Title\",\r\n                    color : \"#b456dd\",\r\n                    createdAt : Date.now(),\r\n                    lastUpdated : \"\",\r\n                    tasks : [ \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 4\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            dropdown : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 5\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            dropdown : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n    }\r\n    let newFolder = {...folder}\r\n    newFolder.boards = [...newFolder.boards,newBoard]\r\n\r\n    currWorkspace.folders = currWorkspace.folders.map(_folder=>\r\n        _folder._id===newFolder._id?newFolder:_folder\r\n    )\r\n    return currWorkspace\r\n}\r\n\r\nfunction removeBoard(currWorkspace, boardId) {\r\n    var boardToRemove =null\r\n    let newWorkspace = {}\r\n    currWorkspace.boards.forEach(_board=>\r\n        _board._id===boardId?\r\n        boardToRemove={..._board}\r\n        :\r\n        null\r\n    )\r\n    if(boardToRemove){\r\n        // board inside the workspace\r\n        newWorkspace={\r\n            ...currWorkspace,\r\n            boards: currWorkspace.boards.filter(_board=>\r\n                _board._id!==boardId\r\n            )\r\n        }\r\n    }else{\r\n        currWorkspace.folders.forEach(folder=>\r\n            folder.boards.forEach(_board=>\r\n                _board._id===boardId?boardToRemove=_board:null\r\n            )\r\n        )\r\n        if(boardToRemove){\r\n            // board inside the folder\r\n            let currFolder = {}\r\n            currWorkspace.folders.forEach(folder=>\r\n                folder.boards.forEach(_board=>_board._id===boardToRemove._id?\r\n                currFolder=folder\r\n                :\r\n                null\r\n                )\r\n            )\r\n            newWorkspace={\r\n                ...currWorkspace,\r\n                folders:currWorkspace.folders.map(folder=>\r\n                    folder._id===currFolder._id?\r\n                    folder = {\r\n                        ...folder,\r\n                        boards: folder.boards.filter(_board=>\r\n                            _board._id!==boardToRemove._id\r\n                        )\r\n                    }\r\n                    :\r\n                    folder\r\n                )\r\n            }\r\n        }\r\n    }\r\n    return newWorkspace\r\n    \r\n}\r\n\r\nfunction addFolder(currWorkspace) {\r\n    const newFolder = {\r\n        _id : Date.now().toString(16) + Math.random().toString(16),\r\n        name : \"New Folder\",\r\n        boards : []\r\n    }\r\n    const newWorkspace = currWorkspace\r\n    newWorkspace.folders = [...newWorkspace.folders,newFolder]\r\n    return newWorkspace\r\n}\r\n\r\nfunction removeFolder(currWorkspace, folderId) {\r\n    const newWorkspace = currWorkspace\r\n    newWorkspace.folders = newWorkspace.folders.filter(folder=>folder._id!==folderId)\r\n    return newWorkspace\r\n}\r\nfunction updateFolder(currWorkspace, newFolder) {\r\n    const newWorkspace = currWorkspace\r\n    newWorkspace.folders = newWorkspace.folders.map(folder=>folder._id===newFolder._id?newFolder:folder)\r\n    return newWorkspace\r\n}\r\n\r\n\r\n//TABLE\r\n\r\nfunction addTable(currBoard) {\r\n    const newTable = {\r\n        _id : Date.now().toString(16) + Math.random().toString(16) + '0'.repeat(16),\r\n        name : \"New Group\",\r\n        color : \"rgb(180, 182, 188)\",\r\n        createdAt : Date.now(),\r\n        lastUpdated : \"\",\r\n        tasks : []\r\n    }\r\n    const newBoard = currBoard\r\n    newBoard.tables = [ newTable,...newBoard.tables]\r\n    return newBoard\r\n}\r\n\r\nfunction removeTable(tableId,currBoard) {\r\n    const newBoard = currBoard\r\n    newBoard.tables = newBoard.tables.filter(table=>table._id!==tableId)\r\n    return newBoard\r\n}\r\n\r\nfunction updateTable(currBoard,updatedTable) {\r\n    const newBoard ={\r\n        ...currBoard, \r\n        tables: currBoard.tables.map(table=>\r\n            table._id===updatedTable._id?\r\n            updatedTable\r\n            :table\r\n        )\r\n    }\r\n    return newBoard\r\n}\r\n\r\n//TASK\r\n\r\nfunction addTask(currTable,currBoard,userInput,user) {\r\n    const newTask = {\r\n        _id : Date.now().toString(16) + Math.random().toString(16) + '0'.repeat(16),\r\n        name : userInput,\r\n        createdAt : Date.now(),\r\n        conversations : [],\r\n        package : \"\",\r\n        owner : [],\r\n        dropdown : [],\r\n        milestone : \"\",\r\n        status : {\r\n            name : \"\",\r\n            color : \"rgb(180, 182, 188)\"\r\n        },\r\n        policyState : {\r\n            name : \"\",\r\n            color : \"\"\r\n        },\r\n        timeline : {\r\n            from : \"\",\r\n            to : \"\"\r\n        },\r\n        duration : \"\",\r\n        tags : [],\r\n        files : [],\r\n        weight : \"\",\r\n        dateCompleted : null,\r\n        progress : \"\",\r\n        lastUpdated : {\r\n            byUser : user,\r\n            date : new Date().getTime() // if Date.now()-time stemp < 1 min then output \"just now\" else output 1 minute ago\r\n        }\r\n    }\r\n    newTask.owner.push(user._id)\r\n    const newBoard = currBoard\r\n    newBoard.tables.map(table=>\r\n        table._id===currTable._id?table.tasks.push(newTask):table\r\n        )\r\n    return newBoard\r\n}\r\n\r\n\r\nfunction updateTask(currTable,currBoard,updatedTask,user) {\r\n    updatedTask.lastUpdated={\r\n        byUser : user._id,\r\n        date :new Date().getTime()\r\n    }\r\n    const newBoard ={\r\n        ...currBoard, \r\n        tables: currBoard.tables.map(table=>\r\n            table._id===currTable._id?\r\n           {...table, tasks:\r\n            table.tasks.map(task=>\r\n                task._id===updatedTask._id?\r\n                updatedTask:task\r\n            )\r\n            }\r\n            :table\r\n        )\r\n    }\r\n    return newBoard\r\n}\r\n\r\n\r\n\r\nfunction removeTask(taskId,currTable,currBoard) {\r\n    const newTable = {\r\n        ...currTable,\r\n        tasks:currTable.tasks.filter(task=>task._id!==taskId)\r\n    }\r\n    const newBoard ={\r\n        ...currBoard, \r\n        tables: currBoard.tables.map(table=>\r\n            table._id===newTable._id?\r\n            newTable\r\n            :table\r\n        )\r\n    }\r\n\r\n    return newBoard\r\n}\r\n\r\n\r\nfunction uniqId() {\r\n    // Math.random should be unique because of its seeding algorithm.\r\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n    // after the decimal.\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n};","import React, { useEffect,useState,useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BsFillStarFill } from 'react-icons/bs'\r\nimport { BoardList } from './BoardList'\r\nimport { boardService } from '../services/boardService'\r\nimport { updateWorkspace,updateCurrWorkspace} from '../store/actions/workspaceActions'\r\n\r\nexport function FavoriteBoards({\r\n    onGettingCurrentBoard,\r\n    CgViewComfortable,\r\n    scroll,\r\n    onEditBoard\r\n    // removeBoard,\r\n    // editBoard,\r\n    // moveBoard,\r\n    // moveBoardToFolder\r\n}){\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const favBoardsIds = useSelector(state => state.user.loggedInUser.favBoards)\r\n    const workspaces = useSelector(state => state.workspace.workspaces);\r\n    const boardWorkspace = useSelector(state => state.workspace.boardWorkspace);\r\n    const dispatch = useDispatch();\r\n    // const [allBoards, setAllBoards] = useState([]);\r\n\r\n    const [workspaceBoards, setWorkspaceBoards] = useState([]);\r\n    const [folderBoards, setFolderBoards] = useState([]);\r\n    \r\n    const [favoriteWorkspaceBoards, setFavoriteWorkspaceBoards] = useState([]);\r\n    const [favoriteFolderBoards, setFavoriteFolderBoards] = useState([]);\r\n    // const [favoriteBoards, setFavoriteBoards] = useState([]);\r\n\r\n    const removeBoard=(boardId)=>{\r\n        const newWorkspace = boardService.removeBoard(boardWorkspace, boardId)\r\n        dispatch(updateWorkspace(newWorkspace))\r\n        dispatch(updateCurrWorkspace(newWorkspace))\r\n    }\r\n\r\n    //move board to another workspace or move board in folder to the workspace\r\n    const moveBoard=(newWorkspace,cuurBoard)=>{\r\n        if(boardWorkspace._id===newWorkspace._id){\r\n            const updatedWorkspace = boardService.removeBoard(boardWorkspace, cuurBoard._id)\r\n            const newWorkspaceToUpdate={\r\n                ...updatedWorkspace,\r\n                boards:[...updatedWorkspace.boards, cuurBoard]\r\n            }\r\n            dispatch(updateWorkspace(newWorkspaceToUpdate))\r\n            dispatch(updateCurrWorkspace(newWorkspaceToUpdate))\r\n        }else{\r\n            removeBoard(cuurBoard._id)\r\n            const newWorkspaceToUpdate={\r\n                ...newWorkspace,\r\n                boards:[...newWorkspace.boards, cuurBoard]\r\n            }\r\n            dispatch(updateWorkspace(newWorkspaceToUpdate))\r\n            dispatch(updateCurrWorkspace(newWorkspaceToUpdate))\r\n        }\r\n    }\r\n    //move board to another folder\r\n    const moveBoardToFolder=(folderWorkspace,newFolder,cuurBoard)=>{\r\n        const updatedWorkspace = boardService.removeBoard(boardWorkspace, cuurBoard._id)\r\n        dispatch(updateWorkspace(updatedWorkspace))\r\n        dispatch(updateCurrWorkspace(updatedWorkspace))\r\n        const newFolderToUpdate={\r\n            ...newFolder,\r\n            boards:[...newFolder.boards, cuurBoard]\r\n        }\r\n        if(updatedWorkspace._id===folderWorkspace._id){\r\n            const newWorkspace = boardService.updateFolder(updatedWorkspace, newFolderToUpdate)\r\n            dispatch(updateWorkspace(newWorkspace))\r\n            dispatch(updateCurrWorkspace(newWorkspace))\r\n        }else{\r\n            const newWorkspace = boardService.updateFolder(folderWorkspace, newFolderToUpdate)\r\n            dispatch(updateWorkspace(newWorkspace))\r\n            dispatch(updateCurrWorkspace(newWorkspace))\r\n        }\r\n    }  \r\n    \r\n\r\n    function editBoard(newBoard){\r\n            let newWorkspace = boardWorkspace\r\n            let boardInsideFolder = {\r\n                isBoardInsideFolder:false,\r\n                cuurFolde:null\r\n            }\r\n            newWorkspace.folders.map(folder=>\r\n                folder.boards.map(board=>\r\n                    board._id === newBoard._id?boardInsideFolder={\r\n                        ...boardInsideFolder,\r\n                        isBoardInsideFolder:true,\r\n                        cuurFolde:folder\r\n                    }\r\n                    :null\r\n                    \r\n            ))\r\n            if(boardInsideFolder.isBoardInsideFolder){\r\n                //board insode folder\r\n                newWorkspace ={\r\n                    ...boardWorkspace, \r\n                    folders: boardWorkspace.folders.map(folder=>\r\n                        folder._id===boardInsideFolder.cuurFolde._id?\r\n                       {...folder, boards:\r\n                        folder.boards.map(board=>\r\n                            board._id === newBoard._id?\r\n                            newBoard:board\r\n                        )}\r\n                        :folder\r\n                    )\r\n                }\r\n            }else{\r\n                //board insode workspace\r\n                 //replace the currBoard whith the new Board\r\n                newWorkspace.boards = newWorkspace.boards.map(board=>\r\n                    board._id === newBoard._id?newBoard:board\r\n                )\r\n            }\r\n            // send to update updateWorkspace\r\n            dispatch(updateWorkspace(newWorkspace))\r\n            dispatch(updateCurrWorkspace(newWorkspace))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setWorkspaceBoards([])\r\n        setFolderBoards([])\r\n        if(loggedInUser.favBoards.length>0){\r\n            workspaces.forEach(workspace=>{ \r\n                setWorkspaceBoards(prevState =>[...prevState,...workspace.boards])\r\n                // setAllBoards(prevState =>[...prevState,...workspace.boards])\r\n                workspace.folders.map(folder=>\r\n                    setFolderBoards(prevState =>[...prevState,...folder.boards])\r\n                    // setAllBoards(prevState =>[...prevState,...folder.boards])\r\n                )}\r\n            )\r\n        }\r\n    }, [loggedInUser,favBoardsIds,workspaces])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setFavoriteBoards(allBoards.filter(board=>favBoardsIds.includes(board._id)))\r\n    // }, [allBoards,favBoardsIds])    \r\n    useEffect(() => {\r\n        setFavoriteWorkspaceBoards(workspaceBoards.filter(board=>favBoardsIds.includes(board._id)))\r\n    }, [workspaceBoards,favBoardsIds])       \r\n    useEffect(() => {\r\n        setFavoriteFolderBoards(folderBoards.filter(board=>favBoardsIds.includes(board._id)))\r\n    }, [folderBoards,favBoardsIds])    \r\n\r\n\r\n    return (\r\n        <div className=\"favorite-toolbar-menu\">\r\n            <div className=\"title-wrapper\">\r\n                <BsFillStarFill className='star'/>\r\n                <div>Favorites</div>\r\n            </div>\r\n\r\n            {\r\n                favoriteWorkspaceBoards.length>0||favoriteFolderBoards.length>0?\r\n                <div>\r\n                    {\r\n                        favoriteWorkspaceBoards.length>0&&\r\n                        <BoardList \r\n                        boards={favoriteWorkspaceBoards}\r\n                        onGettingCurrentBoard={onGettingCurrentBoard}\r\n                        CgViewComfortable={CgViewComfortable}\r\n                        removeBoard={removeBoard}\r\n                        editBoard={editBoard}\r\n                        moveBoard={moveBoard}\r\n                        moveBoardToFolder={moveBoardToFolder}\r\n                        scroll={scroll}\r\n                        cmp='favorite'\r\n                        onEditBoard={onEditBoard}\r\n                    />\r\n                    }\r\n                     {\r\n                        favoriteFolderBoards.length>0&&\r\n                        <BoardList \r\n                        boards={favoriteFolderBoards}\r\n                        onGettingCurrentBoard={onGettingCurrentBoard}\r\n                        CgViewComfortable={CgViewComfortable}\r\n                        removeBoard={removeBoard}\r\n                        editBoard={editBoard}\r\n                        moveBoard={moveBoard}\r\n                        moveBoardToFolder={moveBoardToFolder}\r\n                        scroll={scroll}\r\n                        object='insideFolder'\r\n                        cmp='favorite'\r\n                        onEditBoard={onEditBoard}\r\n                    />\r\n                    }\r\n                </div>\r\n                :\r\n                <div className=\"no-favorite-msg\">\r\n                    <div>\r\n                        <BsFillStarFill className='star'/>\r\n                    </div>\r\n                    <div>\r\n                        No favorite boards yet\r\n                    </div>\r\n                    <div>\r\n                        'Star' any board so that you can easily access it later\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState,useRef } from 'react';\r\nimport { FolderList } from \"./FolderList\";\r\nimport { BoardList } from \"./BoardList\";\r\nimport { UpdateWorkspace } from \"./UpdateWorkspace\";\r\nimport { ToolbarMenuActionsBtn } from \"./ToolbarMenuActionsBtn\";\r\nimport { Search } from \"./Search\";\r\nimport { FavoriteBoards } from \"./FavoriteBoards\";\r\n\r\nexport function BoardToolbarMenu({\r\n    IoIosArrowForward, \r\n    isToolbarMenuClose, \r\n    onToggleToolbarMenu, \r\n    IoIosArrowBack, \r\n    workspace,\r\n    IoMdArrowDropdown,\r\n    CgViewComfortable,\r\n    onGettingCurrentBoard,\r\n    onGettingCurrentBoardInWorkspace,\r\n    addNewBoard,\r\n    addNewFloder,\r\n    addBoardInFolder,\r\n    removeFolder,\r\n    updateFolder,\r\n    removeBoard,\r\n    editBoard,\r\n    moveFolder,\r\n    moveBoard,\r\n    moveBoardToFolder,\r\n    isNewFolderCreated,\r\n    onEndNewFolderUpdating,\r\n    updateWorkspace,\r\n    deleteWorkspace,\r\n    onGettingCurrentWorkspace,\r\n    onManageWorkspace,\r\n    toolbarActiveBtn,\r\n    onEditBoard\r\n}) {\r\n\r\nconst [scroll, setScroll] = useState(0)\r\nconst [search, setSearch] = useState(\"\");\r\n\r\nconst [filteredFolders, setFilteredFolders] = useState([]);\r\nconst [filteredBoards, setFilteredBoards] = useState([]);\r\n\r\nuseEffect(() => {\r\n    console.log('scroll',scroll);\r\n}, [scroll])\r\n\r\n    if (!workspace.boards|| !workspace.folders) return <div>Loading....</div>\r\n    return (\r\n        <div className={`board-toolbar-menu ${isToolbarMenuClose?'close-toolbar-menu':'open-toolbar-menu'}`}>\r\n            <div className=\"sticky-wrapper\">\r\n            \r\n                <div className={`toggle-toolbar-menu-btn ${isToolbarMenuClose?'open':'close'}`} onClick={onToggleToolbarMenu}>\r\n                    {isToolbarMenuClose? <IoIosArrowForward style={{ width: '15px', height: '15px' }}/>:<IoIosArrowBack style={{ width: '15px', height: '15px' }}/>}\r\n                    {isToolbarMenuClose?<span className=\"label-text\">Open navigation</span>:<span className=\"label-text\">Close navigation</span>}\r\n                </div>\r\n                <div className={`navigation-container ${isToolbarMenuClose?'hide-txt':'show-txt'}`}>\r\n                        {toolbarActiveBtn==='favorite'?\r\n                        <FavoriteBoards\r\n                        onGettingCurrentBoard={onGettingCurrentBoard}\r\n                        CgViewComfortable={CgViewComfortable}\r\n                        removeBoard={removeBoard}\r\n                        editBoard={editBoard}\r\n                        moveBoard={moveBoard}\r\n                        moveBoardToFolder={moveBoardToFolder}\r\n                        scroll={scroll}\r\n                        onEditBoard={onEditBoard}\r\n                        />\r\n                        :\r\n                        <>\r\n                        <div className=\"nav-first-area\">\r\n                            <UpdateWorkspace \r\n                            updateWorkspace={updateWorkspace}\r\n                            deleteWorkspace={deleteWorkspace}\r\n                            onGettingCurrentWorkspace={onGettingCurrentWorkspace}\r\n                            onManageWorkspace={onManageWorkspace}\r\n                            />\r\n                            <div className=\"actions-container\">\r\n                                    <ToolbarMenuActionsBtn \r\n                                        btnName={'Add'}\r\n                                        addNewBoard={addNewBoard}\r\n                                        addNewFloder={addNewFloder}\r\n                                    /> \r\n                                    <ToolbarMenuActionsBtn \r\n                                        btnName={'Filters'}\r\n                                    />\r\n                                    \r\n                                    <Search  \r\n                                    search={search} \r\n                                    setSearch={setSearch} \r\n                                    setFilteredFolders={setFilteredFolders} \r\n                                    setFilteredBoards={setFilteredBoards} \r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"nav-second-area\">\r\n                            <div className={`second-area-wrapper`}>      \r\n                                <div className={`second-area-content`}\r\n                                    onScroll={() => {\r\n                                        console.log('scroll');\r\n                                        setScroll(curr=>curr+1)\r\n                                    }}\r\n                                >\r\n                                    {workspace.folders.length>0&&\r\n                                        <FolderList \r\n                                            folders={filteredFolders} \r\n                                            IoMdArrowDropdown={IoMdArrowDropdown}\r\n                                            CgViewComfortable={CgViewComfortable}\r\n                                            onGettingCurrentBoard={onGettingCurrentBoard}\r\n                                            addBoardInFolder={addBoardInFolder}\r\n                                            removeFolder={removeFolder}\r\n                                            updateFolder={updateFolder}\r\n                                            removeBoard={removeBoard}\r\n                                            editBoard={editBoard}\r\n                                            moveFolder={moveFolder}\r\n                                            moveBoard={moveBoard}\r\n                                            moveBoardToFolder={moveBoardToFolder}\r\n                                            scroll={scroll}\r\n                                            isNewFolderCreated={isNewFolderCreated}\r\n                                            onEndNewFolderUpdating={onEndNewFolderUpdating}\r\n                                            onEditBoard={onEditBoard}\r\n        \r\n                                        />\r\n                                    }\r\n                                    { workspace.boards.length>0&&\r\n                                        <BoardList \r\n                                            boards={filteredBoards}\r\n                                            onGettingCurrentBoard={onGettingCurrentBoard}\r\n                                            CgViewComfortable={CgViewComfortable}\r\n                                            removeBoard={removeBoard}\r\n                                            editBoard={editBoard}\r\n                                            moveBoard={moveBoard}\r\n                                            moveBoardToFolder={moveBoardToFolder}\r\n                                            scroll={scroll}\r\n                                            onEditBoard={onEditBoard}\r\n                                        />\r\n                                    }\r\n\r\n                                    { workspace.boards.length<1&&workspace.folders.length<1&&\r\n                                        <div className=\"empty-workspace\">\r\n                                            <div className=\"small-font\">\r\n                                                Workspace is empty\r\n                                            </div>\r\n                                            <div className=\"small-font\">\r\n                                                Create or add boards\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </>\r\n                        }\r\n                </div>\r\n\r\n            </div>  \r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react'\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from 'react-redux'\r\nimport { loadWorkspaces, updateWorkspace } from '../store/actions/workspaceActions'\r\nimport { updateCurrBoard} from '../store/actions/workspaceActions'\r\nimport { toggleFavUserBoardList } from '../store/actions/userActions'\r\nimport { BsFillStarFill,BsPeople,BsThreeDots,BsFilter } from 'react-icons/bs'\r\nimport { SiProbot } from 'react-icons/si'\r\nimport { ImTable } from 'react-icons/im'\r\nimport {IoIosArrowDown} from 'react-icons/io'\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\nimport { BiUserCircle } from 'react-icons/bi'\r\nimport { RiArrowUpDownFill } from 'react-icons/ri'\r\n\r\nexport class _BoardHeader extends Component {\r\n    state={\r\n        board:{},\r\n        name:'',\r\n        desc:'',\r\n        isSearchActive:false\r\n    }\r\n    inputRef = React.createRef();\r\n    async componentDidMount(){\r\n        if(this.props.board){\r\n            this.setState({name:this.props.board.name})\r\n            this.setState({desc:this.props.board.desc})\r\n            this.setState({board:this.props.board}) \r\n        }\r\n        \r\n        this.editableBoardName = React.createRef();\r\n        this.editableBoardDesc = React.createRef();\r\n    }\r\n    async componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params.id !==  this.props.match.params.id) {\r\n        this.setState({name:this.props.board.name})\r\n        this.setState({desc:this.props.board.desc})\r\n        this.setState({board:this.props.board}) \r\n        }\r\n\r\n        if (prevProps.board.name !==  this.props.board.name) {\r\n            this.setState({name:this.props.board.name})\r\n            this.setState({desc:this.props.board.desc})\r\n            this.setState({board:this.props.board}) \r\n        }\r\n    }\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    handleChangeBoardName = (ev) => {\r\n        this.setState({name: ev.target.value})\r\n        this.setState({ board: { ...this.state.board, name: ev.target.value } })\r\n    }\r\n    handleChangeBoardDesc=(ev)=>{\r\n        this.setState({desc: ev.target.value})\r\n        this.setState({ board: { ...this.state.board, desc: ev.target.value } })\r\n    }\r\n    changeToContentEditable=(value)=>{\r\n            let content = [];\r\n            if(value==='name'){\r\n                content.push(\r\n                    <ContentEditable\r\n                        onFocus={this.focusText}\r\n                        className='content-editable'\r\n                        innerRef={this.editableBoardName}\r\n                        html={this.state.name}\r\n                        disabled={false}  \r\n                        onChange={this.handleChangeBoardName}\r\n                        onBlur={() => {\r\n                            if (this.props.board.name === this.state.name) return\r\n                            const desc = `changed the board name from \"${this.props.board.name}\" to \"${this.state.name}\"`\r\n                            const updatedBoard = {\r\n                                ...this.props.board,\r\n                                name: this.state.name,\r\n                                activities:[\r\n                                    {\r\n                                        desc: desc,\r\n                                        userId: this.props.loggedInUser._id,\r\n                                        createdAt: Date.now()\r\n                                    },\r\n                                    ...this.props.board.activities]\r\n                            }\r\n                            this.props.onEditBoard(updatedBoard)\r\n                            this.props.updateCurrBoard(updatedBoard)\r\n\r\n                        }}\r\n                        onKeyDown={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                ev.target.blur()\r\n                            }\r\n                        }}\r\n                    />\r\n                )\r\n            }else{\r\n                content.push(\r\n                    <ContentEditable\r\n                        onFocus={this.focusText}\r\n                        className='content-editable'\r\n                        innerRef={this.editableBoardDesc}\r\n                        html={this.state.desc}\r\n                        disabled={false}  \r\n                        onChange={this.handleChangeBoardDesc}\r\n                        onBlur={() => {\r\n                            if (this.props.board.desc === this.state.desc) return\r\n                            const desc = `changed the board description from \"${this.props.board.desc}\" to \"${this.state.desc}\"`\r\n                            const updatedBoard = {\r\n                                ...this.props.board,\r\n                                desc:this.state.desc,\r\n                                activities:[\r\n                                    {\r\n                                        desc: desc,\r\n                                        userId: this.props.loggedInUser._id,\r\n                                        createdAt: Date.now()\r\n                                    },\r\n                                    ...this.props.board.activities]\r\n                            }\r\n                            this.props.onEditBoard(updatedBoard)\r\n                            this.props.updateCurrBoard(updatedBoard)\r\n                        }}\r\n                        onKeyDown={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                ev.target.blur()\r\n                            }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n            \r\n            return content;\r\n    }\r\n\r\n    getFavBoardStyle(){\r\n            if(this.props.loggedInUser.favBoards.includes(this.state.board._id)){\r\n                return 'fav'\r\n            }\r\n    }\r\n    toggleFavUserBoardList=()=>{\r\n       this.props.toggleFavUserBoardList(this.props.loggedInUser,this.props.board._id)\r\n       const desc = `${this.props.loggedInUser.favBoards.includes(this.props.board._id)?'added board to ':'removed board from '}favorites`\r\n       const updatedBoard = {\r\n        ...this.props.board,\r\n        activities:[\r\n            {\r\n                desc: desc,\r\n                userId: this.props.loggedInUser._id,\r\n                createdAt: Date.now()\r\n            },\r\n            ...this.props.board.activities]\r\n        }\r\n        this.props.onEditBoard(updatedBoard)\r\n        this.props.updateCurrBoard(updatedBoard)\r\n    }\r\n    render() {\r\n        const {\r\n            onAddNewTable,\r\n            setSearch\r\n        } = this.props\r\n        const {board} = this.state\r\n        if (!board) return <div>Loading....</div>\r\n        return (\r\n        <div className=\"board-header\">\r\n                        <div className=\"board-info\">\r\n                            <div>\r\n                                <span className=\"board-title\">\r\n                                    {/* {board.name} */}\r\n                                    {this.changeToContentEditable('name')}\r\n                                </span>\r\n                                <div className='add-to-favorite-btn'>\r\n                                    <BsFillStarFill \r\n                                    className={`BsFillStarFill ${this.getFavBoardStyle()}`}\r\n                                    onClick={this.toggleFavUserBoardList}\r\n                                    />\r\n                                    {this.props.loggedInUser.favBoards.includes(board._id)?<span className=\"label-text arrow-up\">Remove from favorites</span>:\r\n                                    <span className=\"label-text arrow-up\">Add to favorites</span>}\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"board-viewers\">\r\n                                    {/* img */}\r\n                                </div>\r\n                                <div className=\"board-integrations\">\r\n                                    <div className=\"icons-container\">\r\n                                        <div className=\"icon-hexagon-wrapper\">\r\n                                            <img src=\"https://img.icons8.com/color/13/000000/slack-new.png\" alt=''/>\r\n                                        </div>\r\n                                        <div className=\"icon-hexagon-wrapper\">\r\n                                            <img src=\"https://img.icons8.com/fluent/13/000000/gmail--v1.png\" alt=''/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <span>Integrate / 2</span>\r\n                                </div>\r\n                                <div className=\"board-automations\">\r\n                                    <SiProbot />\r\n                                    <span>Automate / 2</span>\r\n                                </div>\r\n                                <div className=\"board-subscribers\">\r\n                                    <BsPeople/>\r\n                                    <span> / 1</span>\r\n                                </div>\r\n                                <div className=\"board-activities\" \r\n                                onClick={this.props.openActivitiesModal}\r\n                                >\r\n                                    Activities / {this.props.board.activities.length>0?this.props.board.activities.length:0}\r\n                                </div>\r\n                                <div className=\"board-more-options\">\r\n                                    <BsThreeDots />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"board-desc\">\r\n                        {/* {board.desc} */}\r\n                        {this.changeToContentEditable('desc')}\r\n                        </div>\r\n                        <div className=\"board-actions\">\r\n                            <div>\r\n                                <ImTable style={{ width: '15px', height: '15px' }}/>\r\n                                <span className=\"main-table\">Main Table / {this.props.board.tables.length}</span>\r\n                                <IoIosArrowDown style={{ width: '12px', height: '12px' }}/>\r\n                            </div>\r\n                            <div className=\"actions-continer\">\r\n                                <div onClick={onAddNewTable}>\r\n                                    <span>New Item</span>\r\n                                    <IoIosArrowDown style={{ width: '12px', height: '12px' }}/>\r\n                                </div>\r\n                                <div className=\"header-search-wrapper\">\r\n                                {!this.state.isSearchActive?\r\n                                <div onClick={()=>{\r\n                                    this.setState({isSearchActive:true})\r\n                                   setTimeout(() => {\r\n                                       if(this.inputRef&&this.inputRef.current){\r\n                                            this.inputRef.current.focus()\r\n                                       }\r\n                                   }, 0);\r\n                                }}\r\n                                className=\"header-action-btn\"\r\n                                >\r\n                                    <HiOutlineSearch/>\r\n                                    <span>Search</span>\r\n                                </div>:\r\n                                <input className=\"search-input stretch-left\" ref={this.inputRef} type=\"search\" onChange={(e) => setSearch(e.target.value)}\r\n                                placeholder='Search'\r\n                                onBlur={(e)=>{\r\n                                    if(e.target.value!=='')return\r\n                                    this.setState({isSearchActive:false})\r\n\r\n                                }}\r\n                                onKeyDown={(ev) => {\r\n                                    if (ev.key === 'Enter') {\r\n                                        ev.target.blur()\r\n                                    }\r\n                                }}\r\n                                />}\r\n                                </div>\r\n                                \r\n                                <div>\r\n                                    <BiUserCircle/>\r\n                                    <span>Person</span>\r\n                                </div>\r\n                                <div>\r\n                                    <BsFilter/>\r\n                                    <span>Filter</span>\r\n                                </div>\r\n                                <div>\r\n                                    <RiArrowUpDownFill/>\r\n                                    <span>Sort</span>\r\n                                </div>\r\n                                <div>\r\n                                    <BsThreeDots />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n        </div>\r\n    );\r\n}}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        workspaces: state.workspace.workspaces,\r\n        board: state.workspace.currBoard,\r\n        loggedInUser: state.user.loggedInUser,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadWorkspaces,\r\n    updateWorkspace,\r\n    toggleFavUserBoardList,\r\n    updateCurrBoard\r\n}\r\nexport const BoardHeader = connect(mapStateToProps, mapDispatchToProps)(withRouter(_BoardHeader))\r\n","export const getColumnWidth = (columnName) =>\r\n{\r\n    switch (columnName) {\r\n        case 'checkBox':\r\n            return 'checkbox-cell-width'\r\n        case 'lastUpdated':\r\n            return 'last-updated-cel-width'\r\n        case 'text':\r\n            return 'text-cell-width'\r\n        case 'dropdown':\r\n            return 'dropdown-cell-width'\r\n        default:\r\n            return ''\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport class UpdateLabelName extends Component {\r\n    state={\r\n        isUpdateLabelName:false,\r\n        label:{}\r\n    }\r\n    async componentDidMount() {\r\n        this.setState({label:this.props.statusLabel})\r\n        this.editableLabelName = React.createRef();\r\n    }\r\n    handelChangeLabelName = (ev) => {\r\n        this.setState({ label: { ...this.state.label, name: ev.target.value } },()=>{\r\n            this.props.updateLabel(this.state.label)\r\n        })\r\n    }\r\n    onUpdateLabelName=()=>{\r\n        this.setState({label:this.props.statusLabel},()=>{\r\n            this.setState({isUpdateLabelName:true},()=>{\r\n                this.editableLabelName.current.focus()\r\n                this.editableLabelName.current.select()\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isUpdateLabelName,label } = this.state\r\n        const { statusLabel } = this.props\r\n        return (\r\n            <span \r\n                className=\"edit-label-name\" \r\n                onClick={this.onUpdateLabelName} \r\n            >\r\n                { isUpdateLabelName? \r\n                    <input \r\n                    className=\"update-label-name-input\"\r\n                    type=\"text\" \r\n                    value={label.name} \r\n                    onChange={this.handelChangeLabelName}\r\n                    ref={this.editableLabelName} \r\n                    onBlur={()=>{\r\n                        this.setState({isUpdateLabelName:false})\r\n                    }}\r\n                    onKeyDown={(ev) => {\r\n                        if (ev.key === 'Enter') {\r\n                            ev.target.blur()\r\n                            this.setState({isUpdateLabelName:false})\r\n                        }\r\n                    }}\r\n                    />\r\n                    :\r\n                    <span>{statusLabel.name}</span>\r\n                }\r\n            </span>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {UpdateLabelName} from './UpdateLabelName'\r\nimport {TiDelete} from 'react-icons/ti'\r\n\r\nexport class StatusLabelPreview extends Component {\r\n    state={\r\n        isUpdateLabelColor:false,\r\n        newLabelColor:null,\r\n        currLabel:{}\r\n    }\r\n    async componentDidMount() {\r\n        this.setState({currLabel:this.props.statusLabel})\r\n    }\r\n    onToggleUpdateLabelColor=(currLabel)=>{\r\n        this.setState({isUpdateLabelColor:!this.state.isUpdateLabelColor},()=>{\r\n            this.props.hideColorPicker(this.state.isUpdateLabelColor)\r\n        })\r\n        this.setState({currLabel})\r\n    }\r\n    onChangeNewLabelColor=(currColor)=>{\r\n        this.setState({newLabelColor:currColor})\r\n    }\r\n    onRemoveNewLabelColor=()=>{\r\n        this.setState({newLabelColor:null})\r\n    }\r\n    onSaveColor=(color)=>{\r\n        if(this.state.isUpdateLabelColor){\r\n        this.setState({currLabel:{...this.state.currLabel, color:color}})\r\n        this.setState({isUpdateLabelColor:false},()=>{\r\n            this.props.hideColorPicker(this.state.isUpdateLabelColor)\r\n            this.props.updateLabel(this.state.currLabel)\r\n        })\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        const { isUpdateLabelColor } = this.state\r\n        const { BsDroplet,statusLabel,colorsPicker,idx,updateLabel ,provided } = this.props\r\n        return (\r\n            <>\r\n            <div className={`stat-label-edit-wrapper ${idx>5?'sec-column':''}`} ref={provided.innerRef} {...provided.draggableProps}>\r\n            <div className=\"status-label-dots-btn\"  {...provided.dragHandleProps}>\r\n               ::\r\n            </div>\r\n            <div \r\n                title={`${statusLabel.name}`}\r\n                className={`stat-label-edit ${statusLabel.name.length>13?'ellipsis-label-name-edit':''}`}\r\n                tabindex=\"0\"\r\n            >\r\n                {!isUpdateLabelColor?   \r\n                    <span className=\"edit-label-color\" style={{backgroundColor:`${statusLabel.color}`}} onClick={()=>this.onToggleUpdateLabelColor(statusLabel)}>\r\n                        <BsDroplet className={`BsDroplet ${statusLabel.color==='black'?'light-drop-on-dark-color':''}`}/>\r\n                    </span>\r\n                :\r\n                    <span className=\"edit-label-color\" style={{backgroundColor:`${this.state.newLabelColor?this.state.newLabelColor:statusLabel.color}`}} onClick={()=>this.onToggleUpdateLabelColor(statusLabel)} >\r\n                        <BsDroplet className={`BsDroplet ${statusLabel.color==='black'?'light-drop-on-dark-color':''}`}/>\r\n                    </span>\r\n                }\r\n                {/* { !isUpdateLabelColor?\r\n                <UpdateLabelColor statusLabel={statusLabel} BsDroplet={BsDroplet} onToggleUpdateLabelColor={this.onToggleUpdateLabelColor} comStyle={{backgroundColor:`${statusLabel.color}`}}/>:\r\n                <UpdateLabelColor statusLabel={statusLabel} BsDroplet={BsDroplet} onToggleUpdateLabelColor={this.onToggleUpdateLabelColor} comStyle={{backgroundColor:`${this.state.newLabelColor?this.state.newLabelColor:statusLabel.color}`}}/>} */}\r\n\r\n                <UpdateLabelName statusLabel={statusLabel} updateLabel={updateLabel}/>\r\n            </div> \r\n            <div className=\"status-label-delete-btn\" onClick={()=>this.props.onRemoveLabel(statusLabel._id)}>\r\n                <TiDelete/>\r\n                <span className=\"label-text-on-top\">Delete Labels</span>\r\n            </div>\r\n        </div>\r\n\r\n        {isUpdateLabelColor&&\r\n        <div className=\"label-color-edit\" style={{gridRowStart: idx<6?idx+2:idx-4,gridRowEnd:idx<6?idx+6:idx}}>\r\n            <div className='status-color-picker'>\r\n                {colorsPicker.map(color=>\r\n                    <div \r\n                    className=\"color\" \r\n                    style={{backgroundColor:`${color}`}}\r\n                    onMouseEnter={() => this.onChangeNewLabelColor(color)}\r\n                    onMouseLeave={() => this.onRemoveNewLabelColor()}\r\n                    onClick={()=>this.onSaveColor(color)}\r\n                    ></div>\r\n                )}\r\n            </div>\r\n        </div>\r\n        }\r\n           </>\r\n        )\r\n    }\r\n}\r\n","export  const colorsPicker = [\r\n    '#f368e0',\r\n    '#FC427B',\r\n    '#e84118',\r\n    '#ff6b6b',\r\n    '#ff9f43',\r\n    '#f3a683',\r\n    '#feca57',\r\n    '#fbc531',\r\n    '#4cd137',\r\n    '#1dd1a1',\r\n    '#01a3a4',\r\n    '#48dbfb',\r\n    '#54a0ff',\r\n    '#00a8ff',\r\n    '#487eb0',\r\n    '#273c75',\r\n    '#3B3B98',\r\n    '#341f97',\r\n    '#5f27cd',\r\n    '#9c88ff',\r\n    '#D6A2E8',\r\n    '#ff9ff3',\r\n    '#f8a5c2',\r\n    '#f78fb3',\r\n    '#c8d6e5',\r\n    '#7f8fa6',\r\n    '#353b48',\r\n    'black'\r\n]","import React, { Component } from 'react'\r\nimport {BsDroplet} from 'react-icons/bs'\r\nimport {StatusLabelPreview} from './StatusLabelPreview'\r\nimport {colorsPicker} from '../data/colorPicker'\r\nimport { DragDropContext,Droppable ,Draggable   } from 'react-beautiful-dnd';\r\n\r\n\r\nexport class TaskStatus extends Component {\r\n    state={\r\n        statusLabelList:[],\r\n        newLabelColor:null,\r\n        isUpdateLabelColor:false,\r\n        currLabel:{},\r\n        hideColorPicker:false,\r\n        boardCopy:null\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const statusLabelList = [...this.props.board.statusLabelList]\r\n        this.setState({statusLabelList})\r\n        this.setState({boardCopy:this.props.board})\r\n    }\r\n\r\n    updateTask=(table,task,statusLabel)=>{\r\n        if(task.status.name===statusLabel.name){\r\n            this.props.setIsStatusModalOpen(false)\r\n            return\r\n        }\r\n        const updatedTask = {\r\n            ...task,\r\n            status:statusLabel\r\n        }\r\n        const desc = `changed task \"${task.name}\" status from \"${task.status.name}\" to \"${statusLabel.name}\"`\r\n        this.props.onEditTask(table,updatedTask,desc)\r\n        this.props.setIsStatusModalOpen(false)\r\n    }\r\n    onChangeNewLabelColor=(currColor)=>{\r\n        this.setState({newLabelColor:currColor})\r\n    }\r\n    onRemoveNewLabelColor=()=>{\r\n        this.setState({newLabelColor:null})\r\n    }\r\n    onAddNewLabel=(currColor)=>{\r\n        if(this.props.board.statusLabelList.length===12)return\r\n        this.setState({\r\n            statusLabelList:[\r\n                ...this.props.board.statusLabelList,\r\n                {\r\n                    _id:(new Date()).getTime().toString(),\r\n                    color:currColor,\r\n                    name:'New Label'\r\n                }\r\n            ]\r\n        },()=>{\r\n            const newBoard = {\r\n                ...this.props.board,\r\n                 statusLabelList:[...this.props.board.statusLabelList,{\r\n                    _id:(new Date()).getTime().toString(),\r\n                    color:currColor,\r\n                    name:'New Label'\r\n                }]\r\n            }\r\n            this.props.onEditBoard(newBoard,null)\r\n        })\r\n    }\r\n    onRemoveLabel=(labelId)=>{\r\n        const newstatusLabelList = this.state.statusLabelList.filter(label=>label._id!==labelId)\r\n        this.setState({\r\n            statusLabelList:newstatusLabelList\r\n        },()=>{\r\n            const newBoard = {\r\n                ...this.props.board,\r\n                statusLabelList:newstatusLabelList\r\n            }\r\n            this.props.onEditBoard(newBoard,null)\r\n        })\r\n    }\r\n    updateLabel=(newLabel)=>{\r\n        const newstatusLabelList = this.props.board.statusLabelList.map(label=>label._id===newLabel._id?newLabel:label)\r\n        this.setState({\r\n            statusLabelList:newstatusLabelList\r\n        },()=>{\r\n            const newBoard = {...this.props.board,\r\n                statusLabelList:newstatusLabelList\r\n            }\r\n            this.props.onEditBoard(newBoard,null)\r\n        })\r\n    }\r\n    onToggleUpdateLabelColor=(currLabel)=>{\r\n        this.setState({isUpdateLabelColor:!this.state.isUpdateLabelColor})\r\n        this.setState({currLabel})\r\n    }\r\n    hideColorPicker=(toggleUpdateLabel)=>{\r\n        if(toggleUpdateLabel){\r\n            this.setState({hideColorPicker:true})\r\n        }else{\r\n            this.setState({hideColorPicker:false})\r\n        }\r\n    }\r\n    handleDragEnd=({destination, source})=>{\r\n       if(!destination){\r\n           // console.log(\"not dropped in droppable\")\r\n           return\r\n       }\r\n       if(destination.index===source.index&&destination.draggableId===source.draggableId){\r\n           // console.log(\"dropped in same place\")\r\n           return\r\n       }\r\n        //board.statusLabelList\r\n       const statusLabelListCopy = {...this.props.board.statusLabelList[source.index]}\r\n       this.setState({ // no previous or latest old state passed \r\n            boardCopy:{...this.state.boardCopy}\r\n            }, ()=>{\r\n                this.state.boardCopy.statusLabelList.splice(source.index,1);\r\n                this.state.boardCopy.statusLabelList.splice(destination.index, 0, statusLabelListCopy);\r\n                return this.state.boardCopy\r\n        })  \r\n        this.props.onEditBoard(this.state.boardCopy,null)\r\n   }\r\n    render() {\r\n        const { task, table, FaPencilAlt, board, isEditLabelsModalOpen, openEditLabelsModal, closeEditLabelsModal} = this.props\r\n\r\n        if (!task) return <div>Loading....</div>\r\n        return (\r\n            <div className=\"status-modal-wrapper\">\r\n                {\r\n                    !isEditLabelsModalOpen&&\r\n                    <>\r\n                        <div className=\"status-label-list-container\">\r\n                            {\r\n                            board.statusLabelList.map((statusLabel,idx)=>\r\n                                <div \r\n                                title={`${statusLabel.name}`}\r\n                                className={`stat-label ${statusLabel.name.length>13?'ellipsis-label-name':''}`}\r\n                                tabindex=\"0\"\r\n                                style={{backgroundColor:`${statusLabel.color}`}}\r\n                                onMouseDown={()=>this.updateTask(table,task,statusLabel)}\r\n                                >\r\n                                   {statusLabel.name}\r\n                                </div> \r\n                            )}\r\n                        </div>\r\n                        <div className=\"status-label-btn edit-status\" onClick={openEditLabelsModal}>\r\n                            <FaPencilAlt className=\"status-FaPencilAlt\"/>\r\n                            <span>Add/Edit Labels</span>\r\n                        </div>\r\n                    </>\r\n                }{\r\n                 isEditLabelsModalOpen&&\r\n                    <>\r\n                        <DragDropContext  onDragEnd={this.handleDragEnd} >\r\n                            <Droppable droppableId='statusLabelList'>\r\n                            {(provided) => (\r\n                                <div className={`status-label-list-container edit ${this.state.hideColorPicker?'updating-the-label':''}`} key='statusLabelList' {...provided.droppableProps} ref={provided.innerRef}>\r\n                                {\r\n                                    board.statusLabelList.map((statusLabel,index)=>\r\n                                        <Draggable key={statusLabel._id} draggableId={statusLabel._id} index={index}>\r\n                                            {(provided) => (\r\n                                                <StatusLabelPreview \r\n                                                provided={provided}\r\n                                                BsDroplet={BsDroplet}\r\n                                                TiDelete={BsDroplet}\r\n                                                statusLabel={statusLabel}\r\n                                                colorsPicker={colorsPicker}\r\n                                                hideColorPicker={this.hideColorPicker}\r\n                                                idx={index}\r\n                                                onRemoveLabel={this.onRemoveLabel}\r\n                                                updateLabel={this.updateLabel}\r\n                                                />\r\n                                            )}\r\n                                        </Draggable>\r\n                                    )}\r\n                                    {board.statusLabelList.length<12&&<div className={`add-new-label sec-column ${this.state.newLabelColor?'':'default'}`} style={{backgroundColor:`${this.state.newLabelColor?this.state.newLabelColor:'transparent'}`}}>\r\n                                    New Label\r\n                                    </div>}\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n                            </Droppable>\r\n                        </DragDropContext>\r\n                       { !this.state.hideColorPicker&&<div className='status-color-picker'>\r\n                            {colorsPicker.map(color=>\r\n                                <div \r\n                                className=\"color\" \r\n                                style={{backgroundColor:`${color}`}}\r\n                                onMouseEnter={() => this.onChangeNewLabelColor(color)}\r\n                                onMouseLeave={() => this.onRemoveNewLabelColor()}\r\n                                onClick={()=>this.onAddNewLabel(color)}\r\n                                ></div>\r\n                            )}\r\n                        </div>}\r\n                        <div className=\"status-label-btn\" onClick={closeEditLabelsModal}>\r\n                            <span>Apply</span>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export const stickers = [\r\n    {\r\n        name: ':alert1:',\r\n        img:\"fas fa-exclamation-circle\",\r\n        customCategory: 'FA',\r\n        class:'green'\r\n    }, \r\n    {\r\n        name: ':alert2:',\r\n        img:\"fas fa-exclamation-triangle\",\r\n        customCategory: 'FA',\r\n        class:'red'\r\n    }, \r\n    {\r\n        name: ':alert3:',\r\n        img:\"fas fa-exclamation-triangle\",\r\n        customCategory: 'FA',\r\n        class:'yellow'\r\n    },\r\n    {\r\n        name: ':check:',\r\n        img:\"fas fa-check\",\r\n        customCategory: 'FA',\r\n        class:'green'\r\n    }, \r\n    {\r\n        name: ':times:',\r\n        img:\"fas fa-times\",\r\n        customCategory: 'FA',\r\n        class:'red'\r\n    },\r\n    {\r\n        name: ':times:',\r\n        img:\"far fa-smile\",\r\n        customCategory: 'FA',\r\n        class:'gray'\r\n    },\r\n    {\r\n        name: ':clock1:',\r\n        img:\"far fa-clock\",\r\n        customCategory: 'FA',\r\n        class:'green'\r\n    },\r\n    {\r\n        name: ':clock2:',\r\n        img:\"far fa-clock\",\r\n        customCategory: 'FA',\r\n        class:'red'\r\n    },\r\n    {\r\n        name: ':bolt:',\r\n        img:\"fas fa-bolt\",\r\n        customCategory: 'FA',\r\n        class:'blue'\r\n    }, \r\n    {\r\n        name: ':arrow-r:',\r\n        img:\"fas fa-arrow-right\",\r\n        customCategory: 'FA',\r\n        class:'green'\r\n    },\r\n    {\r\n        name: ':arrow-l:',\r\n        img:\"fas fa-arrow-left\",\r\n        customCategory: 'FA',\r\n        class:'red'\r\n    },  \r\n    {\r\n        name: ':rocket:',\r\n        img:\"fas fa-rocket\",\r\n        customCategory: 'FA',\r\n        class:'blue'\r\n    },\r\n    {\r\n        name: ':question:',\r\n        img:\"fas fa-question\",\r\n        customCategory: 'FA',\r\n        class:'green'\r\n    },\r\n    {\r\n        name: ':bug:',\r\n        img:\"fas fa-bug\",\r\n        customCategory: 'FA',\r\n        class:'red'\r\n    },\r\n    {\r\n        name: ':exclamation:',\r\n        img:\"fas fa-exclamation\",\r\n        customCategory: 'FA',\r\n        class:'gray'\r\n    },\r\n    {\r\n        name: ':party_parrot:',\r\n        imageUrl:'https://emojis.slackmojis.com/emojis/images/1471119458/990/party_parrot.gif?1471119458',\r\n        customCategory: 'Gif',\r\n    },\r\n    {\r\n        name: ':pika:',\r\n        imageUrl:\r\n          'https://emojis.slackmojis.com/emojis/images/1579216111/7550/pikachu_wave.gif?1579216111',\r\n        customCategory: 'Gif',\r\n    },\r\n    {\r\n        name: ':troll:',\r\n        imageUrl:\r\n          'https://emojis.slackmojis.com/emojis/images/1463602125/429/troll.png?1463602125',\r\n        customCategory: 'Gif',\r\n    },\r\n    {\r\n        name: ':apple:',\r\n        imageUrl:\r\n          'https://emojis.slackmojis.com/emojis/images/1614621881/15861/apple_tongue.gif?1614621881',\r\n        customCategory: 'Gif',\r\n    },\r\n    {\r\n        name: ':among_us2:',\r\n        imageUrl:\r\n          'https://emojis.slackmojis.com/emojis/images/1605479278/11110/crewmate.gif?1605479278',\r\n        customCategory: 'Gif',\r\n    }, \r\n    {\r\n        name: ':among_us:',\r\n        imageUrl:\r\n          'https://emojis.slackmojis.com/emojis/images/1605722420/11386/among_us_orange_dance.gif?1605722420',\r\n        customCategory: 'Gif',\r\n    },\r\n    // {\r\n    //     name: ':venting:',\r\n    //     imageUrl:\r\n    //       'https://emojis.slackmojis.com/emojis/images/1613270186/12725/venting.gif?1613270186',\r\n    //     customCategory: 'Gif',\r\n    // },\r\n    {\r\n        name: ':space_float:',\r\n        imageUrl:\r\n          'https://emojis.slackmojis.com/emojis/images/1613270271/12726/space_float.gif?1613270271',\r\n        customCategory: 'Gif',\r\n    },\r\n    {\r\n        name: ':rage-poop:',\r\n        imageUrl:\r\n          'https://emojis.slackmojis.com/emojis/images/1526489538/3928/rage-poop.png?1526489538',\r\n        customCategory: 'Gif',\r\n    },\r\n    {\r\n        name: ':alert:',\r\n        imageUrl:\r\n          'https://emojis.slackmojis.com/emojis/images/1497901371/2453/alert.gif?1497901371',\r\n        customCategory: 'Gif',\r\n    },\r\n    // {\r\n    //     name: ':lol:',\r\n    //     imageUrl:\r\n    //       'https://emojis.slackmojis.com/emojis/images/1542340468/4973/lol.gif?1542340468',\r\n    //     customCategory: 'Gif',\r\n    // },\r\n]","import React, { useEffect,useState,useRef } from 'react';\r\nimport { stickers } from '../data/stickers'\r\nimport { FaRegSmile } from 'react-icons/fa'\r\n\r\nexport function TaskText({onEditTask,table,task,setUpdatingText}){\r\n    const [text, setText] = useState('');\r\n    const [isUpdating, setUpdateText] = useState(false);\r\n    const [isShowModal, setShowModal] = useState(false);\r\n    const inputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        if(task.text){\r\n            setText(task.text)\r\n        }\r\n    }, [task])\r\n\r\n    const onUpdating=()=>{\r\n        setUpdateText(true)\r\n        setUpdatingText(true)\r\n        setTimeout(() => {\r\n            inputRef.current.focus()\r\n           }, 0);\r\n    }\r\n\r\n    const replaceWithSticker=(sticker)=>{\r\n        let result = sticker\r\n        stickers.forEach((em) => {\r\n            let emoji=''\r\n            switch (em.customCategory) {\r\n                case 'FA':\r\n                    emoji = `<i class='${em.img} ${em.class}'></i>`\r\n                    break;\r\n                case 'Gif':\r\n                    emoji = `\r\n                    <img src=${em.imageUrl} className='gif-img'></img>\r\n                    ` \r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            let temp = ''\r\n            while (result !== temp) {\r\n              temp = result\r\n              const searchStr = em.name\r\n              result = result.replace(searchStr,emoji)\r\n            }\r\n        })\r\n        return result\r\n    }\r\n\r\n    return (\r\n        <div\r\n         className=\"task-text\" onClick={onUpdating}\r\n         title={text}\r\n         >\r\n            {isUpdating?\r\n                <div className=\"updating-container\">\r\n                    <input \r\n                    type=\"text\" \r\n                    onChange={(e)=>setText(e.target.value)} \r\n                    value={text}\r\n                    onBlur={()=>\r\n                        {\r\n                            if(text===task.text){\r\n                                setUpdateText(false)\r\n                                setUpdatingText(false)\r\n                                return\r\n                            }\r\n                            const updatedTask = {\r\n                                ...task,\r\n                                text: text\r\n                            }\r\n                            const desc = `changed task \"${task.name}\" text to \"${text}\"`\r\n                            onEditTask(table,updatedTask,desc)\r\n                            setUpdateText(false)\r\n                            setShowModal(false)\r\n                            setUpdatingText(false)\r\n                        }\r\n                    }\r\n                    ref={inputRef}\r\n                    onKeyDown={(ev) => {\r\n                        if (ev.key === 'Enter') {\r\n                            ev.target.blur()\r\n                        }\r\n                    }}\r\n                    />\r\n                    <span className={`${isShowModal?'active':''}`}>\r\n                        <FaRegSmile onClick={()=>setShowModal(curr=>!curr)}/>\r\n                        {\r\n                            isShowModal&&<div className='modal-default-style text-modal'>\r\n                                {stickers.map(sticker=>\r\n                                    <span \r\n                                    onClick={()=>setText(curr=>curr+' '+sticker.name)}> \r\n                                    {\r\n                                        sticker.customCategory==='FA'?\r\n                                        <i class={`${sticker.img} ${sticker.class} gif-img`}></i>\r\n                                        :\r\n                                        <img src={`${sticker.imageUrl}`} className='gif-img' alt=''></img>\r\n                                    }\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                        }\r\n                    </span>\r\n                </div>\r\n                    :\r\n                <div className=\"text-content\">\r\n                     <span className=\"dangerouslySetInnerHTML\" dangerouslySetInnerHTML={{__html: replaceWithSticker(text),}}></span>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState } from 'react';\r\nimport { FaCheck} from 'react-icons/fa'\r\n\r\nexport function TaskCheckBox({onEditTask,table,task}){\r\n    const [check, setCheck] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(task.checkBox){\r\n            setCheck(task.checkBox)\r\n        }\r\n    }, [task])\r\n\r\n    const toggleCheck=(val)=>{\r\n        setCheck(val)\r\n        const updatedTask = {\r\n            ...task,\r\n            checkBox: val\r\n        }\r\n        const desc = `${val?\"unchecked\":\"checked\"} task \"${updatedTask.name}\" inside ${table.name}`\r\n        onEditTask(table,updatedTask,desc)\r\n    }\r\n    return (\r\n        <div \r\n        className=\"task-check-box\"  \r\n        onClick={()=>toggleCheck(!check)}>\r\n            {\r\n            task.checkBox?\r\n            <FaCheck className=\"icon green\"/>\r\n            :''\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState,useRef,forwardRef } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nexport function TaskDate({task,taskKey,onEditTask,table}) {\r\n    const [startDate, setStartDate] = useState(task.createdAt?new Date(task.createdAt):new Date());\r\n\r\n    useEffect(() => {\r\n        const updatedTask = {\r\n            ...task,\r\n            createdAt: startDate.getTime()\r\n        }\r\n        const desc = `changed date inside \"${task.name}\" `\r\n        onEditTask(table,updatedTask,desc)\r\n    }, [startDate])\r\n\r\n    function getMonthName(month){\r\n        switch(month) {\r\n            case 1:\r\n              return 'Jan';\r\n            case 2:\r\n              return 'Feb';\r\n            case 3:\r\n              return 'Mar';\r\n            case 4:\r\n              return 'Apr';\r\n            case 5:\r\n              return 'May';\r\n            case 6:\r\n              return 'June';\r\n            case 7:\r\n              return 'July';\r\n            case 8:\r\n              return 'Aug';\r\n            case 9:\r\n              return 'Sept';\r\n            case 10:\r\n              return 'Oct';\r\n            case 11:\r\n              return 'Nov';\r\n            case 12:\r\n              return 'Dec';\r\n            default:\r\n              return 'foo';\r\n        }\r\n    }\r\n\r\n    const getDateValue=(value)=>{\r\n      let dayNum =value.substr(0,3)\r\n      let monthNum = parseInt(value.substr(3))\r\n      if(monthNum<10){\r\n        monthNum = parseInt(value.substr(4))\r\n      }\r\n      if(value.substr(0,1)===\"0\"){\r\n        dayNum = value.substr(1,2)\r\n      }\r\n      const month = getMonthName(monthNum)\r\n      return dayNum+month\r\n    }\r\n\r\n    const ExampleCustomInput = forwardRef(\r\n      ({ value, onClick }, ref) => (\r\n        <button className=\"custom-date-input\" onClick={onClick} ref={ref}>\r\n          {getDateValue(value)}\r\n        </button>\r\n      ),\r\n    );\r\n\r\n    return (\r\n        <DatePicker\r\n        className=\"task-date-picker\"\r\n        dateFormat=\"dd MM\"\r\n        selected={startDate}\r\n        onChange={date => setStartDate(date)}\r\n        customInput={<ExampleCustomInput />}\r\n        />\r\n    )\r\n}","import React, { useEffect,useState,useRef } from 'react';\r\nimport {  IoChatbubbleOutline, } from 'react-icons/io5'\r\nimport { updateTaskConversation } from '../store/actions/workspaceActions'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport function TaskConversation({openConversationModal,task,table}) {\r\n    const [conversations,setConversations] = useState(task.conversations)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        setConversations(task.conversations)\r\n    }, [task])\r\n\r\n    return (\r\n        <>\r\n            <div className='task-conversation-wrapper'>\r\n                <IoChatbubbleOutline className=\"conversation-bubble\" \r\n                onClick={()=>{\r\n                    dispatch(updateTaskConversation(\r\n                        {\r\n                            taskId:task._id,\r\n                            tableId:table._id\r\n                        }\r\n                    ))\r\n                    openConversationModal()\r\n                }}\r\n                 />\r\n                {conversations.length>0&&<div className=\"conversations-count\">\r\n                    {conversations.length}\r\n                 </div>}\r\n                <span className=\"label-text arrow-down\">Start conversation</span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect,useState,useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadUsers } from '../store/actions/userActions'\r\n\r\nexport function OwnerModal({\r\n    task,\r\n    table,\r\n    onEditTask\r\n}){\r\n    const dispatch = useDispatch();\r\n    const users = useSelector(state => state.user.users);\r\n    const [owners, setOwners] = useState(null);\r\n    const [newUsers, setNewUsers] = useState(null);\r\n    const [search, setSearch] = useState('');\r\n    const inputEl = useRef(null)\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUsers())\r\n    }, [dispatch])    \r\n\r\n    function mapOrder (array, order, key) {\r\n        array.sort( function (a, b) {\r\n          var A = a[key], B = b[key];\r\n          if (order.indexOf(A) > order.indexOf(B)) {\r\n            return 1;\r\n          } else {\r\n            return -1;\r\n          }\r\n        });\r\n        return array;\r\n    };\r\n    \r\n    useEffect(() => {\r\n        //sorted by the task.owner order!\r\n        const itemsArray = users.filter(user=>\r\n            task.owner.includes(user._id)\r\n        )\r\n        const itemOrder = [...task.owner]\r\n        const orderedArray = mapOrder(itemsArray, itemOrder, '_id');\r\n\r\n        setOwners(orderedArray)\r\n    }, [task,users])    \r\n    \r\n    useEffect(() => {\r\n            if(owners){\r\n                const IdList = []\r\n                owners.map(owner=>\r\n                    IdList.push(owner._id)\r\n                )\r\n                setNewUsers(\r\n                    users.filter(user=>\r\n                        !IdList.includes(user._id)\r\n                    )\r\n                )\r\n            }\r\n    }, [users,owners])\r\n\r\n    const updateTaskOwner=(userId,userName)=>{\r\n        const updatedTask = {\r\n            ...task,\r\n            owner:[...task.owner,userId]\r\n        }\r\n        const desc = `added new owner \"${userName}\" to task \"${updatedTask.name}\" inside \"${table.name}\"`\r\n        onEditTask(table,updatedTask,desc)\r\n        // setToggleOwnerModal(false)\r\n    }\r\n    const removeOwner=(userId,userName)=>{\r\n        const updatedTask = {\r\n            ...task,\r\n            owner:task.owner.filter(id=>id!==userId),\r\n        }\r\n        const desc = `removed owner \"${userName}\" from task \"${updatedTask.name}\" inside \"${table.name}\"`\r\n        onEditTask(table,updatedTask,desc)\r\n    }\r\nconst getUserName=(name)=>{\r\n    let content  = []\r\n    for (var i = 0; i < name.length; i++) {\r\n        content.push(\r\n            <span className={`${search.toLowerCase().includes(name[i].toLowerCase())?'bold':''}`}>{name[i]}</span>\r\n        )\r\n    }\r\n    return content\r\n}\r\nfunction getLine(){\r\n    let content  = []\r\n    for (let i = 0; i < 12; i++) {\r\n        content.push(\r\n            <span className=\"title-line\">\r\n               -\r\n            </span>\r\n        )\r\n    }\r\n    return content\r\n}\r\n\r\n// useEffect(() => {\r\n//     if(inputEl&&inputEl.current){\r\n//         inputEl.current.focus()\r\n//     }\r\n// }, [])\r\n\r\n    return (\r\n       <>\r\n            <div className=\"owners-container\">\r\n            {owners&&owners.map(owner=>\r\n                 <div className=\"owner-details\">\r\n                    <img className=\"user-img\" src={`${owner.avatar}`} alt=\"\" srcset=\"\"/>\r\n                    <span className=\"user-name\">{owner.username}</span>\r\n                    <span className=\"remove-user\"\r\n                    onClick={()=>{\r\n                        removeOwner(owner._id,owner.username)\r\n                    }}\r\n                    >x</span>\r\n                 </div>\r\n            )}\r\n            </div>\r\n            <input type=\"text\" placeholder='Enter name'\r\n            className=\"owner-modal-input\"\r\n            ref={inputEl}\r\n            onChange={(e)=>setSearch(e.target.value)}\r\n            /> \r\n            <div className=\"title\">\r\n                {getLine()}\r\n               <span className=\"title-contant\"> People </span>\r\n                {getLine()}\r\n            </div>\r\n            <div className=\"owner-list-wrapper\">\r\n            {newUsers&&newUsers.map(user=>\r\n            user.username.toLowerCase().includes(search.toLowerCase())?\r\n                <div className=\"user-details\" onClick={()=>\r\n                {\r\n                    updateTaskOwner(user._id,user.username)\r\n                }}\r\n                >\r\n                    <img className=\"user-img\" src={`${user.avatar}`} alt=\"\" srcset=\"\"/>\r\n                    <span className=\"user-name\">\r\n                       { getUserName(user.username)}\r\n                    </span>\r\n                </div>\r\n                :\r\n                null\r\n            )}\r\n            </div>\r\n          {/* <div>Teames</div> */}\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useEffect,useState,useRef } from 'react';\r\nimport userService from '../services/userService';\r\nimport { RiCloseCircleFill } from 'react-icons/ri'\r\n\r\nexport function DropdownEditLabelPreview({label,onEditBoardLabel,onRemoveLabelFromBoard}) {\r\n\r\n    const [isUpdating , setIsUpdating ] = useState(false);\r\n    const [newLabel , setNewLabel ] = useState(label);\r\n\r\n    useEffect(() => {\r\n        setNewLabel(label)\r\n    }, [label])\r\n\r\n    return(\r\n        <div className=\"edit-label-wrapper\">\r\n        {isUpdating?\r\n            <input \r\n            type=\"text\" \r\n            value={newLabel.name} \r\n            onChange={(e)=>setNewLabel({...label,name:e.target.value})}\r\n            onBlur={()=>{\r\n                setIsUpdating(false)\r\n                //updating the board label array\r\n                onEditBoardLabel(label,newLabel)\r\n            }}\r\n            onKeyDown={(e) => {\r\n                if (e.key === 'Enter') {\r\n                    if(e.target.value.trim().length<1){\r\n                        setNewLabel(label)\r\n                        setIsUpdating(false)\r\n                        return\r\n                    }\r\n                    e.target.blur()\r\n                }\r\n            }}\r\n            />\r\n            :<span className='dropdown-baord-label' onClick={()=>setIsUpdating(true)}>\r\n                {newLabel.name}\r\n            </span>\r\n        }\r\n            <span onClick={()=>onRemoveLabelFromBoard(newLabel)}><RiCloseCircleFill className=\"close-btn\"/></span>\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { DropdownEditLabelPreview } from \"./DropdownEditLabelPreview\";\r\n\r\nexport function DropdownModal({\r\n    task,\r\n    table,\r\n    onEditTask,\r\n    onEditBoard\r\n}){\r\n\r\n    const board = useSelector(state => state.workspace.currBoard);\r\n    const [boardDropdownLabels , setBoardDropdownLabels ] = useState(board.dropdownLabels);\r\n    const [taskDropdownLabels , setTaskDropdownLabels ] = useState([]);\r\n    const [newDropdownLabels , setNewDropdownLabels ] = useState(board.dropdownLabels);\r\n    const [newLabel , setNewLabel ] = useState({name:'',_id:''});\r\n    const [isEditLabels , setToggleEditLabels ] = useState(false);\r\n    const [search, setSearch] = useState('');\r\n\r\n    useEffect(() => {\r\n        setBoardDropdownLabels(board.dropdownLabels)\r\n    }, [board.dropdownLabels])\r\n\r\n    useEffect(() => {\r\n        if(task.dropdown){\r\n            setTaskDropdownLabels(task.dropdown)\r\n        }\r\n    }, [task])\r\n\r\n    useEffect(() => {        \r\n        let taskLabelsIdArray = []\r\n        task.dropdown.map(label=>\r\n            taskLabelsIdArray.push(label._id)\r\n        )\r\n        let newLabels = board.dropdownLabels.filter(label=>!taskLabelsIdArray.includes(label._id))\r\n        if(search===''){setNewDropdownLabels(newLabels)}\r\n        if(search!==''&&newLabels.length>0){\r\n            setNewDropdownLabels(\r\n                newLabels.filter(label=>label.name.toLowerCase().includes(search))\r\n            )\r\n        }\r\n    }, [task.dropdown,board.dropdownLabels,search])\r\n\r\n\r\n    function onAddLabelToTask(label) {\r\n        const updatedTask = {\r\n            ...task,\r\n            dropdown: [...task.dropdown, label]\r\n        }\r\n        const desc = `added new label \"${label.name}\" to task \"${task.name}\" dropdown column`\r\n        onEditTask(table,updatedTask,desc)\r\n    }\r\n    function onRemoveLabelFromTask(label) {\r\n        const updatedTask = {\r\n            ...task,\r\n            dropdown: task.dropdown.filter(_label=>_label._id!==label._id)\r\n        }\r\n        const desc = `removed label \"${label.name}\" form task \"${task.name}\" dropdown column`\r\n        onEditTask(table,updatedTask,desc)\r\n    }\r\n    function onAddLabelToBoard(){\r\n        if(newLabel.name === '')return\r\n        if(newLabel.name&&newLabel.name.trim() === '')return\r\n        const desc = `added new label \"${newLabel.name}\" to dropdown labels`\r\n        const updatedBoard = {\r\n            ...board,\r\n            dropdownLabels:[\r\n                ...board.dropdownLabels,\r\n                newLabel\r\n            ]\r\n        }\r\n        onEditBoard(updatedBoard,desc)\r\n        setNewLabel({name:'',_id:''})\r\n        setSearch('')\r\n    }\r\n    function onEditBoardLabel(oldLabel,label) {\r\n        const desc = `updated label from \"${oldLabel.name}\" to \"${label.name}\" in dropdown labels`\r\n        let updatedBoard = {\r\n            ...board,\r\n            dropdownLabels: board.dropdownLabels.map(_label=>\r\n                _label._id===label._id?label:_label\r\n            )\r\n        }\r\n        onEditBoard(updatedBoard,desc)\r\n        setNewLabel({name:'',_id:''})\r\n        \r\n    }\r\n    function onRemoveLabelFromBoard(label) {\r\n        const desc = `removed label \"${label.name}\" from dropdown labels`\r\n        const updatedBoard = {\r\n            ...board,\r\n            dropdownLabels: board.dropdownLabels.filter(_label=>\r\n                _label._id!==label._id\r\n            )\r\n        }\r\n        onEditBoard(updatedBoard,desc)\r\n        setNewLabel({name:'',_id:''})\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n       <>\r\n       <div className=\"modal-content-wrapper\">\r\n       {\r\n           taskDropdownLabels.length>0&&<div className=\"task-dropdown-labels\">\r\n               {taskDropdownLabels.map(label=>\r\n               <div className=\"dropdown-label\"><span>{label.name}</span> <span onClick={()=>onRemoveLabelFromTask(label)}>x</span></div>\r\n                )}\r\n           </div>\r\n        }\r\n\r\n       <input type=\"text\" placeholder={`${boardDropdownLabels.length>0?'Create or find labels':'Create a label'}`}\r\n       value={newLabel.name}\r\n       onChange={(e)=>{\r\n           setNewLabel({name:e.target.value,_id:Date.now()})\r\n            setSearch(e.target.value.toLowerCase())\r\n        }}\r\n       onKeyDown={(e) => {\r\n            if (e.key === 'Enter') {\r\n                if(e.target.value.trim().length<1)return\r\n                setNewLabel({name:e.target.value,_id:Date.now()})\r\n                onAddLabelToBoard()\r\n            }\r\n        }}\r\n       />\r\n\r\n        {\r\n           newDropdownLabels.length>0&&\r\n           <div className={`baord-dropdown-labels ${!isEditLabels?'aplay':''}`}>\r\n               {newDropdownLabels.map(label=>\r\n                    !isEditLabels?\r\n                    <div className=\"dropdown-baord-label\" onClick={()=>onAddLabelToTask(label)}>{label.name}</div>\r\n                    :\r\n                    <DropdownEditLabelPreview\r\n                        label={label}\r\n                        onEditBoardLabel={onEditBoardLabel}\r\n                        onRemoveLabelFromBoard={onRemoveLabelFromBoard}\r\n                    />\r\n                )}\r\n           </div>\r\n        }\r\n\r\n       <div className={`create-btn ${newLabel.name?'add':''}`} onClick={onAddLabelToBoard}>+ Create new label</div>\r\n       </div>\r\n        <div className=\"edit-btn\" onClick={()=>setToggleEditLabels(prev=>!prev)}>\r\n           {isEditLabels?'Apply':'Edit labels'}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useEffect,useState,useRef } from 'react';\r\n\r\nexport function TaskNumbersColumn({onEditTask,table,task,setUpdatingNumbers}){\r\n    const [numbers, setNumbers] = useState('');\r\n    const [isUpdating, setUpdateNumbers] = useState(false);\r\n    const inputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        if(task.numbers){\r\n            setNumbers(task.numbers)\r\n        }\r\n    }, [task])\r\n\r\n    const onUpdating=()=>{\r\n        setUpdateNumbers(true)\r\n        setUpdatingNumbers(true)\r\n        setTimeout(() => {\r\n            inputRef.current.focus()\r\n           }, 0);\r\n    }\r\n\r\n\r\n    return (\r\n        <div\r\n         className=\"task-text numbers\" onClick={onUpdating}\r\n         title={numbers}\r\n         >\r\n            {isUpdating?\r\n                <div className=\"updating-container\">\r\n                    <input \r\n                    type=\"number\"\r\n                    className='numbers'\r\n                    onChange={(e)=>setNumbers(e.target.value)} \r\n                    value={numbers}\r\n                    onBlur={()=>\r\n                        {\r\n                            if(numbers===task.numbers){\r\n                                setUpdateNumbers(false)\r\n                                setUpdatingNumbers(false)\r\n                                return\r\n                            }\r\n                            const updatedTask = {\r\n                                ...task,\r\n                                numbers: numbers\r\n                            }\r\n                            const desc = `changed task \"${task.name}\" numbers to \"${numbers}\"`\r\n                            onEditTask(table,updatedTask,desc)\r\n                            setUpdateNumbers(false)\r\n                            setUpdatingNumbers(false)\r\n                        }\r\n                    }\r\n                    ref={inputRef}\r\n                    onKeyDown={(ev) => {\r\n                        if (ev.key === 'Enter') {\r\n                            ev.target.blur()\r\n                        }\r\n                    }}\r\n                    />\r\n                    \r\n                </div>\r\n                    :\r\n                <div className=\"text-content\">\r\n                     <span>{numbers}</span>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState,useRef } from 'react';\r\nimport { RiCloseCircleFill } from 'react-icons/ri'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nexport function TaskTimeline({task,taskKey,onEditTask,table}) {\r\n    const [startDate, setStartDate] = useState(task.timeline.from?new Date(task.timeline.from):new Date());\r\n    const [endDate, setEndDate] = useState(task.timeline.to?new Date(task.timeline.to):null);\r\n    const [isShown, setIsShown] = useState(false);\r\n    const [timeline, setTimeline] = useState('');\r\n    const [diffDays, setDiffDays] = useState('');\r\n    const [isMouseEnter, setIsmouseEnter] = useState('');\r\n\r\n    const onChange = dates => {\r\n        const [start, end] = dates;\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n    };\r\n        \r\n    function updateTimeline() {\r\n        if(endDate===null){\r\n            let f = new Intl.DateTimeFormat('en');\r\n            let a = f.formatToParts(startDate);\r\n            const day =  a.filter(item=>item.type===\"day\")[0].value\r\n            const monthNumber =parseInt(a.filter(item=>item.type===\"month\")[0].value)\r\n            const month = getMonthName(monthNumber)\r\n            setTimeline(`${month} ${day}`)\r\n        }else{\r\n            let f = new Intl.DateTimeFormat('en');\r\n            let a = f.formatToParts(startDate);\r\n            let b = f.formatToParts(endDate);\r\n            const day1 = a.filter(item=>item.type===\"day\")[0].value\r\n            const day2 = b.filter(item=>item.type===\"day\")[0].value\r\n            const monthNumber1 = parseInt(a.filter(item=>item.type===\"month\")[0].value)\r\n            const monthNumber2 = parseInt(b.filter(item=>item.type===\"month\")[0].value)\r\n            const month1 = getMonthName(monthNumber1)\r\n            const month2 = getMonthName(monthNumber2)\r\n     \r\n            if(month1===month2){\r\n                setTimeline(`${month1} ${day1} - ${day2}`)\r\n            }else{\r\n                setTimeline(`${month1} ${day1} - ${month2} ${day2}`)\r\n            }\r\n        }\r\n        daysBetween(startDate,endDate)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(endDate){\r\n            setTimeline('')\r\n\r\n            const updatedTask = {\r\n                ...task,\r\n                timeline: {\r\n                    from : startDate.getTime(),\r\n                    to : endDate.getTime()\r\n                }\r\n            }\r\n            const desc = `added new timeline inside \"${task.name}\" `\r\n            onEditTask(table,updatedTask,desc)\r\n            updateTimeline()\r\n        }\r\n    }, [endDate])\r\n    \r\n\r\n    function daysBetween(startDate,endDate) {\r\n        if(endDate){\r\n            const differenceTime = endDate.getTime()-startDate.getTime();\r\n            setDiffDays(Math.round(differenceTime / (1000 * 3600 * 24))+1)\r\n        }else{\r\n            setDiffDays(1)   \r\n        }\r\n      \r\n    }\r\n\r\n    function getMonthName(month){\r\n        switch(month) {\r\n            case 1:\r\n              return 'Jan';\r\n            case 2:\r\n              return 'Feb';\r\n            case 3:\r\n              return 'Mar';\r\n            case 4:\r\n              return 'Apr';\r\n            case 5:\r\n              return 'May';\r\n            case 6:\r\n              return 'June';\r\n            case 7:\r\n              return 'July';\r\n            case 8:\r\n              return 'Aug';\r\n            case 9:\r\n              return 'Sept';\r\n            case 10:\r\n              return 'Oct';\r\n            case 11:\r\n              return 'Nov';\r\n            case 12:\r\n              return 'Dec';\r\n            default:\r\n              return 'foo';\r\n        }\r\n    }\r\n\r\n    function removeTimeline() {\r\n        setStartDate(new Date());\r\n        setEndDate(null);\r\n        const updatedTask = {\r\n            ...task,\r\n            timeline: {\r\n                from : '',\r\n                to : ''\r\n            }\r\n        }\r\n        const desc = `removed timeline from \"${task.name}\" `\r\n        onEditTask(table,updatedTask,desc)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"timeline-task-container\" onClick={()=>setIsShown(p=>!p)}\r\n        onMouseEnter={()=>setIsmouseEnter(true)}\r\n        onMouseLeave={()=>setIsmouseEnter(false)}\r\n        >\r\n            <div className={`timeline-content ${task[taskKey].from||task[taskKey].to?'dates':'empty'} ${isShown?'updating':''}`}>\r\n                {(task[taskKey].from||task[taskKey].to)&&<div>\r\n                    {\r\n                        isMouseEnter?diffDays+'d':timeline\r\n                    }\r\n                </div>}\r\n            </div>\r\n\r\n            {(task[taskKey].from||task[taskKey].to)&&\r\n                <RiCloseCircleFill className='timeline-delete-btn' onClick={removeTimeline}/>\r\n            }\r\n        </div>\r\n\r\n        {isShown&&\r\n            <div className='datePicker-wrapper'>\r\n                <DatePicker\r\n                closeOnScroll={true}\r\n                selected={startDate}\r\n                onChange={onChange}\r\n                startDate={startDate}\r\n                endDate={endDate}\r\n                selectsRange\r\n                inline\r\n                />\r\n            </div>\r\n        }\r\n\r\n        </>\r\n    )\r\n}","import React, { useEffect,useState,useRef } from 'react';\r\nimport { FaRegUserCircle,FaPencilAlt } from 'react-icons/fa'\r\nimport { TiArrowSortedDown, TiVendorAndroid } from 'react-icons/ti'\r\nimport { getColumnWidth } from \"./task-cells-width.js\";\r\nimport { TaskStatus } from \"./TaskStatus\";\r\nimport { TaskText } from \"./TaskText\";\r\nimport { TaskCheckBox } from \"./TaskCheckBox\";\r\nimport { TaskDate } from \"./TaskDate\";\r\nimport { TaskConversation } from \"./TaskConversation\";\r\nimport { OwnerModal } from \"./OwnerModal\";\r\nimport { DropdownModal } from \"./DropdownModal\";\r\nimport { TaskNumbersColumn } from \"./TaskNumbersColumn\";\r\nimport { TaskTimeline } from \"./TaskTimeline\";\r\nimport { BsTrashFill ,BsPlusCircleFill} from 'react-icons/bs'\r\nimport { GoCheck} from 'react-icons/go'\r\nimport { addCheckedTasks,removeCheckedTasks} from '../store/actions/workspaceActions'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport { updateTaskConversation } from '../store/actions/workspaceActions'\r\nimport moment from 'moment'\r\n\r\n\r\nexport function Task({\r\n    task,\r\n    taskKeys, \r\n    table, \r\n    board,\r\n    onEditBoard,\r\n    provided,\r\n    isDragging,\r\n    openConversationModal,\r\n    onEditTable,\r\n    onEditTask,\r\n    unCheckTasks,\r\n}){\r\n    const users = useSelector(state => state.user.users);\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const checkedTasks = useSelector(state => state.workspace.checkedTasks)\r\n    const [currTask, setTask] = useState(task);\r\n    const [isShowOptionsModal, setIsShowOptionsModal] = useState(false);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [isOwnerModalShown, setToggleOwnerModal] = useState(false);\r\n    const [isDropdownModalShown, setToggleDropdownModal] = useState(false);\r\n    const [isMouseInside, setIsMouseInside] = useState(false);\r\n    const [isUpdatingText, setUpdatingText] = useState(false);\r\n    const [isUpdatingNumbers, setUpdatingNumbers] = useState(false);\r\n    const [isChecked, setCheckTask] = useState(false);\r\n    const [getCurrTime, setCurrTime] = useState(null);\r\n    const [newInterval, setNewInterval] = useState(0);\r\n    const [owners, setOwners] = useState(task.owner);\r\n    const editableTaskName = useRef()\r\n    const btnEl = useRef()\r\n    const modalEl = useRef(null)\r\n    const dropdownModalEl = useRef(null)\r\n    const dispatch = useDispatch();\r\n\r\n    const [modalPosition, setModalPosition] =useState({})\r\n    const [modalName, setCurrModalName] =useState('')\r\n    const cellEl = useRef(null)\r\n\r\n    //status\r\n    const [isStatusModalOpen, setIsStatusModalOpen] =useState(false)\r\n    const [isEditLabelsModalOpen, setIsEditLabelsModalOpen] =useState(false)\r\n\r\n    useEffect(() => {\r\n      dispatch(loadUsers())\r\n    }, [dispatch]) \r\n\r\n\r\n    \r\n    function mapOrder (array, order, key) {\r\n        array.sort( function (a, b) {\r\n          var A = a[key], B = b[key];\r\n          if (order.indexOf(A) > order.indexOf(B)) {\r\n            return 1;\r\n          } else {\r\n            return -1;\r\n          }\r\n        });\r\n        return array;\r\n    };\r\n\r\n    useEffect(() => {\r\n        //sorted by the task.owner order!\r\n        const itemsArray = users.filter(user=>\r\n            task.owner.includes(user._id)\r\n        )\r\n        const itemOrder = [...task.owner]\r\n        const orderedArray = mapOrder(itemsArray, itemOrder, '_id');\r\n\r\n        setOwners(orderedArray)\r\n    }, [task,users,loggedInUser])\r\n\r\n    useEffect(() => {\r\n        const currCheckedTask = {\r\n            _id:task._id,\r\n            table:table\r\n        }\r\n        if(isChecked){\r\n            dispatch(addCheckedTasks(currCheckedTask))\r\n        }else{\r\n            dispatch(removeCheckedTasks(task._id))\r\n        }\r\n    }, [isChecked,dispatch,task._id,table])\r\n\r\n    useEffect(() => {\r\n        if(unCheckTasks){\r\n            setCheckTask(false)\r\n        }\r\n    }, [unCheckTasks])\r\n   \r\n\r\n    useEffect(() => {\r\n       setTask(task)\r\n    }, [task]) \r\n    \r\n    useEffect(() => {\r\n       if(isShowOptionsModal){\r\n       setTimeout(() => {\r\n        btnEl.current.focus()\r\n       }, 0);\r\n       }\r\n    }, [isShowOptionsModal])\r\n    \r\n     \r\n    useEffect(() => {\r\n       if(isUpdating){\r\n        setTask(task)\r\n        editableTaskName.current.focus()\r\n       }\r\n     }, [isUpdating,task])   \r\n\r\n    const focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    const handleChangeName = (ev) => {\r\n        setTask({\r\n            ...currTask,\r\n            name: ev.target.value \r\n        })\r\n    }\r\n    const onOpenModal =(name,e)=>{\r\n        getModalPosition(e)\r\n        setCurrModalName(name)\r\n        if(name==='owner'){\r\n            // setToggleOwnerModal(curr=>!curr)\r\n            setToggleOwnerModal(true)\r\n            // if(modalEl.current){\r\n            //     modalEl.current.focus()\r\n            // }\r\n        }\r\n        if(name==='dropdown'){\r\n            setToggleDropdownModal(true)\r\n            // setToggleDropdownModal(curr=>!curr)\r\n            // if(dropdownModalEl.current){\r\n            //     dropdownModalEl.current.focus()\r\n            // }\r\n        }\r\n        if(name==='status'){\r\n            setIsStatusModalOpen(true)\r\n        }\r\n    }\r\n    const closeModal =()=>{\r\n        setToggleOwnerModal(false)\r\n        setToggleDropdownModal(false)\r\n        closeStatusModal()\r\n    }\r\n    const getModalStyle=()=>{\r\n        switch (true) {\r\n            case modalName==='owner':\r\n                return 'owner-modal';\r\n            case modalName==='dropdown':\r\n                return 'dropdown-modal'; \r\n            // case modalName==='status':\r\n            //     return 'status-modal-wrapper';\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n        //   console.log('This will run every second!');\r\n          tick()\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n      }, [newInterval]);\r\n\r\n    useEffect(() => {\r\n        tick()\r\n    }, [])\r\n\r\n      useEffect(() => {\r\n        tick()\r\n        setNewInterval(prev=>prev+1)\r\n      }, [task]);\r\n\r\n    const tick =()=>{\r\n        let date = moment(task.lastUpdated.date).fromNow()\r\n        if(date==='a few seconds ago'){\r\n            date = 'Just now'\r\n        }\r\n        setCurrTime(date)\r\n    }\r\n\r\n    const lastUpdatedUser=(id)=>{\r\n        return users.filter(user=>user._id===id)[0]\r\n    }\r\n\r\n\r\n    const getModalPosition = (ev) => {\r\n        const translateY = ev.clientY > window.innerHeight / 2 ? '-100%' : '0';\r\n        const translateX = ev.clientX > window.innerWidth / 2 ? '-100%' : '0';\r\n\r\n        const divOffsetS = {\r\n            x:ev.nativeEvent.offsetX,\r\n            y:ev.nativeEvent.offsetY,\r\n            width:ev.nativeEvent.offsetWidth\r\n        }\r\n\r\n        const divSizes={\r\n            width:cellEl.current?cellEl.current.offsetWidth:0,\r\n            height:cellEl.current?cellEl.current.offsetHeight:0\r\n        }\r\n\r\n        const position = { top: ev.clientY, left: ev.clientX, transform: `translate(${translateX}, ${translateY})` };\r\n        setModalPosition(position)\r\n        console.log('ModalPosition123:',position)\r\n        console.log('ev.clientY:',ev.clientY)\r\n        console.log('window.innerHeight:',window.innerHeight)\r\n        console.log('ev.clientX:',ev.clientX)\r\n        console.log('window.innerWidth:',window.innerWidth)\r\n        console.log('divSizes:',divSizes)\r\n        console.log('divOffsetS:',divOffsetS)\r\n    }\r\n    \r\n\r\n    const getTaskValue= (taskKey)=>{\r\n        let content = [];\r\n        switch(taskKey) {\r\n            case 'name':\r\n                content.push(\r\n                <React.Fragment>\r\n                    <div className=\"task-name-wrapper\">\r\n                        <span className={`task-name-span ${ isUpdating?'task-name-span-updating':''}`}>\r\n                        { isUpdating?\r\n                            <input \r\n                            className=\"task-name\"\r\n                            onFocus={focusText}\r\n                            type=\"text\" \r\n                            name=\"name\" \r\n                            ref={editableTaskName} \r\n                            value={currTask[taskKey]} \r\n                            onChange={handleChangeName}\r\n                            onBlur={() => {\r\n                                if (currTask.name === task.name) return\r\n                                const desc = `changed the task name from ${task.name} to ${currTask.name}`\r\n                                const updatedTask = {\r\n                                    ...task,\r\n                                    name: currTask.name\r\n                                }\r\n                                onEditTask(table,updatedTask,desc)\r\n                                setIsUpdating(false)\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                }\r\n                            }}\r\n                            />:\r\n                            <span \r\n                            onClick={()=>{\r\n                                dispatch(updateTaskConversation(\r\n                                    {\r\n                                        taskId:task._id,\r\n                                        tableId:table._id\r\n                                    }\r\n                                ))\r\n                                openConversationModal()\r\n                            }}\r\n                            >{task[taskKey]}</span>\r\n                        }\r\n                        </span>\r\n                        <FaPencilAlt className=\"FaPencilAlt\" onClick={() => {\r\n                            setIsUpdating(true)\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <TaskConversation \r\n                    table={table}\r\n                    task={task}\r\n                    openConversationModal={openConversationModal}\r\n\r\n                    />\r\n                </React.Fragment>\r\n                );\r\n                break; \r\n            case 'owner':\r\n                content.push(\r\n                    <div className={`add-cell-content-btn-wrapper ${task[taskKey].length>0?'add-more':'add-first'}`}\r\n                    >\r\n                        <BsPlusCircleFill className={`add-owner ${isOwnerModalShown?'active':''}`}\r\n                        //    onClick={()=>onOpenModal()}\r\n                        /> \r\n                       {/* { isOwnerModalShown&&\r\n                        <div className='modal-default-style owner-modal'\r\n                        ref={modalEl}\r\n                        tabIndex=\"0\"\r\n                        // onClick={()=> modalEl.current.focus()}\r\n                        onBlur={()=>setToggleOwnerModal(false)}\r\n                        >\r\n                            <OwnerModal\r\n                            task={task} \r\n                            onEditTask={onEditTask} \r\n                            table={table}\r\n                            setToggleOwnerModal={setToggleOwnerModal}\r\n                            />\r\n                        </div>} */}\r\n                    </div>\r\n                )\r\n                if(task[taskKey].length>0&&owners.length>0){\r\n                    // const owner = task[taskKey][0]\r\n                    content.push(\r\n                        <div className=\"owner-container\">\r\n                            <div className=\"owner-avatar-wrapper\">\r\n                                <img src={`${owners[0].avatar}`} alt=\"\"/>\r\n                            </div>\r\n                            {\r\n                                task[taskKey].length>1?\r\n                                <div className=\"owners-count\">\r\n                                    +{task[taskKey].length-1}\r\n                                </div>:\r\n                                null\r\n                            }\r\n                         </div>\r\n                    )\r\n                }else{\r\n                    content.push(\r\n                        <FaRegUserCircle style={{ width: '30px', height: '30px', color:\"rgb(180, 182, 188)\" }}/>\r\n                    )\r\n                }\r\n                break;\r\n            case 'createdAt':\r\n                if(!task[taskKey]){\r\n                    content.push(\r\n                        <TaskDate task={task} taskKey={taskKey} onEditTask={onEditTask} table={table}/>\r\n                    )\r\n                }else{   \r\n                    content.push(\r\n                        <React.Fragment>\r\n                            <TaskDate task={task} taskKey={taskKey} onEditTask={onEditTask} table={table}/>\r\n                        </React.Fragment>\r\n                    );\r\n                }\r\n                break;\r\n            case 'text':\r\n                content.push(\r\n                    <TaskText onEditTask={onEditTask} task={task} table={table} setUpdatingText={setUpdatingText}/>\r\n                ) \r\n                break; \r\n            case 'numbers':\r\n                content.push(\r\n                    <TaskNumbersColumn onEditTask={onEditTask} task={task} table={table} setUpdatingNumbers={setUpdatingNumbers}/>\r\n                ) \r\n                break;\r\n            case 'checkBox':\r\n                content.push(\r\n                    <TaskCheckBox onEditTask={onEditTask} task={task} table={table} />\r\n                ) \r\n                break;\r\n            case 'lastUpdated':\r\n                if(task[taskKey]&&task[taskKey].date){\r\n                    content.push(\r\n                        <div className=\"last-updated-task-container\">\r\n                            <div className=\"avatar-wrapper\">\r\n                                {lastUpdatedUser(task[taskKey].byUser)&&\r\n                                <img \r\n                                src={`${lastUpdatedUser(task[taskKey].byUser).avatar}`} alt=\"\"/>}\r\n                            </div>\r\n                            <span>{getCurrTime}</span>\r\n                        </div>\r\n                        \r\n                        \r\n                    ) \r\n                }\r\n                break;\r\n            case 'timeline':\r\n                    content.push(\r\n                        <TaskTimeline task={task} taskKey={taskKey} onEditTask={onEditTask} table={table}/>\r\n                    ) \r\n                break;\r\n            case 'dropdown':\r\n                    content.push(\r\n                        <div className={`add-cell-content-btn-wrapper dropdown add-first`}\r\n                        >\r\n                            <BsPlusCircleFill className={`add-owner ${isDropdownModalShown?'active':''}`}\r\n                            /> \r\n                           {/* { isDropdownModalShown&&\r\n                            <div className='modal-default-style dropdown-modal'\r\n                            ref={dropdownModalEl}\r\n                            onMouseEnter = {()=>setIsMouseInside(true)}\r\n                            onMouseLeave = {()=>setIsMouseInside(false)}\r\n                            onBlur={()=>{\r\n                                //need to remove the modal outside task..\r\n                                if(isMouseInside)return\r\n                                setTimeout(() => {\r\n                                    setToggleDropdownModal(false)\r\n                                }, 0);\r\n                            }}\r\n                            >\r\n                                \r\n                                <DropdownModal\r\n                                task={task} \r\n                                onEditTask={onEditTask} \r\n                                table={table}\r\n                                setToggleDropdownModal={setToggleDropdownModal}\r\n                                onEditBoard={onEditBoard}\r\n                                />\r\n                                \r\n                            </div>} */}\r\n                        </div>\r\n                    )\r\n                    if(task[taskKey].length>0){\r\n                        // const owner = task[taskKey][0]\r\n                        content.push(\r\n                            <div className=\"dropdown-container\">\r\n                                <div className=\"labels-container\">\r\n                                    {\r\n                                        task[taskKey].length>1?\r\n                                        \r\n                                            task[taskKey].slice(0,2).map(label=>\r\n                                                <div className=\"label-wrapper\"\r\n                                                title={label.name}\r\n                                                >\r\n                                                {\r\n                                                    label.name.length>8?\r\n                                                    <div className=\"ellipsis-wrapper\">{label.name}</div>\r\n                                                    : \r\n                                                    <>{label.name}</>\r\n                                                }\r\n                                                </div>\r\n                                            )\r\n                                        :\r\n                                        task[taskKey][0]?<div className={`label-wrapper `}>\r\n                                        {\r\n                                            task[taskKey][0].name.length>8?\r\n                                            <div className='ellipsis-wrapper'\r\n                                            title={task[taskKey][0].name}\r\n                                            >{task[taskKey][0].name}</div>\r\n                                            : \r\n                                            <>{task[taskKey][0].name}</>\r\n                                        }\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                                {\r\n                                    task[taskKey].length>2?\r\n                                    <div className=\"dropdown-label-count\">\r\n                                        +{task[taskKey].length-2}\r\n                                    </div>:\r\n                                    null\r\n                                }\r\n                             </div>\r\n                        )\r\n                    }\r\n                break;\r\n            default:\r\n                content.push(task[taskKey]);\r\n                break;\r\n        }                                \r\n        return content;\r\n    }\r\n\r\n    function getMonthName(month){\r\n        switch(month) {\r\n            case 1:\r\n              return 'Jan';\r\n            case 2:\r\n              return 'Feb';\r\n            case 3:\r\n              return 'Mar';\r\n            case 4:\r\n              return 'Apr';\r\n            case 5:\r\n              return 'May';\r\n            case 6:\r\n              return 'June';\r\n            case 7:\r\n              return 'July';\r\n            case 8:\r\n              return 'Aug';\r\n            case 9:\r\n              return 'Sept';\r\n            case 10:\r\n              return 'Oct';\r\n            case 11:\r\n              return 'Nov';\r\n            case 12:\r\n              return 'Dec';\r\n            default:\r\n              return 'foo';\r\n        }\r\n    }\r\n\r\n    const getColumnStyle=(val)=>{\r\n        switch (val) {\r\n            case 'text':\r\n                return 'text-style'\r\n            case 'numbers':\r\n                return 'numbers-style'\r\n            case 'checkBox':\r\n                return 'checkBox-style'\r\n            case 'lastUpdated':\r\n                return 'lastUpdated-style'\r\n            case 'dropdown':\r\n                return `dropdown-style ${task.dropdown.length>0?'not-empty':''}`\r\n            case 'timeline':\r\n                return `timeline-style ${task.timeline.from?'not-empty':''}`\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n\r\n    const removeTask=(currTask)=>{\r\n        const newTable = {\r\n            ...table,\r\n            tasks:table.tasks.filter(task=>task._id!==currTask._id)\r\n        }\r\n        const desc = `removed the task \"${currTask.name}\" from \"${table.name}\"`\r\n        onEditTable(newTable,desc)\r\n        setIsShowOptionsModal(false)\r\n    }\r\n\r\n\r\n    const closeStatusModal=()=>{\r\n        if(isEditLabelsModalOpen)return\r\n        setIsStatusModalOpen(false)\r\n        closeEditLabelsModal()\r\n    }\r\n\r\n    const toggleStatusModal=()=>{\r\n        setIsStatusModalOpen(prev=>!prev)\r\n    }\r\n\r\n    const openEditLabelsModal=()=>{\r\n        setIsEditLabelsModalOpen(true)\r\n    }\r\n    const closeEditLabelsModal=()=>{\r\n        setIsEditLabelsModalOpen(false)\r\n    }\r\n\r\n        if (!task) return <div>Loading....</div>\r\n        return (\r\n            <>\r\n <div className={`table-row-wrapper ${isDragging?'task-dragging':''}`} ref={provided.innerRef} {...provided.draggableProps}  {...provided.dragHandleProps}>\r\n            <div\r\n                className=\"options-wrapper\"  \r\n            >\r\n                <div className={`options-btn ${isShowOptionsModal?'options-btn-visible':''}`} onClick={()=>setIsShowOptionsModal(true)} \r\n                tabIndex=\"0\"\r\n                ref={btnEl} \r\n                 onBlur={()=>setIsShowOptionsModal(false)\r\n                }\r\n                >\r\n                    <div className=\"TiArrowSortedDown-wrapper   TiArrowSortedDown-task-wrapper\">\r\n                        <TiArrowSortedDown/>\r\n                    </div>\r\n                    { \r\n                isShowOptionsModal&&\r\n                    <div className=\"options-modal task-options-modal\" >\r\n                        <div className='modal-btn item-actions-btn' >\r\n                            <FaPencilAlt className=\"icon\"/>\r\n                            <span onClick={() => {\r\n                                setIsUpdating(true)\r\n                                setIsShowOptionsModal(false)\r\n                            }}>Rename Item</span>\r\n                        </div>\r\n                        <div className='delete-btn-wrapper'>\r\n                            <div className='modal-btn item-actions-btn' onClick={()=>removeTask(task)}>\r\n                                <BsTrashFill className=\"icon\"/>\r\n                                <span>Delete</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                </div>\r\n            </div>\r\n            <div className=\"table-row task-row\" >\r\n                {taskKeys.map((taskKey)=>\r\n                    taskKey===\"status\"?\r\n                    <div \r\n                    className='table-cell task-cell'\r\n                    tabIndex=\"0\" \r\n                    onBlur={closeStatusModal}\r\n                    // ref = {cellEl}\r\n                    // onClick={(e)=>\r\n                    //     onOpenModal(taskKey,e)\r\n                    // }\r\n                    >\r\n                        <div className='task-cell-status' style={{backgroundColor:`${task.status.color}`}} onClick={toggleStatusModal}>\r\n                            <div className=\"cell-content-wrapper\">\r\n                            {task[taskKey].name}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"status-container\">\r\n                        {isStatusModalOpen&&<TaskStatus \r\n                        taskKey={taskKey} \r\n                        task={task} \r\n                        table={table} \r\n                        FaPencilAlt={FaPencilAlt} \r\n                        onEditTask={onEditTask} \r\n                        board={board} \r\n                        onEditBoard={onEditBoard}\r\n                        isStatusModalOpen={isStatusModalOpen}\r\n                        isEditLabelsModalOpen={isEditLabelsModalOpen}\r\n                        openEditLabelsModal={openEditLabelsModal}\r\n                        closeEditLabelsModal={closeEditLabelsModal}\r\n                        setIsStatusModalOpen={setIsStatusModalOpen}\r\n                        />}\r\n                        </div>\r\n                    </div>\r\n\r\n                    :\r\n                    <div className={`table-cell task-cell ${getColumnStyle(taskKey)} ${getColumnWidth(taskKey)} ${isUpdatingText?'updating-text':''} ${isUpdatingNumbers?'updating-numbers':''}\r\n                    `}\r\n                    ref = {cellEl}\r\n                    onClick={(e)=>\r\n                        {if(taskKey==='owner'||taskKey==='dropdown'){\r\n                            console.log('open-owner-modal');\r\n                            onOpenModal(taskKey,e)\r\n                        }\r\n                        }}\r\n                    >\r\n                        <div className={`decoration-line task-line ${checkedTasks.length>0?'open':''}`} style={{backgroundColor:`${table.color}`}}>\r\n                            <div className={`task-line-square ${isChecked?'checked':''}`} onClick={()=>setCheckTask(curr=>!curr)}>\r\n                               { isChecked&&<GoCheck style={{color:`${table.color}`}}/>}\r\n                            </div>\r\n                        </div>\r\n                        <div className={`cell-content-wrapper ${taskKey==='name'?'name-wrapper-cell':''}\r\n                        ${taskKey==='dropdown'?'dropdown-wrapper-cell':''}\r\n                        `}\r\n                        >\r\n                            {getTaskValue(taskKey)}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div className='table-cell task-cell'\r\n                ref = {cellEl}\r\n                ></div>\r\n            </div>\r\n        </div>\r\n       \r\n\r\n        { (isOwnerModalShown||isDropdownModalShown)&&\r\n        <div className=\"modal-screen-wrapper\" onClick={closeModal}>\r\n            {<div \r\n            className={`modal-default-style ${getModalStyle()}`}\r\n            style={{...modalPosition}}\r\n            onClick={(ev) => ev.stopPropagation()}>\r\n                {isOwnerModalShown&&<OwnerModal\r\n                task={task} \r\n                onEditTask={onEditTask} \r\n                table={table}\r\n                setToggleOwnerModal={setToggleOwnerModal}/>}\r\n                {isDropdownModalShown&&<DropdownModal\r\n                task={task} \r\n                onEditTask={onEditTask} \r\n                table={table}\r\n                setToggleDropdownModal={setToggleDropdownModal}\r\n                onEditBoard={onEditBoard}/>}\r\n                {/* {isStatusModalOpen&&<TaskStatus \r\n                task={task} \r\n                table={table} \r\n                FaPencilAlt={FaPencilAlt} \r\n                onEditTask={onEditTask} \r\n                board={board} \r\n                onEditBoard={onEditBoard}\r\n                isStatusModalOpen={isStatusModalOpen}\r\n                isEditLabelsModalOpen={isEditLabelsModalOpen}\r\n                openEditLabelsModal={openEditLabelsModal}\r\n                closeEditLabelsModal={closeEditLabelsModal}\r\n                setIsStatusModalOpen={setIsStatusModalOpen}\r\n                />} */}\r\n            </div>}\r\n            {/* {isStatusModalOpen&&\r\n                <div className=\"status-container modal-default-style\" style={{...modalPosition}}>\r\n                    <TaskStatus \r\n                    task={task} \r\n                    table={table} \r\n                    FaPencilAlt={FaPencilAlt} \r\n                    onEditTask={onEditTask} \r\n                    board={board} \r\n                    onEditBoard={onEditBoard}\r\n                    isStatusModalOpen={isStatusModalOpen}\r\n                    isEditLabelsModalOpen={isEditLabelsModalOpen}\r\n                    openEditLabelsModal={openEditLabelsModal}\r\n                    closeEditLabelsModal={closeEditLabelsModal}\r\n                    setIsStatusModalOpen={setIsStatusModalOpen}\r\n                    />\r\n                </div>\r\n            }    */}\r\n        </div>\r\n        }\r\n       </>\r\n    )\r\n\r\n}","import React, { useEffect,useState,useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TiArrowSortedDown } from 'react-icons/ti'\r\nimport { VscTrash } from 'react-icons/vsc'\r\nimport { BiHide } from 'react-icons/bi'\r\n\r\nexport function TitleOptionsBtn({toggleTitleOptionsModal,isShownTitleOptionsModal,closeTitleOptionsModal,tableColumn,onEditBoard,table,onEditTable,onEditTask }) {\r\n\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const board = useSelector(state => state.workspace.currBoard);\r\n    const divEl = useRef()\r\n\r\n    const getDefaultValue =(taskKey)=>{\r\n        switch (taskKey) {\r\n            case 'owner':\r\n            case 'dropdown':\r\n            case 'tags':\r\n                return [] \r\n            case 'status':\r\n                return {\r\n                    name : \"\",\r\n                    color : \"rgb(180, 182, 188)\"\r\n                }\r\n            case 'timeline':\r\n                return {\r\n                    from : \"\",\r\n                    to : \"\"\r\n                } \r\n            case 'lastUpdated':\r\n                return  {\r\n                    byUser : '',\r\n                    date :''\r\n                }\r\n            default:\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isShownTitleOptionsModal&&divEl&&divEl.current){\r\n            divEl.current.focus()\r\n        }\r\n    }, [isShownTitleOptionsModal])\r\n\r\n    const deleteColumn=()=>{\r\n        let newTablesArray = []  //array for the updated tables\r\n        const desc = `removed '${tableColumn.taskKey}' column`\r\n\r\n        board.tables.forEach(table => {\r\n            const newTable = {\r\n                ...table,\r\n                tasks:table.tasks.flatMap((task)=>\r\n                    [{...task,[`${tableColumn.taskKey}`]:getDefaultValue(tableColumn.taskKey)}]\r\n                )\r\n            }\r\n            newTablesArray.push(newTable)\r\n        })\r\n         \r\n\r\n        const updatedBoard = {\r\n            ...board,\r\n            tables:board.tables.map(tableObj => newTablesArray.find(newTableObj => newTableObj._id === tableObj._id) || tableObj),\r\n            tableColumns: board.tableColumns.filter(column=>column._id!==tableColumn._id),\r\n            activities:[\r\n                {\r\n                    desc: desc,\r\n                    userId: loggedInUser._id,\r\n                    createdAt: Date.now()\r\n                },\r\n                ...board.activities]\r\n        }\r\n       \r\n        onEditBoard(updatedBoard)\r\n    }\r\n\r\n   const hideColumn=()=>{\r\n    const desc = `hide '${tableColumn.taskKey}' column`\r\n    const updatedBoard = {\r\n        ...board,\r\n        tableColumns: board.tableColumns.filter(column=>column._id!==tableColumn._id),\r\n        activities:[\r\n            {\r\n                desc: desc,\r\n                userId: loggedInUser._id,\r\n                createdAt: Date.now()\r\n            },\r\n            ...board.activities]\r\n    }\r\n    onEditBoard(updatedBoard)\r\n}\r\n\r\n    return(\r\n        <div className='title-cell-options-wrapper'>\r\n            <div \r\n            className={`title-cell-options-btn ${isShownTitleOptionsModal?'updating':''}`}\r\n            onClick={toggleTitleOptionsModal}\r\n            >\r\n                <TiArrowSortedDown/>\r\n            </div>\r\n            {isShownTitleOptionsModal&&\r\n                <div \r\n                className='modal-default-style title-cell-options-modal' \r\n                ref={divEl}\r\n                tabIndex='0'\r\n                onBlur={()=>{\r\n                    closeTitleOptionsModal()\r\n                }}\r\n                >\r\n                    <div className=\"delete-btn modal-btn\" onClick={hideColumn}>\r\n                        <BiHide className='icon'/><span>Hide column</span>\r\n                    </div>\r\n                    <div className=\"delete-btn modal-btn\" onClick={deleteColumn}>\r\n                        <VscTrash className='icon'/><span>Delete column</span>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n    \r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { BiGridVertical } from 'react-icons/bi'\r\nimport { CgExpand } from 'react-icons/cg'\r\nimport { AiOutlineShrink } from 'react-icons/ai'\r\nimport { getColumnWidth } from \"./task-cells-width.js\";\r\nimport { TitleOptionsBtn } from './TitleOptionsBtn'\r\n\r\nclass _TableColumnPreview extends Component {\r\n    state={\r\n        table:{},\r\n        board:{},\r\n        currTableColumn:{},\r\n        isDivOnFocus:false,\r\n        isShownTitleOptionsModal:false\r\n    }\r\n    componentDidMount(){\r\n        this.setState({table:this.props.table})\r\n        this.setState({board:this.props.board})\r\n        this.setState({currTableColumn:this.props.tableColumn})\r\n        this.editableGroupName = React.createRef();\r\n        this.editableGroupTitle = React.createRef();\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.currTableColumn.title !== this.state.currTableColumn.title) {\r\n            this.setState({board:this.props.board})\r\n        }\r\n        if (prevProps.tableColumn.title !== this.props.tableColumn.title) {\r\n            this.setState({board:this.props.board})\r\n        }\r\n        if(prevProps.board !== this.props.board){\r\n            this.setState({          \r\n                board: this.props.board\r\n            });\r\n            this.setState({currTableColumn:this.props.tableColumn})\r\n        }\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n \r\n    handleChangeGroupName = (ev) => {\r\n        this.setState({ table: { ...this.state.table, name: ev.target.value } })\r\n    }\r\n    handleChangeGroupTitle=(ev)=>{\r\n        this.setState({ currTableColumn : {...this.props.tableColumn, title:ev.target.value} },()=>{\r\n            this.setState({ board: { ...this.props.board, tableColumns:\r\n                this.props.board.tableColumns.map(tableColumn=>\r\n                    tableColumn._id===this.state.currTableColumn._id?\r\n                    this.state.currTableColumn:tableColumn\r\n                )\r\n            } })\r\n        })\r\n    }\r\n    toggleFocusOnDiv=(bool)=>{\r\n        this.setState({isDivOnFocus:bool})\r\n    }\r\n    changeToContentEditable=(value)=>{\r\n        const {dragHandle} = this.props\r\n            let content = [];\r\n            if(value.taskKey==='name'){\r\n                content.push(\r\n                    <div \r\n                    className={`${this.props.isOpenTableColorModal?'':'table-name-wrapper'}`}\r\n                    tabIndex='0' \r\n                    onClick={()=> this.toggleFocusOnDiv(true)} \r\n                    onBlur={()=>\r\n                        {\r\n                        this.toggleFocusOnDiv(false)\r\n                        this.props.closeTableColorModal()\r\n                        }   \r\n                    }  \r\n                    >\r\n\r\n                        <div className=\"table-actions\">\r\n                            {!this.props.isExpand?<CgExpand className=\"expand-btn\" onClick={()=>this.props.toggleExpandeTable(true)}/>:\r\n                            <AiOutlineShrink className=\"shrink-btn\" onClick={()=>this.props.toggleExpandeTable(false)}/> }\r\n                            <div  className=\"drag-btn\"  {...dragHandle.dragHandleProps}>\r\n                            <BiGridVertical/>\r\n                            </div>\r\n                        </div>\r\n                        <ContentEditable\r\n                        onFocus={this.focusText}\r\n                        className={`content-editable ${this.props.isOpenTableColorModal?'focus':''}`}\r\n                        innerRef={this.editableGroupName}\r\n                        html={this.state.table.name}\r\n                        disabled={false}  \r\n                        onChange={this.handleChangeGroupName}\r\n                        onBlur={() => {\r\n                            if (this.props.table.name === this.state.table.name) return\r\n                            const desc = `changed group name from \"${this.props.table.name}\" to \"${this.state.table.name}\"`\r\n                            const updatedTable = {\r\n                                ...this.props.table,\r\n                                name: this.state.table.name\r\n                            }\r\n                            this.props.onEditTable(updatedTable,desc)\r\n                        }}\r\n                        onKeyDown={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                ev.target.blur()\r\n                            }\r\n                        }}\r\n                        />\r\n                    </div>\r\n                )\r\n            }else{\r\n                content.push(\r\n                    <ContentEditable\r\n                        onFocus={this.focusText}\r\n                        className='content-editable'\r\n                        innerRef={this.editableGroupTitle}\r\n                        html={this.state.currTableColumn.title}\r\n                        disabled={false}  \r\n                        onChange={this.handleChangeGroupTitle}\r\n                        onBlur={() => {\r\n                             if (this.props.tableColumn.title === this.state.currTableColumn.title) return\r\n                            const desc = `changed the table column name from ${this.props.tableColumn.title} to ${this.state.currTableColumn.title}`\r\n                            const updatedBoard = {\r\n                                ...this.props.board,\r\n                                tableColumns: [...this.state.board.tableColumns],\r\n                                activities:[\r\n                                    {\r\n                                        desc: desc,\r\n                                        userId: this.props.loggedInUser._id,\r\n                                        createdAt: Date.now()\r\n                                    },\r\n                                    ...this.props.board.activities]\r\n                            }\r\n                            this.props.onEditBoard(updatedBoard)\r\n                        }}\r\n                        onKeyDown={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                ev.target.blur()\r\n                            }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n            \r\n            return content;\r\n    }\r\n\r\n    \r\n    getTitleColumnStyle = (columnName) =>\r\n    {\r\n        switch (columnName) {\r\n            case 'checkBox':\r\n                return 'checkBox-title'\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    toggleTitleOptionsModal=()=>{\r\n        this.setState({isShownTitleOptionsModal:!this.state.isShownTitleOptionsModal})\r\n    }    \r\n    closeTitleOptionsModal=()=>{\r\n        this.setState({isShownTitleOptionsModal:false})\r\n    }\r\n\r\n    render() {\r\n        const { board, tableColumn, table, IoMdNotifications } = this.props\r\n        if (!tableColumn) return <div>Loading....</div>\r\n        return (\r\n            <div key={tableColumn._id} className={`table-cell title-cell ${this.getTitleColumnStyle(tableColumn.taskKey)} ${getColumnWidth(tableColumn.taskKey)} ${this.state.isShownTitleOptionsModal?'updating':''}`} style={{color:`${table.color}` }}>\r\n                {tableColumn.taskKey===\"createdAt\"?\r\n                    <>\r\n                        <div className=\"date-title-wrapper\">\r\n                            <IoMdNotifications style={{ width: '18px', height: '18px' }}/>\r\n                            <span>{this.changeToContentEditable(tableColumn)}</span>\r\n                        </div>\r\n                        <TitleOptionsBtn \r\n                        toggleTitleOptionsModal={this.toggleTitleOptionsModal}\r\n                        isShownTitleOptionsModal={this.state.isShownTitleOptionsModal}\r\n                        closeTitleOptionsModal={this.closeTitleOptionsModal}\r\n                        tableColumn={this.props.tableColumn}\r\n                        table={this.props.table}\r\n                        onEditBoard={this.props.onEditBoard}\r\n                        onEditTable={this.props.onEditTable}\r\n                        onEditTask={this.props.onEditTask} \r\n                        />\r\n                    </>\r\n                    :\r\n                    <>\r\n                    {this.changeToContentEditable(tableColumn)}\r\n                    <TitleOptionsBtn \r\n                    toggleTitleOptionsModal={this.toggleTitleOptionsModal}\r\n                    isShownTitleOptionsModal={this.state.isShownTitleOptionsModal}\r\n                    closeTitleOptionsModal={this.closeTitleOptionsModal}\r\n                    tableColumn={this.props.tableColumn}\r\n                    table={this.props.table}\r\n                    onEditBoard={this.props.onEditBoard}\r\n                    onEditTable={this.props.onEditTable}\r\n                    onEditTask={this.props.onEditTask} \r\n                    />\r\n                    </>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nexport const TableColumnPreview = connect(mapStateToProps)(_TableColumnPreview)","import React, { useEffect,useState,useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Task } from \"./Task\";\r\nimport { TableColumnPreview } from \"./TableColumnPreview\";\r\nimport { TiArrowSortedDown } from 'react-icons/ti'\r\nimport { VscTrash } from 'react-icons/vsc'\r\nimport { FaPencilAlt } from 'react-icons/fa'\r\nimport {BsCircleFill,BsTrashFill } from 'react-icons/bs'\r\nimport { DragDropContext,Droppable ,Draggable   } from 'react-beautiful-dnd';\r\nimport { BiGridVertical } from 'react-icons/bi'\r\nimport { CgExpand } from 'react-icons/cg'\r\nimport { AiOutlineShrink } from 'react-icons/ai'\r\nimport { GoThreeBars } from 'react-icons/go'\r\nimport { IoTextSharp } from 'react-icons/io5'\r\nimport { BsPeopleCircle,BsBoxArrowDown } from 'react-icons/bs'\r\nimport { MdDateRange } from 'react-icons/md'\r\nimport { TiSortNumerically } from 'react-icons/ti'\r\nimport { FcTimeline } from 'react-icons/fc'\r\nimport { HiHashtag } from 'react-icons/hi'\r\nimport { MdUpdate } from 'react-icons/md'\r\nimport { IoMdCheckboxOutline } from 'react-icons/io'\r\nimport {colorsPicker} from '../data/colorPicker'\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport { getColumnWidth } from \"./task-cells-width.js\";\r\n\r\nexport function TablePreview({\r\n    taskKeys,\r\n    table,\r\n    IoMdNotifications,\r\n    HiPlusCircle,\r\n    onAddNewTask,\r\n    onEditTask,\r\n    onEditTable,\r\n    onEditBoard,\r\n    onRemoveTask,\r\n    removeTable,\r\n    openConversationModal,\r\n    dragHandle,\r\n    isDragging,\r\n    isShrink,\r\n    onShrink,\r\n    search,\r\n    unCheckTasks,\r\n    provided,\r\n    updateBoard\r\n}){\r\n\r\n    const users = useSelector(state => state.user.users);\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const board = useSelector(state => state.workspace.currBoard);\r\n    const [newTaskName, setNewTaskName] = useState('');\r\n    const [isInputBtnVisable, setIsInputBtnVisable] = useState(false);\r\n    const [isShowTableOptionsModal, setIsShowTableOptionsModal] = useState(false);\r\n    const [isHover, setIsHover] = useState(false);\r\n    const [isOpenTableColorModal, setIsOpenTableColorModal] = useState(false);\r\n    const [tableCopy, setTableCopy] = useState(table);\r\n    const [isExpand, setExpandTable] = useState(true);\r\n    const [allOwners, setAllOwners] = useState([]);\r\n    const [allTablestatuses, setAllTablestatuses] = useState({});\r\n    const [statusTitles , setStatusTitles] = useState([]);\r\n    const [statusesSum , setStatusesSum] = useState([]);\r\n    const colorModal = useRef(null)\r\n    const [isShowAddColumnModal, setToggleAddColumnModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUsers())\r\n    }, [dispatch])    \r\n    \r\n    \r\n    function mapOrder (array, order, key) {\r\n        array.sort( function (a, b) {\r\n          var A = a[key], B = b[key];\r\n          if (order.indexOf(A) > order.indexOf(B)) {\r\n            return 1;\r\n          } else {\r\n            return -1;\r\n          }\r\n        });\r\n        return array;\r\n    };\r\n\r\n    \r\n    useEffect(() => {\r\n        let idList = []\r\n        table.tasks.map(task=>\r\n            idList=[...idList,  ...task.owner]\r\n        )\r\n        const uniqIdList = [...new Set(idList)];\r\n        const usersArray = users.filter(user=>\r\n                    uniqIdList.includes(user._id)\r\n                )\r\n        const orderedArray = mapOrder(usersArray, uniqIdList, '_id');\r\n        setAllOwners(orderedArray)\r\n        // setAllOwners(\r\n        //     users.filter(user=>\r\n        //         uniqIdList.includes(user._id)\r\n        //     )\r\n        // )\r\n    }, [table,table.tasks,newTaskName,users]) \r\n\r\n\r\n     useEffect(() => {\r\n        let list = []\r\n        let statusesNameInUse = []\r\n        table.tasks.map((task,idx)=>\r\n            {list= [...list,task.status]\r\n            statusesNameInUse = [...statusesNameInUse,task.status.name]}\r\n        )   \r\n        const sortedList = list.sort((a, b) => a.name.localeCompare(b.name)) \r\n        setStatusesSum( list.length)\r\n        //string of the exisiting used status names in the table\r\n        //sorted\r\n        const sortedStatusesNameInUse = statusesNameInUse.sort((a, b) => a.localeCompare(b)) \r\n        const uniq = [...new Set(sortedStatusesNameInUse)];\r\n       setStatusTitles(uniq)\r\n        //[\"\", \"Done\", \"To do\"]\r\n        let tablestatuses = {}\r\n        uniq.map(title=>\r\n            tablestatuses[`${title}`]={\r\n                num:sortedList.filter(status=>status.name===title).length,\r\n                color:sortedList.filter(status=>status.name===title)[0].color\r\n            }\r\n        )\r\n        setAllTablestatuses(tablestatuses)\r\n        // setAllTablestatuses([...sortedList])\r\n    }, [table,table.tasks])    \r\n\r\n     useEffect(() => {\r\n        setTableCopy(table)\r\n    }, [table])    \r\n    \r\n    useEffect(() => {\r\n        setExpandTable(!isShrink)\r\n    }, [isShrink])    \r\n    \r\n    useEffect(() => {\r\n        onShrink(isDragging)\r\n    }, [isDragging,onShrink]) \r\n\r\n    const toggleExpandeTable=(value)=>{\r\n        setExpandTable(value)\r\n    }\r\n\r\n    const handleChange=(ev)=>{\r\n        setNewTaskName(ev.target.value)\r\n    }\r\n    const onShowBtn=(ev)=>{\r\n        setIsInputBtnVisable(true)\r\n    }   \r\n    const onHideBtn=()=>{\r\n        setIsInputBtnVisable(false)\r\n        cleanInput()\r\n    }\r\n    const cleanInput=()=>{\r\n        setNewTaskName('')\r\n    }\r\n    \r\n    const addNewTaskKeyUp=(ev,currTable,newTaskName)=>{\r\n        if (ev.keyCode === 13) {\r\n            ev.preventDefault();\r\n            const desc = `added new task \"${newTaskName}\" to group \"${currTable.name}\"`\r\n            onAddNewTask(currTable,newTaskName,desc)\r\n            setNewTaskName('')\r\n        }\r\n    }\r\n\r\n    const onRemoveTable=(tableId,boardName)=>{\r\n        removeTable(tableId,boardName)\r\n        setIsShowTableOptionsModal(false)\r\n    }   \r\n    \r\n    const toggleHover=()=>{\r\n        setIsHover(curr=>!curr)\r\n    }     \r\n    const updateTableColor=(color)=>{\r\n        const updatedTable = {\r\n            ...table,\r\n            color\r\n        }\r\n        if (table.color === color) return\r\n        const desc = `changed the group color from \"${table.color}\" to \"${color}\"`\r\n        onEditTable(updatedTable,desc)\r\n        setIsOpenTableColorModal(false)\r\n    } \r\n    const onOpenTableColorModal=()=>{\r\n        setIsOpenTableColorModal(true)\r\n        setIsShowTableOptionsModal(false)\r\n    }\r\n    useEffect(() => {\r\n        if (isOpenTableColorModal) {\r\n            colorModal.current.focus();\r\n          }\r\n    }, [isOpenTableColorModal])\r\n    \r\n    const closeTableColorModal=()=>{\r\n        setIsOpenTableColorModal(false)\r\n    }\r\n    const handleDragEnd=({destination, source})=>{\r\n        if(!destination){\r\n            // \"not dropped in droppable\"\r\n            return\r\n        }\r\n        if(destination.index===source.index&&destination.draggableId===source.draggableId){\r\n            //\"dropped in same place\"\r\n            return\r\n        }\r\n        const itemCopy = {...table.tasks[source.index]}\r\n        setTableCopy(prev=>{\r\n            prev = {...prev}\r\n            prev.tasks.splice(source.index,1);\r\n            prev.tasks.splice(destination.index, 0, itemCopy);\r\n            return prev\r\n        })\r\n        const desc = `changed the tasks order inside \"${tableCopy.name}\" group`\r\n        onEditTable(tableCopy,desc)\r\n    }\r\n\r\n    function EditBoard(newColumn,desc) {\r\n        const updatedBoard = {\r\n            ...board,\r\n            tableColumns: [...board.tableColumns,newColumn],\r\n            activities:[\r\n                {\r\n                    desc: desc,\r\n                    userId: loggedInUser._id,\r\n                    createdAt: Date.now()\r\n                },\r\n                ...board.activities]\r\n        }\r\n        onEditBoard(updatedBoard)\r\n    }\r\n\r\n    function addColumn(type){\r\n        let newColumn = {}\r\n        let desc=''\r\n        switch (type) {\r\n            case 'People':\r\n                newColumn = {\r\n                    _id:Date.now(),\r\n                    title:'People',\r\n                    type:'People',\r\n                    taskKey:'owner'\r\n                }\r\n                desc = `added new people column`\r\n                EditBoard(newColumn,desc)\r\n                break;\r\n            case 'Status':\r\n                newColumn = {\r\n                    _id:Date.now(),\r\n                    title:'Status',\r\n                    type:'Status',\r\n                    taskKey:'status'\r\n                }\r\n                desc = `added new status column`\r\n                EditBoard(newColumn,desc)\r\n                break;\r\n            case 'Date':\r\n                newColumn = {\r\n                    _id:Date.now(),\r\n                    title:'Date',\r\n                    type:'Date',\r\n                    taskKey:'createdAt'\r\n                }\r\n                desc = `added new date column`\r\n                EditBoard(newColumn,desc)\r\n                break;\r\n            case 'Text':\r\n                newColumn = {\r\n                    _id:Date.now(),\r\n                    title:'Text',\r\n                    type:'Text',\r\n                    taskKey:'text'\r\n                }\r\n                desc = `added new text column`\r\n                EditBoard(newColumn,desc)\r\n                break;\r\n            case 'Numbers':\r\n                newColumn = {\r\n                    _id:Date.now(),\r\n                    title:'Numbers',\r\n                    type:'Numbers',\r\n                    taskKey:'numbers'\r\n                }\r\n                desc = `added new numbers column`\r\n                EditBoard(newColumn,desc)\r\n                break;\r\n            case 'CheckBox':\r\n                newColumn = {\r\n                    _id:Date.now(),\r\n                    title:'Check Box',\r\n                    type:'CheckBox',\r\n                    taskKey:'checkBox'\r\n                }\r\n                desc = `added new checkBox column`\r\n                EditBoard(newColumn,desc)\r\n                break;\r\n            case 'LastUpdated':\r\n                newColumn = {\r\n                    _id:Date.now(),\r\n                    title:'Last Updated',\r\n                    type:'LastUpdated',\r\n                    taskKey:'lastUpdated'\r\n                }\r\n                desc = `added new lastUpdated column`\r\n                EditBoard(newColumn,desc)\r\n                break;\r\n            case 'Timeline':\r\n                newColumn = {\r\n                    _id:Date.now(),\r\n                    title:'Timeline',\r\n                    type:'Timeline',\r\n                    taskKey:'timeline'\r\n                }\r\n                desc = `added new timeline column`\r\n                EditBoard(newColumn,desc)\r\n                break;\r\n            case 'Dropdown':\r\n                newColumn = {\r\n                    _id:Date.now(),\r\n                    title:'Dropdown',\r\n                    type:'Dropdown',\r\n                    taskKey:'dropdown'\r\n                }\r\n                desc = `added new dropdown column`\r\n                EditBoard(newColumn,desc)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setToggleAddColumnModal(false)\r\n    }\r\n\r\n    const getSumColumnContent=(columnName)=>{\r\n        let content = [];\r\n        switch (columnName) {\r\n            case 'status':\r\n                content.push(\r\n                    <div className='table-cell sum-cell sum-cell-content-wrapper'>\r\n                        <div className=\"sum-status-wrapper\">\r\n                            {statusTitles.map((title,idx)=>\r\n                             <span \r\n                             key={idx} \r\n                             style={{backgroundColor:`${allTablestatuses[`${title}`].color}`, width:`${allTablestatuses[`${title}`].num/statusesSum*100}%`}}>\r\n                                 <span className=\"label-text arrow-down status-label\">\r\n                                     <span>{title===''?'Empty':title}</span>\r\n                                     <span>{allTablestatuses[`${title}`].num}/{statusesSum}</span>\r\n                                     <span>{Math.round(allTablestatuses[`${title}`].num/statusesSum*100)}%</span>\r\n                                 </span>\r\n                             </span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ) \r\n                break;     \r\n            case 'owner':\r\n                content.push(\r\n                    <div className='table-cell sum-cell sum-cell-content-wrapper'>\r\n                        {allOwners.length>0&&\r\n                        <div className=\"owner-container\">\r\n                            <div className=\"owner-avatar-wrapper\">\r\n                                <img src={`${allOwners[0].avatar}`} alt=\"\"/>\r\n                            </div>\r\n                            {\r\n                                allOwners.length>1?\r\n                                <div className=\"owners-count\">\r\n                                    +{allOwners.length-1}\r\n                                </div>:\r\n                                null\r\n                            }\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                ) \r\n                break;\r\n            default:\r\n                content.push(\r\n                    <div className={`table-cell sum-cell ${getColumnWidth(columnName)}`}></div>\r\n                ) \r\n                break;\r\n        }\r\n        return content;\r\n    }\r\n\r\n    const columnBtnsContent = [\r\n        {\r\n            icon:<GoThreeBars className=\"icon\"/>,\r\n            name:'Status'\r\n        },{\r\n            icon:<BsBoxArrowDown className=\"icon\"/>,\r\n            name:'Dropdown'\r\n        }, {\r\n            icon:<IoTextSharp className=\"icon\"/>,\r\n            name:'Text'\r\n        }, {\r\n            icon:<MdDateRange className=\"icon\"/>,\r\n            name:'Date'\r\n        }, {\r\n            icon:<BsPeopleCircle className=\"icon\"/>,\r\n            name:'People'\r\n        }, {\r\n            icon:<TiSortNumerically className=\"icon\"/>,\r\n            name:'Numbers'\r\n        },{\r\n            icon:<FcTimeline className=\"icon\"/>,\r\n            name:'Timeline'\r\n        },{\r\n            icon:<MdUpdate className=\"icon\"/>,\r\n            name:'LastUpdated'\r\n        },{\r\n            icon:<IoMdCheckboxOutline className=\"icon\"/>,\r\n            name:'CheckBox'\r\n        },{\r\n            icon:<HiHashtag className=\"icon\"/>,\r\n            name:'Tags'\r\n        },\r\n    ]\r\n\r\n    const getColumnInUseStyle=(btnName)=>{\r\n        let columnsInUse = []\r\n        board.tableColumns.forEach(column=>\r\n            {for(const property in column) {\r\n                if (property === 'type')\r\n                columnsInUse.push(`${column[property]}`)\r\n            }}\r\n        )\r\n        const uniq = [ ...new Set(columnsInUse) ];\r\n        if(uniq.includes(btnName)){\r\n            return 'column-in-use'\r\n        }\r\n            \r\n    }\r\n\r\n    const getColumnBtnContent =(btnIcon,btnName)=>{\r\n        let content  = [ <div onClick={()=>addColumn(`${btnName}`)} \r\n                            className={getColumnInUseStyle(btnName)} >\r\n                            {btnIcon}\r\n                            <span>{`${\r\n                                btnName==='LastUpdated'?\r\n                                'Last Updated':\r\n                                btnName==='CheckBox'?\r\n                                'Check Box':\r\n                                btnName\r\n                            }`}</span>\r\n                        </div>]\r\n        return content\r\n    }\r\n\r\n\r\n    if (!table||!board) return <div>Loading....</div>\r\n    return (\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n                   { isExpand?<div className=\"table\" key={table._id}>\r\n                    <div \r\n                        className=\"title-row-wrapper\" \r\n                    >\r\n                        <div\r\n                            className=\"options-wrapper\"  \r\n                            tabIndex=\"0\" \r\n                            onBlur={()=>setIsShowTableOptionsModal(false)} \r\n                        >\r\n                            <div className=\"title-options-btn\" onMouseEnter={toggleHover} onMouseLeave={toggleHover}>\r\n                                <div className={`TiArrowSortedDown-wrapper TiArrowSortedDown-title-wrapper ${isShowTableOptionsModal?'active':''}`} \r\n                                style={isHover?{backgroundColor:`white`,borderColor:`${table.color}`}:{backgroundColor:`${table.color}`}}\r\n                                onClick={()=>setIsShowTableOptionsModal(curr=>!curr)}>\r\n                                    <TiArrowSortedDown className={`TiArrowSortedDown-title ${isShowTableOptionsModal?'active':''}`} style={isHover?{color:`${table.color}`}:{color:`white`}}/>\r\n                                </div>\r\n                            </div>\r\n                            {  \r\n                            isShowTableOptionsModal&&\r\n                                <div className=\"options-modal title-options-modal\">\r\n        \r\n                                    <div  className='modal-btn item-actions-btn'\r\n                                    >\r\n                                        <FaPencilAlt className=\"icon\"/>\r\n                                        <span>Rename Group-erorr</span>\r\n                                    </div>\r\n        \r\n                                    <div  className='modal-btn item-actions-btn'\r\n                                    onClick={onOpenTableColorModal}\r\n                                    >\r\n                                        <BsCircleFill \r\n                                        className=\"icon\"\r\n                                        style={{color:table.color}}\r\n                                        />\r\n                                        <span>Change Group Color</span>\r\n                                    </div>\r\n        \r\n                                    <div className='delete-btn-wrapper'>\r\n                                        <div className='modal-btn item-actions-btn' onClick={()=>{onRemoveTable(table._id,table.name)}}>\r\n                                            <BsTrashFill className=\"icon\"/>\r\n                                            <span>Delete</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {isOpenTableColorModal&&<div className=\"table-color-modal\" ref={colorModal} tabIndex='0' onBlur={()=>setIsOpenTableColorModal(false)}>\r\n                            <div className=\"first-section\">\r\n                                    <BsCircleFill \r\n                                        className=\"group-color\"\r\n                                        style={{color:table.color}}\r\n                                    />\r\n                            </div>\r\n                            <div  className=\"second-section\">\r\n                                {colorsPicker.map(color=>\r\n                                    <div className=\"color\" style={{backgroundColor:`${color}`}} onClick={()=>updateTableColor(color)}></div>\r\n                                )}\r\n                            </div>\r\n                        </div>}\r\n                        <div className=\"table-row title-row\">\r\n                            {\r\n                                board.tableColumns.map(tableColumn=>\r\n                                    <TableColumnPreview \r\n                                        board={board} \r\n                                        tableColumn={tableColumn} \r\n                                        table={table} \r\n                                        IoMdNotifications={IoMdNotifications} \r\n                                        onEditTable={onEditTable} \r\n                                        onEditBoard={onEditBoard}\r\n                                        isOpenTableColorModal={isOpenTableColorModal}\r\n                                        closeTableColorModal={closeTableColorModal}\r\n                                        toggleExpandeTable={toggleExpandeTable}\r\n                                        isExpand={isExpand}\r\n                                        dragHandle={dragHandle}\r\n                                        onEditTask={onEditTask} \r\n                                    />\r\n                                ) \r\n                            }\r\n                                    <div className=\"table-cell title-cell\"\r\n                                     tabIndex=\"0\"\r\n                                     onBlur={()=>{\r\n                                         setToggleAddColumnModal(false)\r\n                                     }}\r\n                                    >\r\n                                        <HiPlusCircle \r\n                                        className=\"add-column-btn\"\r\n                                        onClick={()=>{\r\n                                            setToggleAddColumnModal(curr=>!curr)\r\n                                        }}\r\n                                        />\r\n                                        {isShowAddColumnModal&&<div className='modal-default-style new-column-modal'\r\n                                        >\r\n                                           <div className=\"title\">Essentials</div>\r\n                                           <div className='column-types-container'>\r\n                                               {\r\n                                                    columnBtnsContent.slice(0,6).map(content=>\r\n                                                        getColumnBtnContent(content.icon,content.name)\r\n                                                    )\r\n                                               }\r\n                                            </div>\r\n\r\n                                            <div className=\"title\">Super Useful</div>\r\n\r\n                                            <div className='column-types-container'>\r\n                                                {\r\n                                                    columnBtnsContent.slice(6).map(content=>\r\n                                                        getColumnBtnContent(content.icon,content.name)\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>}\r\n                                    </div>\r\n                        </div> \r\n                    </div>\r\n                    {\r\n                        table.tasks.map((task,index)=>\r\n                        task.name.toLowerCase().includes(search.toLowerCase())?\r\n                        <>\r\n                        <Droppable droppableId={`droppable-${index}`} >\r\n                        {(provided,snapshot) => (\r\n                            <div className={`task-droppable-container ${snapshot.isDraggingOver?'droppable':''}`}\r\n                            {...provided.droppableProps} ref={provided.innerRef}\r\n                            >\r\n                                <Draggable key={task._id} draggableId={task._id} index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                        <Task \r\n                                        isDragging={snapshot.isDragging}\r\n                                        isDraggingOver={snapshot.isDraggingOver}\r\n                                        provided={provided}\r\n                                        task={task} \r\n                                        taskKeys={taskKeys} \r\n                                        table={table} \r\n                                        onEditTask={onEditTask} \r\n                                        onRemoveTask={onRemoveTask}\r\n                                        onEditTable={onEditTable} \r\n                                        board={board}\r\n                                        onEditBoard={onEditBoard}\r\n                                        openConversationModal={openConversationModal}\r\n                                        unCheckTasks={unCheckTasks}\r\n                                        updateBoard={updateBoard}\r\n                                        />\r\n                                    )}\r\n                                </Draggable>\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                        </Droppable>\r\n                        </>\r\n                        :\r\n                        null\r\n                        )\r\n                    } \r\n                    <div className=\"table-row add-row\">\r\n                                <div className='table-cell add-cell'>\r\n                                    <div className='decoration-line' style={{backgroundColor:`${table.color}`}}></div>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        placeholder=\"+ Add\" \r\n                                        className={`add-new-task-input ${table.tasks.length>0?'':'new-table-input'}`}\r\n                                        onChange={(ev)=>handleChange(ev)}\r\n                                        value={newTaskName} \r\n                                        onKeyUp={(ev)=>{\r\n                                            addNewTaskKeyUp(ev,table,newTaskName)\r\n                                        }}\r\n                                        onFocus={(ev)=>onShowBtn(ev)}\r\n                                        onBlur={(ev)=>onHideBtn(ev)}\r\n                                    />\r\n                                     {isInputBtnVisable&&<div \r\n                                    className={`add-new-task-btn ${newTaskName.split(' ').join('').length>0?'active':''}`}\r\n\r\n                                    onMouseDown ={()=>{\r\n                                        const desc = `added new task \"${newTaskName}\" to group \"${table.name}\"`\r\n                                        onAddNewTask(table,newTaskName,desc)\r\n                                    }}\r\n                                >Add</div>}\r\n                                </div>\r\n                                <div className='table-cell add-cell'></div>\r\n                    </div> \r\n                    <div className=\"table-row sum-row\">\r\n                        {\r\n                            taskKeys.map((taskKey)=>\r\n                                getSumColumnContent(taskKey)\r\n                            )\r\n                        }\r\n                        <div className='table-cell sum-cell'></div>\r\n                    </div> \r\n                </div>:\r\n                <div className={`table ${!isExpand?'shrink':''}`} key={table._id}>\r\n                    <div className=\"title-row-wrapper\" >\r\n                        <div className=\"table-cell title-cell\" style={{color:`${table.color}` }} >\r\n                        <div \r\n                    className={`${isOpenTableColorModal?'':'table-name-wrapper'}`}\r\n                    tabIndex='0' \r\n                    onBlur={()=>\r\n                        {\r\n                        closeTableColorModal()\r\n                        }   \r\n                    }  \r\n                    >\r\n\r\n                        <div className=\"table-actions\">\r\n                            {!isExpand?<CgExpand className=\"expand-btn\" onClick={()=>toggleExpandeTable(true)}/>:\r\n                            <AiOutlineShrink className=\"shrink-btn\" onClick={()=>toggleExpandeTable(false)}/> }\r\n                            <div  className=\"drag-btn\"  {...dragHandle.dragHandleProps}>\r\n                            <BiGridVertical/>\r\n                            </div>\r\n                        </div>\r\n                        <span>{table.name}</span>\r\n                    </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n        </DragDropContext>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { HiOutlineDocumentDuplicate} from 'react-icons/hi'\r\nimport { IoArrowForwardCircleOutline} from 'react-icons/io5'\r\nimport { MdClose} from 'react-icons/md'\r\nimport { BsTrash} from 'react-icons/bs'\r\n\r\nexport function MultipleActionsModal({checkedTasks,onUnCheckTasks,onEditBoard}) {\r\n\r\n    const board = useSelector(state => state.workspace.currBoard);\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    \r\n    const onRemoveCheckedTasks =()=>{\r\n        let ids = []\r\n        let tables = []\r\n        let removedTasks=[]\r\n        let descArray=[]\r\n        const seen = new Set();\r\n        checkedTasks.forEach(item=>\r\n             {ids.push(item._id)\r\n             tables.push(item.table)}\r\n         )\r\n        //removing duplicated tables from array\r\n        const filteredTables = tables.filter(el => {\r\n            const duplicate = seen.has(el._id);\r\n            seen.add(el._id);\r\n            return !duplicate;\r\n        });\r\n        let newTablesArray = []  //array for the updated tables (after removing tasks)\r\n        filteredTables.forEach(table => {\r\n           const newTable = {\r\n               ...table,\r\n               tasks:table.tasks.filter(task=>!ids.includes(task._id))\r\n           }\r\n           newTablesArray.push(newTable)\r\n           removedTasks = table.tasks.filter(task=>ids.includes(task._id))\r\n           removedTasks.forEach(task=>{\r\n               const desc = `removed task \"${task.name}\" from \"${table.name}\"`\r\n                descArray.push(desc) //to update desc inside board activities\r\n           })\r\n        })\r\n        \r\n        const newBoard = {\r\n            ...board,\r\n            //replace objects in board.tables with updated tables from newTablesArray with same _id.\r\n            tables:board.tables.map(tableObj => newTablesArray.find(newTableObj => newTableObj._id === tableObj._id) || tableObj)\r\n        }\r\n\r\n        onEditBoard(newBoard,descArray)\r\n        onUnCheckTasks()\r\n    }\r\n\r\n\r\n    const onDuplicateCheckedTasks =()=>{\r\n        let ids = []\r\n        let tables = []\r\n        let duplicatedTasks=[]\r\n        let descArray=[]\r\n        const seen = new Set();\r\n        checkedTasks.forEach(item=>\r\n             {ids.push(item._id)\r\n             tables.push(item.table)}\r\n         )\r\n        //removing duplicated tables from array\r\n        const filteredTables = tables.filter(el => {\r\n            const duplicate = seen.has(el._id);\r\n            seen.add(el._id);\r\n            return !duplicate;\r\n        });\r\n        let newTablesArray = []  //array for the updated tables (after duplicate tasks)\r\n        filteredTables.forEach(table => {\r\n           const newTable = {\r\n               ...table,\r\n               tasks:table.tasks.flatMap((task)=>ids.includes(task._id)?\r\n               [task,\r\n                {\r\n                    ...task,\r\n                    _id : Date.now().toString(16) + Math.random().toString(16),\r\n                    createdAt : Date.now(),\r\n                    lastUpdated : {\r\n                        byUser : loggedInUser._id,\r\n                        date : new Date().getTime()\r\n                    }\r\n                }]\r\n               :task)\r\n           }\r\n           newTablesArray.push(newTable)\r\n           duplicatedTasks = table.tasks.filter(task=>ids.includes(task._id)) \r\n           duplicatedTasks.forEach(task=>{\r\n               const desc = `duplicate task \"${task.name}\" inside \"${table.name}\"`\r\n                descArray.push(desc) //to update desc inside board activities\r\n           })\r\n        })\r\n        \r\n        const newBoard = {\r\n            ...board,\r\n            //replace objects in board.tables with updated tables from newTablesArray with same _id.\r\n            tables:board.tables.map(tableObj => newTablesArray.find(newTableObj => newTableObj._id === tableObj._id) || tableObj)\r\n        }\r\n\r\n        onEditBoard(newBoard,descArray)\r\n        onUnCheckTasks()\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"multiple-actions-modal slide-top\">\r\n            <div className=\"items-count-wrapper\">{checkedTasks.length}</div>\r\n            <div>\r\n                <div className=\"middle-section\">\r\n                    <div className=\"selected-items\">\r\n                        <div className=\"title\">Item{`${checkedTasks.length>1?'s':''}`} selected</div>\r\n                        <div className=\"dots-container\">\r\n                            {checkedTasks.map(task=>\r\n                                <div className=\"dot\"></div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"options-wrapper\">\r\n                        <div className=\"option-btn\">\r\n                            <HiOutlineDocumentDuplicate className=\"icon\" onClick={onDuplicateCheckedTasks}/>\r\n                            <div className=\"name\">Duplicate</div>\r\n                        </div>\r\n                        <div className=\"option-btn\">\r\n                            <BsTrash className=\"icon\" onClick={onRemoveCheckedTasks}/>\r\n                            <div className=\"name\">Delete</div>\r\n                        </div>\r\n                        <div className=\"option-btn opacity-for-currently-unavailable-btns\">\r\n                            <IoArrowForwardCircleOutline className=\"icon\"/>\r\n                            <div className=\"name\">Move to</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"close-btn\" \r\n            onClick={onUnCheckTasks}\r\n            >\r\n              <MdClose/>\r\n            </div>\r\n    </div>\r\n    )\r\n}","import io from 'socket.io-client'\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030/'\r\n\r\nlet socket\r\n\r\nexport const socketService = {\r\n  setup,\r\n  terminate,\r\n  on,\r\n  off,\r\n  emit,\r\n  broadcast,\r\n}\r\n\r\nfunction setup() {\r\n  socket = io.connect(BASE_URL)\r\n}\r\n\r\nfunction terminate() {\r\n  socket = null\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n  console.log('ON SOCKET EVENT')\r\n  socket.on(eventName, cb)\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n  socket.off(eventName, cb)\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  console.log('ON emit')\r\n  socket.emit(eventName, data)\r\n}\r\n\r\nfunction broadcast(eventName, data) {\r\n  socket.broadcast.emit(eventName, data)\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { loadWorkspaces, updateWorkspace } from '../store/actions/workspaceActions'\r\nimport { updateCurrBoard} from '../store/actions/workspaceActions'\r\nimport { TablePreview } from \"./TablePreview\";\r\nimport { DragDropContext,Droppable ,Draggable   } from 'react-beautiful-dnd';\r\nimport { IoMdNotifications} from 'react-icons/io'\r\nimport { HiPlusCircle } from 'react-icons/hi'\r\nimport { BsPlus} from 'react-icons/bs'\r\nimport { MultipleActionsModal} from './MultipleActionsModal'\r\n\r\nimport { socketService } from '../services/socketService'\r\n\r\nclass _BoardMain extends Component {\r\n    state={\r\n        board:null,\r\n        isShrink:false,\r\n        unCheckTasks:false\r\n    }\r\n\r\n    onUnCheckTasks=()=>{\r\n        this.setState({unCheckTasks:true})\r\n    }\r\n\r\n\r\n\r\n    onShrink=(value)=>{\r\n        this.setState({isShrink:value})\r\n    }\r\n    componentDidMount(){\r\n        this.setState({board:this.props.board})\r\n        //setup sockets\r\n        socketService.setup();\r\n        socketService.on('message', (data) => {\r\n          console.log('data',data)\r\n        })\r\n    }\r\n\r\n    onTest=()=>{\r\n        socketService.emit('message', {txt:'123',user:'mili'})\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.board !== this.props.board){\r\n            this.setState({          \r\n                board: this.props.board\r\n            });\r\n        }\r\n        if(prevProps.checkedTasks!==this.props.checkedTasks&&this.props.checkedTasks.length<1){\r\n            this.setState({unCheckTasks:false})\r\n        }\r\n    }\r\n    handleDragEnd=({destination, source})=>{\r\n       if(!destination){\r\n           // \"not dropped in droppable\"\r\n           return\r\n       }\r\n       if(destination.index===source.index&&destination.draggableId===source.draggableId){\r\n           // \"dropped in same place\"\r\n           return\r\n       }\r\n        // board.statusLabelList\r\n       const tableCopy = {...this.props.board.tables[source.index]}\r\n       this.setState({ // no previous or latest old state passed \r\n            board:{\r\n                ...this.state.board\r\n            }\r\n            }, ()=>{\r\n                this.state.board.tables.splice(source.index,1);\r\n                this.state.board.tables.splice(destination.index, 0, tableCopy);\r\n                return this.state.board\r\n        })  \r\n        const desc = `changed groups order`\r\n        this.props.onEditBoard(this.state.board,desc)\r\n   }\r\n\r\n    render() {\r\n        const { \r\n            board,\r\n            getTaskValue,\r\n            removeTable,\r\n            onAddNewTask,\r\n            onEditTask,\r\n            onEditTable,\r\n            onEditBoard,\r\n            onRemoveTask,\r\n            openConversationModal,\r\n            search,\r\n            updateBoard\r\n        } = this.props\r\n        const taskKeys = this.props.board.tableColumns.map(tableColumn=>\r\n                    tableColumn.taskKey\r\n                )\r\n        if (!board) return <div>Loading....</div>\r\n        return (\r\n            <>\r\n             {/* <button onClick={this.onTest}>test sockets</button> */}\r\n        <DragDropContext  onDragEnd={this.handleDragEnd}>\r\n            <Droppable droppableId={board._id} >\r\n                {(provided) => (\r\n                    <div className=\"board-main\" key={board._id} {...provided.droppableProps} ref={provided.innerRef} >\r\n                    {\r\n                        board.tables.map((table,index)=>\r\n                            <Draggable key={table._id} draggableId={table._id} index={index}>\r\n                                {(provided,snapshot) => (\r\n                                     <div className={`table-wrapper ${this.state.isShrink?'shrink':''}`} ref={provided.innerRef} {...provided.draggableProps}>\r\n                                        <TablePreview\r\n                                        isDragging={snapshot.isDragging}\r\n                                         dragHandle={provided}\r\n                                         taskKeys={taskKeys} \r\n                                         table={table}\r\n                                         getTaskValue={getTaskValue}\r\n                                         IoMdNotifications={IoMdNotifications}\r\n                                         HiPlusCircle={HiPlusCircle}\r\n                                         BsPlus={BsPlus}\r\n                                         onAddNewTask={onAddNewTask}\r\n                                         onEditTask={onEditTask}\r\n                                         onEditTable={onEditTable}\r\n                                         onEditBoard={onEditBoard}\r\n                                         onRemoveTask={onRemoveTask}\r\n                                         removeTable={removeTable}\r\n                                         openConversationModal={openConversationModal}\r\n                                         isShrink={this.state.isShrink}\r\n                                         onShrink={this.onShrink}\r\n                                         search={search}\r\n                                         unCheckTasks={this.state.unCheckTasks}\r\n                                         updateBoard={updateBoard}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                            </Draggable>\r\n                        ) \r\n                    }\r\n                      {provided.placeholder}\r\n                      {this.props.checkedTasks.length>0&&\r\n                      <MultipleActionsModal \r\n                      checkedTasks={this.props.checkedTasks}\r\n                      onUnCheckTasks={this.onUnCheckTasks}\r\n                      onEditBoard={this.props.onEditBoard}\r\n                      />}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n        </>\r\n    );\r\n}}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        workspaces: state.workspace.workspaces,\r\n        board: state.workspace.currBoard,\r\n        loggedInUser: state.user.loggedInUser,\r\n        checkedTasks: state.workspace.checkedTasks\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadWorkspaces,\r\n    updateWorkspace,\r\n    updateCurrBoard,\r\n}\r\nexport const BoardMain = connect(mapStateToProps, mapDispatchToProps)(withRouter(_BoardMain))\r\n","import React, { useState,useRef,useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FaPencilAlt } from 'react-icons/fa'\r\nimport { BiCheck } from 'react-icons/bi';\r\nimport { BsThreeDots,BsTrashFill } from 'react-icons/bs';\r\nimport { WorkspaceIconPicker } from \"./WorkspaceIconPicker\";\r\n\r\nexport function NewWorkspaceBoardMain({updateWorkspace,deleteWorkspace}) {\r\n    const workspace = useSelector(state => state.workspace.currWorkspace);\r\n    const[isOpenModal,setIsOpenModal]=useState(false)\r\n    const[isShowModal,setIsShowModal]=useState(false)\r\n    const[newWorkspaceColor,setNewWorkspaceColor]=useState(workspace.color)\r\n    const[newWorkspaceIcon,setNewWorkspaceIcon]=useState(workspace.img)\r\n    const [isUpdateName, setIsUpdateName] = useState(false);\r\n    const [workspaceName, setWorkspaceName] = useState(workspace.name);\r\n    const [isUpdateDesc, setIsUpdateDesc] = useState(false);\r\n    const [workspaceDesc, setWorkspaceDesc] = useState(workspace.desc);\r\n    const nameInputEl = useRef()\r\n    const descInputEl = useRef()\r\n\r\n    useEffect(() => {\r\n        setNewWorkspaceColor(workspace.color)\r\n        setNewWorkspaceIcon(workspace.img)\r\n        setWorkspaceName(workspace.name)\r\n        setWorkspaceDesc(workspace.desc)\r\n    }, [workspace])\r\n\r\n    function handleChangeName(ev) {\r\n        // if(ev.target.value.length<1)return\r\n        setWorkspaceName(ev.target.value)\r\n    }    \r\n    function onUpdateName() {\r\n        setIsUpdateName(true)\r\n        setTimeout(() => {\r\n            nameInputEl.current.focus()\r\n            nameInputEl.current.select()\r\n        }, 0); \r\n    }\r\n\r\n    function handleChangDesc(ev) {\r\n        setWorkspaceDesc(ev.target.value)\r\n    }\r\n    function onUpdateDesc() {\r\n        setIsUpdateDesc(true)\r\n        setTimeout(() => {\r\n            descInputEl.current.focus()\r\n            descInputEl.current.select()\r\n        }, 0); \r\n    }\r\n    return (\r\n        <div className=\"new-workspace-board-main-wrapper\">\r\n            <div\r\n                className=\"workspace-icon\"  \r\n                style={{backgroundColor:`${newWorkspaceColor}`}}\r\n                onClick={()=>{setIsOpenModal(true)}}\r\n                tabIndex=\"0\"\r\n                onBlur={()=>{\r\n                    if(newWorkspaceColor!==workspace.color||newWorkspaceIcon!==workspace.img){\r\n                        const newWorkspace={\r\n                            ...workspace,\r\n                            img:newWorkspaceIcon,\r\n                            color:newWorkspaceColor\r\n                        }\r\n                        updateWorkspace(newWorkspace)\r\n                    }\r\n                    setIsOpenModal(false)\r\n                }}\r\n            >\r\n                {newWorkspaceIcon}\r\n                {!isOpenModal&&\r\n                    <div className=\"workspace-icon-edit\" >\r\n                        <div><FaPencilAlt className=\"workspace-edit-pencil\"/></div>\r\n                        <div>Edit</div>\r\n                    </div>\r\n                }\r\n                {isOpenModal&&\r\n                    <div className=\" modal-default-style workspace-icon-modal\">\r\n                        <WorkspaceIconPicker updateWorkspace={updateWorkspace}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"workspace-name-container\">\r\n                    <div\r\n                        className={`name-wrapper  ${isUpdateName?'updating':''}`} onClick={onUpdateName}>\r\n                        {isUpdateName?\r\n                        <input \r\n                            className=\"update-workspace-input\" \r\n                            type=\"text\" \r\n                            value={workspaceName}\r\n                            onChange={handleChangeName}\r\n                            ref={nameInputEl}\r\n                            onBlur={()=>{\r\n                                setIsUpdateName(false)\r\n                                if(workspaceName!==workspace.name){\r\n                                    const newWorkspace={\r\n                                        ...workspace,\r\n                                        name:workspaceName,\r\n                                    }\r\n                                    updateWorkspace(newWorkspace)\r\n                                }\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                }\r\n                            }}\r\n                        />\r\n                        :\r\n                        <div>{workspaceName}</div>\r\n                        }\r\n                    </div>\r\n                        <div className=\"workspace-options-container\"\r\n                        tabIndex=\"0\"\r\n                        onBlur={()=>setIsShowModal(false)}\r\n                        >\r\n                            <BsThreeDots className={`workspace-dots ${isShowModal?'open':''}`} onClick={()=>setIsShowModal(curr=>!curr)}/>\r\n                            {isShowModal&&\r\n                                <div className=\" modal-default-style workspace-options-modal\">\r\n                                    <div className=\"modal-btn workspace-options-btn\"\r\n                                    onClick={()=>\r\n                                        {onUpdateDesc()\r\n                                        setIsShowModal(false)}\r\n                                    }\r\n                                    >\r\n                                        <FaPencilAlt className=\"icon\"/>\r\n                                        <span>Rename workspace</span>\r\n                                    </div>\r\n                                    <div className=\"modal-btn workspace-options-btn\"\r\n                                     onClick={()=>\r\n                                        {\r\n                                            deleteWorkspace(workspace._id)\r\n                                            setIsShowModal(false)\r\n                                        }\r\n                                    }\r\n                                    >\r\n                                        <BsTrashFill className=\"icon\"/>\r\n                                        <span>Delete workspace</span>\r\n                                    </div>\r\n                                </div>}\r\n                        </div>\r\n                </div>\r\n\r\n                <div\r\n                    className={`desc-wrapper ${isUpdateDesc?'updating':''}`} onClick={onUpdateDesc}>\r\n                    {isUpdateDesc?\r\n                    <input \r\n                        className=\"update-workspace-input\" \r\n                        type=\"text\" \r\n                        value={workspaceDesc}\r\n                        onChange={handleChangDesc}\r\n                        ref={descInputEl}\r\n                        onBlur={()=>{\r\n                            setIsUpdateDesc(false)\r\n                            if(workspaceDesc!==workspace.desc){\r\n                                const newWorkspace={\r\n                                    ...workspace,\r\n                                    desc:workspaceDesc\r\n                                }\r\n                                updateWorkspace(newWorkspace)\r\n                            }\r\n                        }}\r\n                        onKeyDown={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                ev.target.blur()\r\n                            }\r\n                        }}\r\n                    />\r\n                    :\r\n                    <div>{workspaceDesc}</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState,useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BoardHeader } from './BoardHeader'\r\nimport { BoardMain } from './BoardMain'\r\nimport { NewWorkspaceBoardMain } from './NewWorkspaceBoardMain'\r\n\r\nexport function BoardDetails({\r\n    isNewWorkspaceCreated,\r\n    onAddNewTable,\r\n    onEditBoard,\r\n    getTaskValue,\r\n    removeTable,\r\n    onAddNewTask,\r\n    onEditTask,\r\n    onEditTable,\r\n    onRemoveTask,\r\n    openConversationModal,\r\n    updateWorkspace,\r\n    deleteWorkspace,\r\n    openActivitiesModal,\r\n    updateBoard\r\n}){\r\n    const workspace = useSelector(state => state.workspace.currWorkspace);\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    return (\r\n        <div className=\"board-content-container\">\r\n        {\r\n        !isNewWorkspaceCreated?\r\n            <BoardHeader \r\n                workspace={workspace}\r\n                onAddNewTable={onAddNewTable}\r\n                onEditBoard={onEditBoard}\r\n                setSearch={setSearch} \r\n                openActivitiesModal={openActivitiesModal}\r\n            />:\r\n            <div className=\"new-workspace-board-header\"></div>\r\n        }\r\n            {\r\n            !isNewWorkspaceCreated?\r\n                <BoardMain \r\n                isNewWorkspaceCreated={isNewWorkspaceCreated}\r\n                workspace={workspace} \r\n                getTaskValue={getTaskValue}\r\n                removeTable={removeTable}\r\n                onAddNewTask={onAddNewTask}\r\n                onEditTask={onEditTask}\r\n                onEditTable={onEditTable}\r\n                onEditBoard={onEditBoard}\r\n                onRemoveTask={onRemoveTask}\r\n                openConversationModal={openConversationModal}\r\n                search={search} \r\n                updateBoard={updateBoard}\r\n            />:\r\n            <NewWorkspaceBoardMain \r\n            updateWorkspace={updateWorkspace}\r\n            deleteWorkspace={deleteWorkspace}\r\n            />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect,useState,useRef } from 'react';\r\nimport { TextareaEditor } from \"./TextareaEditor\";\r\nimport { FaQuoteRight,FaBold} from 'react-icons/fa'\r\nimport { AiOutlineItalic,AiOutlineBars} from 'react-icons/ai'\r\nimport { MdFormatColorText,MdFormatListNumbered} from 'react-icons/md'\r\nimport { BsTextLeft,BsTextRight} from 'react-icons/bs'\r\nimport { GoMention} from 'react-icons/go'\r\nimport { TiAttachment } from 'react-icons/ti'\r\nimport { BiSmile } from 'react-icons/bi'\r\nimport { AiOutlineLike,AiFillLike } from 'react-icons/ai'\r\nimport { RiReplyLine } from 'react-icons/ri'\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from 'moment'\r\n\r\nfunction ReplyMsgPreview({replyMsg,getUserById,conversation,currTask,onEditTask,currTable}) {\r\n\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n\r\n    function onUpdateReplyLikes(replyMsg) {\r\n        let updatedTask = {}\r\n        if(replyMsg.likes.users.includes(loggedInUser._id)){\r\n            updatedTask = {\r\n                ...currTask,\r\n                conversations: currTask.conversations.map((_conversation)=>\r\n                    _conversation._id===conversation._id?\r\n                    {\r\n                        ..._conversation,\r\n                        replys:conversation.replys.map(_reply=>\r\n                            _reply._id===replyMsg._id?\r\n                            {\r\n                                ..._reply,\r\n                                likes:{\r\n                                    count:_reply.likes.count-1,\r\n                                    users:_reply.likes.users.filter(userId=>userId!==loggedInUser._id)\r\n                                }\r\n                            }\r\n                            :_reply\r\n                            )}\r\n                        :_conversation)\r\n            }\r\n        }else{\r\n            updatedTask = {\r\n                ...currTask,\r\n                conversations: currTask.conversations.map((_conversation)=>\r\n                    _conversation._id===conversation._id?\r\n                    {\r\n                        ..._conversation,\r\n                        replys:conversation.replys.map(_reply=>\r\n                            _reply._id===replyMsg._id?\r\n                            {\r\n                                ..._reply,\r\n                                likes:{\r\n                                    count:_reply.likes.count+1,\r\n                                    users:[..._reply.likes.users,loggedInUser._id]\r\n                                }\r\n                            }\r\n                            :_reply\r\n                            )}\r\n                        :_conversation)\r\n            }\r\n        }\r\n        const desc = `liked reply \"${replyMsg.msg}\" on conversation inside task \"${currTask.name}\"`\r\n            \r\n        onEditTask(currTable,updatedTask,desc)\r\n    }\r\n\r\n    return(\r\n        <div className=\"reply-msg-preview\">\r\n            <div className=\"user-img\" style={{backgroundImage:`url(${getUserById(replyMsg.userId).avatar})`}}></div>\r\n            <div className=\"reply-content-wrapper\">\r\n                <div className=\"reply-msg-txt\">\r\n                    <span className=\"user-name\">{getUserById(replyMsg.userId).username}</span>\r\n                    <span>{replyMsg.msg}</span>\r\n                </div>\r\n                <div className=\"reply-msg-info flex\">\r\n                    {\r\n                    replyMsg.likes.users.includes(loggedInUser._id)?\r\n                    <AiFillLike onClick={()=>onUpdateReplyLikes(replyMsg)} className='liked pointer'/>\r\n                    :\r\n                    <AiOutlineLike onClick={()=>onUpdateReplyLikes(replyMsg)} className=\"pointer\"/>\r\n                    }\r\n                    {replyMsg.likes.count>0&&replyMsg.likes.count}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ConversationPreview({onEditTask,currTable,currTask,conversation,getUserById,onUpdateMsgLikes,attachmentBtns}) {\r\n\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const [isReplyActive, setIsReplyActive] = useState(false);\r\n    const [reply, setReply] = useState('');\r\n    const [replyTextareaFocus, setReplyTextareaFocus] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(!isReplyActive){\r\n            setReply('')\r\n        }\r\n    }, [isReplyActive])\r\n\r\n    function onReplyMsg(conversation) {\r\n        if(reply.trim().length<1)return\r\n        const newReplyMsg={\r\n            _id:Date.now(),\r\n            userId:loggedInUser._id,\r\n            msg:reply,\r\n            files:[],\r\n            img:'',\r\n            likes:{\r\n                count:0,\r\n                users:[]\r\n            },\r\n            createdAt:new Date().getTime()\r\n        }\r\n        const updatedTask = {\r\n            ...currTask,\r\n            conversations: currTask.conversations.map((_conversation)=>_conversation._id===conversation._id?{..._conversation,replys:[..._conversation.replys,newReplyMsg]}:_conversation)\r\n        }\r\n        const desc = `replied to conversation \"${conversation.msg}\" inside task \"${currTask.name}\"`\r\n        onEditTask(currTable,updatedTask,desc)\r\n        setReply('')\r\n        setIsReplyActive(false)\r\n        setReplyTextareaFocus(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"conversation-wrapper\" key={conversation._id}>\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"sender-details\">\r\n                    <div className='sender-img' style={{backgroundImage:`url(${getUserById(conversation.userId).avatar})`}}></div>\r\n                    <div className='sender-name'>{getUserById(conversation.userId).username}</div>\r\n                </div>\r\n                <div className=\"msg\">{conversation.msg}</div>\r\n                <div className=\"flex\">\r\n                    <AiOutlineLike onClick={()=>onUpdateMsgLikes(conversation)} className=\"pointer\"/>\r\n                    {conversation.likes.count>0&&conversation.likes.count}\r\n                </div>\r\n            </div>\r\n            <div className=\"btns-wrapper\">\r\n                <div className=\"btn-wrapper\">\r\n                    <div \r\n                    className={`like-btn ${ conversation.likes.users.includes(loggedInUser._id)? 'liked':''}`}\r\n                    onClick={()=>onUpdateMsgLikes(conversation)}\r\n                    >\r\n                        {\r\n                            conversation.likes.users.includes(loggedInUser._id)?\r\n                            <AiFillLike/>\r\n                            :\r\n                            <AiOutlineLike/>\r\n                        }\r\n                        <span>Like</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"btn-wrapper\">\r\n                    <div className='reply-btn' onClick={()=>setIsReplyActive(cur=>!cur)}>\r\n                        <RiReplyLine/>\r\n                        <span>Reply</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {(conversation.replys.length>0||isReplyActive)&&<div className={`reply-wrapper ${conversation.replys.length>0?'column-reverse':''}`}>\r\n                <div className={`add-reply-textarea ${(!replyTextareaFocus&&conversation.replys.length>0)?'reply-close-textarea':''}`}>\r\n                    <div className=\"user-img\" style={{backgroundImage:`url(${loggedInUser.avatar})`}}></div>\r\n                    <div className=\"reply-msg-wrapper\">\r\n                        <textarea \r\n                        name=\"\" \r\n                        id=\"\" \r\n                        cols=\"30\" \r\n                        rows={`${!replyTextareaFocus&&conversation.replys.length>0?'1':'4'}`}\r\n                        className={`reply-textarea ${!replyTextareaFocus&&conversation.replys.length>0?'reply-close-textarea':''}`}\r\n                        placeholder={`${!replyTextareaFocus&&conversation.replys.length>0?'Write a reply...':''}`}\r\n                        value={reply}\r\n                        onChange={(e)=>setReply(e.target.value)}\r\n                        onFocus={()=>setReplyTextareaFocus(true)}\r\n                        onBlur={()=>setReplyTextareaFocus(false)}\r\n                        ></textarea>\r\n                        {(replyTextareaFocus||conversation.replys.length<1)&&<div className=\"attachments-bar\">\r\n                            {attachmentBtns.map(btn=>\r\n                                <div className=\"attachment-btn\">\r\n                                    {btn.icon}\r\n                                    <span>{btn.name}</span>\r\n                                </div>\r\n                            )}\r\n                            <div className=\"add-msg-btn\"\r\n                            onMouseDown={()=>onReplyMsg(conversation)}\r\n                            >Reply</div>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"reply-msgs-list\">\r\n                    {\r\n                        conversation.replys.map(replyMsg=>\r\n                            <ReplyMsgPreview \r\n                            replyMsg={replyMsg}\r\n                            getUserById={getUserById}\r\n                            conversation={conversation}\r\n                            currTask={currTask}\r\n                            onEditTask={onEditTask}\r\n                            currTable={currTable}\r\n                            />\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function ConversationModal({\r\n    onEditTask,\r\n    isOpenConversationModal\r\n}) {\r\n\r\n    const users = useSelector(state => state.user.users)\r\n    const currBoard = useSelector(state => state.workspace.currBoard)\r\n    const conversationLocation = useSelector(state => state.workspace.conversationLocation)\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const [currTable, setCurrTable] = useState(null);\r\n    const [currTask, setCurrTask] = useState(null);\r\n    const [isActiveInput, setActiveInput] = useState(false);\r\n    const [msg, setMsg] = useState('');\r\n    const inuptRef = useRef()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(conversationLocation.tableId){\r\n            setCurrTable( currBoard.tables.filter(table=>\r\n                table._id===conversationLocation.tableId\r\n            )[0])\r\n        }\r\n    }, [conversationLocation.tableId,currBoard])\r\n\r\n    useEffect(() => {\r\n        if(conversationLocation.taskId&&currTable){\r\n            setCurrTask(\r\n                currTable.tasks.filter(task=>\r\n                    task._id===conversationLocation.taskId\r\n                )[0]\r\n            )\r\n        }\r\n    }, [conversationLocation.taskId,currTable])\r\n\r\n\r\n    useEffect(() => {\r\n        if(!isOpenConversationModal){\r\n            setMsg('')\r\n        }\r\n    }, [isOpenConversationModal])\r\n\r\n\r\n    function getUserById(userId){\r\n        const user =  users.filter(user=>\r\n        user._id===userId)[0]\r\n        return user\r\n    }\r\n\r\n\r\n    function onAddMsg(){\r\n        if(msg.trim().length<1)return\r\n        const newConversation={\r\n            _id:Date.now(),\r\n            userId:loggedInUser._id,\r\n            msg:msg,\r\n            files:[],\r\n            img:'',\r\n            likes:{\r\n                count:0,\r\n                users:[]\r\n            },\r\n            replys:[],\r\n            createdAt:new Date().getTime()\r\n        }\r\n        const updatedTask = {\r\n            ...currTask,\r\n            conversations: [...currTask.conversations, newConversation]\r\n        }\r\n        const desc = `added new conversation to task \"${updatedTask.name}\" inside \"${currTable.name}\"`\r\n        onEditTask(currTable,updatedTask,desc)\r\n        setMsg('')\r\n    }\r\n\r\n    function onUpdateMsgLikes(conversation) {;\r\n        if(conversation.likes.users.includes(loggedInUser._id)){\r\n            const updatedTask = {\r\n                ...currTask,\r\n                conversations: currTask.conversations.map((_conversation)=>\r\n                _conversation._id===conversation._id?\r\n                {\r\n                    ...conversation,\r\n                    likes:{\r\n                        count:conversation.likes.count-1,\r\n                        users:conversation.likes.users.filter(userId=>userId!==loggedInUser._id)\r\n                    }\r\n                }:_conversation)\r\n            }\r\n            const desc = `liked conversation \"${conversation.msg}\" inside task \"${currTask.name}\"`\r\n            onEditTask(currTable,updatedTask,desc)\r\n        }else{\r\n            const updatedTask = {\r\n                ...currTask,\r\n                conversations: currTask.conversations.map((_conversation)=>\r\n                _conversation._id===conversation._id?\r\n                {\r\n                    ...conversation,\r\n                    likes:{\r\n                        count:conversation.likes.count+1,\r\n                        users:[...conversation.likes.users,loggedInUser._id]\r\n                    }\r\n                }:_conversation)\r\n            }\r\n            const desc = `liked conversation \"${conversation.msg}\" inside task \"${currTask.name}\"`\r\n            onEditTask(currTable,updatedTask,desc)\r\n        }\r\n    }\r\n\r\n    const editorBtns=[\r\n        {\r\n            icon:<FaQuoteRight/>,\r\n            name:'Blockquote'\r\n        },\r\n        {\r\n            icon:<FaBold/>,\r\n            name:'Strong'\r\n        },\r\n        {\r\n            icon:<AiOutlineItalic/>,\r\n            name:'Emphasis <em></em>'\r\n        }, \r\n        {\r\n            icon:<MdFormatColorText/>,\r\n            name:'Text color'\r\n        },\r\n        {\r\n            icon:<AiOutlineBars/>,\r\n            name:'Bulleted List '\r\n        },\r\n        {\r\n            icon:<MdFormatListNumbered/>,\r\n            name:'Numbered List'\r\n        },\r\n        {\r\n            icon:<BsTextLeft/>,\r\n            name:'Text left'\r\n        },\r\n        {\r\n            icon:<BsTextRight/>,\r\n            name:'Text right'\r\n        }\r\n\r\n    ]\r\n\r\n    const attachmentBtns= [\r\n        {\r\n            icon:<TiAttachment/>,\r\n            name:'Add files'\r\n        },\r\n        {\r\n            icon:'',\r\n            name:'GIF'\r\n        },\r\n        {\r\n            icon:<BiSmile/>,\r\n            name:'Emoji'\r\n        },\r\n        {\r\n            icon:<GoMention/>,\r\n            name:'Mention'\r\n        }\r\n    ]\r\n    return (\r\n        <div className={`conversation-modal-content`}>\r\n          <div className='conversation-modal-title'>\r\n          {currTask&&currTask.name}\r\n          </div>\r\n          <div className='conversation-modal-updates'> \r\n              Updates {currTask&&currTask.conversations.length>0&&`/ ${currTask.conversations.length}`}\r\n          </div>\r\n          <div className=\"updates-section-content\">\r\n            {isActiveInput?\r\n                <input type=\"text\" placeholder='Write an update...' className=\"conversation-input\" onClick={()=>{\r\n                    setActiveInput(true)\r\n                    setTimeout(() => {\r\n                        if(inuptRef&&inuptRef.current){\r\n                            inuptRef.current.focus()\r\n                        }\r\n                    }, 0);\r\n                }}/>\r\n                :\r\n                <div className=\"new-msg-container\">\r\n                <div className=\"textarea-editor-wrapper\">\r\n                    {/* <TextareaEditor/> */}\r\n                    <div className=\"buttons-bar\">\r\n                        {editorBtns.map(btn=>\r\n                            <div className=\"editor-btn\">\r\n                            {btn.icon}\r\n                                <span className=\"label-text arrow-up text-editor-label\">{btn.name}</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" ref={inuptRef}\r\n                    onBlur={()=> setActiveInput(false)}\r\n                    value={msg}\r\n                    onChange={(ev)=>setMsg(ev.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"attachments-bar\">\r\n                        {attachmentBtns.map(btn=>\r\n                            <div className=\"attachment-btn\">\r\n                                {btn.icon}\r\n                                <span>{btn.name}</span>\r\n                            </div>\r\n                        )}\r\n                        <div className=\"add-msg-btn\"\r\n                        onClick={onAddMsg}\r\n                        >Update</div>\r\n                </div>\r\n                </div>\r\n            }\r\n            {\r\n                <div className='updates-list'>\r\n                    {\r\n                        currTask&&currTask.conversations.length>0?\r\n                            <>\r\n                            {currTask.conversations.map(conversation=>\r\n                                <ConversationPreview\r\n                                key={conversation._id}\r\n                                conversation={conversation}\r\n                                getUserById={getUserById}\r\n                                onUpdateMsgLikes={onUpdateMsgLikes}\r\n                                attachmentBtns={attachmentBtns}\r\n                                onEditTask={onEditTask}\r\n                                currTable={currTable}\r\n                                currTask={currTask}\r\n                                />\r\n                            )}\r\n                            </>\r\n                        :\r\n                            <span className='no-updates'>No updates yet...</span>\r\n                        }\r\n                </div>\r\n            }\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { AiOutlineClockCircle } from 'react-icons/ai'\r\nimport moment from 'moment'\r\n\r\nexport function ActivitiesModal() {\r\n\r\n    const currBoard = useSelector(state => state.workspace.currBoard);\r\n    const users = useSelector(state => state.user.users);\r\n\r\n    function getUser(userId) {\r\n        const user = users.filter(user=>user._id===userId)[0]\r\n        return user\r\n    }\r\n\r\n    function  getTime(date) {\r\n        const time = moment(date).fromNow()\r\n        switch (true) {\r\n            case time.includes('a few seconds ago'):\r\n                return 'now';\r\n            case time.includes('a minute ago'):\r\n                return time.replace('a minute ago', '1m');\r\n            case time.includes('minutes'):\r\n                return time.replace(' minutes ago', 'm');\r\n            case time.includes('an hour ago'):\r\n                return time.replace('an hour ago', '1h');\r\n            case time.includes('hours'):\r\n                return time.replace(' hours ago', 'h');\r\n            case time.includes('a day ago'):\r\n                return time.replace('a day ago', '1d');\r\n            case time.includes('days'):\r\n                return time.replace(' days ago', 'd');\r\n            case time.includes('a month ago'):\r\n                return time.replace('a month ago', '1M');\r\n            case time.includes('months'):\r\n                return time.replace(' months ago', 'M');\r\n            default:\r\n                return time;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"activities-container\">\r\n            <div className=\"title\"><span>{currBoard.name}</span> Log</div>\r\n        {\r\n            currBoard.activities.length>0?\r\n            <table className=\"activities-list\">\r\n            {currBoard.activities.map(activity=>\r\n                <tr className=\"activity-preview\">\r\n                    <td className=\"time\">\r\n                        <AiOutlineClockCircle/><span>{getTime(activity.createdAt)}</span>\r\n                    </td>\r\n                    <td>\r\n                        <div className=\"user background\" style={{backgroundImage:`url(${getUser(activity.userId).avatar})`}}></div>\r\n                    </td> \r\n                    <td className=\"desc\">\r\n                        <span className=\"username\">{getUser(activity.userId).username}</span> <span>{activity.desc}</span>\r\n                    </td>\r\n                </tr>\r\n            )}\r\n            </table>\r\n            :\r\n            <div>No activities</div>\r\n        }\r\n\r\n        </div>\r\n    )\r\n}","export const folderService = {\r\n    // query,\r\n    getById,\r\n    // remove,\r\n    // add,\r\n    update\r\n    \r\n}\r\n\r\nfunction getById(workspaces,folderId) {\r\n    const folder = workspaces.filter(workspace=>\r\n        workspace.folders.filter(folder=>\r\n            folder._id===folderId\r\n        )\r\n    )[0]\r\n    return folder\r\n}\r\n\r\nfunction update(newFolder,workspaces) {\r\n    workspaces.map(workspace=>\r\n        workspace.folders.map(folder=>\r\n            folder._id===newFolder._id?newFolder:folder\r\n        )\r\n    )\r\n    return workspaces\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardToolbar } from '../cmps/BoardToolbar'\r\nimport { BoardToolbarMenu } from '../cmps/BoardToolbarMenu'\r\nimport { BoardHeader } from '../cmps/BoardHeader'\r\nimport { BoardMain } from '../cmps/BoardMain'\r\nimport { BoardDetails } from '../cmps/BoardDetails'\r\n\r\nimport { ConversationModal } from '../cmps/ConversationModal'\r\nimport { ActivitiesModal } from '../cmps/ActivitiesModal'\r\nimport { NewWorkspaceBoardMain } from '../cmps/NewWorkspaceBoardMain'\r\nimport { loadWorkspaces, updateWorkspace,updateCurrWorkspace, addWorkspace,removeWorkspace} from '../store/actions/workspaceActions'\r\nimport { getCurrBoard, updateCurrBoard} from '../store/actions/workspaceActions'\r\nimport { updateUser} from '../store/actions/userActions'\r\nimport { boardService } from '../services/boardService'\r\nimport { folderService } from '../services/folderService'\r\nimport { \r\n    BsLightning, \r\n    BsStar, \r\n    BsThreeDots, \r\n    BsFillStarFill, \r\n    BsPeople, \r\n    BsFilter,\r\n    BsPlus\r\n} from 'react-icons/bs'\r\nimport { \r\n    IoIosArrowForward, \r\n    IoIosArrowBack, \r\n    IoIosArrowDown,\r\n    IoMdArrowDropdown,\r\n    IoMdNotifications\r\n} from 'react-icons/io'\r\n\r\nimport { HiOutlineSearch } from 'react-icons/hi'\r\nimport { SiProbot } from 'react-icons/si'\r\nimport { ImTable } from 'react-icons/im'\r\nimport { BiUserCircle } from 'react-icons/bi'\r\nimport { RiArrowUpDownFill } from 'react-icons/ri'\r\nimport { CgViewComfortable } from 'react-icons/cg'\r\nimport { HiPlusCircle } from 'react-icons/hi'\r\nimport { GrClose } from 'react-icons/gr'\r\nimport { workspaceService } from '../services/workspaceService'\r\nimport { socketService } from '../services/socketService'\r\n\r\nexport class _Workspace extends Component {\r\n    state={\r\n        isToolbarMenuClose:false,\r\n        workspace:null,\r\n        isFolderOpen:false,\r\n        board:null,\r\n        folder:null,\r\n        task:{},\r\n        isOpenConversationModal:false,\r\n        isOpenActivitiesModal:false,\r\n        isShowModal:false,\r\n        isNewFolderCreated:false,\r\n        isNewWorkspaceCreated:false,\r\n        toolbarActiveBtn:''\r\n    }\r\n    async componentDidMount() {\r\n        await this.props.loadWorkspaces()\r\n        this.editableName = React.createRef();\r\n        // const mainWorkspace = await this.props.workspaces.filter(workspace=>workspace.isMain===true)[0];\r\n        // this.setState({workspace:mainWorkspace})\r\n\r\n        await this.props.workspaces.map(workspace=>workspace.boards.map(board=>board.isLastSeen===true? this.setState({board},()=>{\r\n            this.props.history.push(`/boards/${board._id}`)\r\n            this.props.updateCurrBoard(board)\r\n            this.setState({workspace})\r\n            this.props.updateCurrWorkspace(workspace)\r\n        }):null))[0];\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    onEndNewFolderUpdating=()=>{\r\n        this.setState({ isNewFolderCreated:false})\r\n    }\r\n\r\n    onToggleToolbarMenu=()=>{\r\n        this.setState({isToolbarMenuClose:!this.state.isToolbarMenuClose})\r\n    }\r\n\r\n    onGettingCurrentWorkspace=(workspace)=>{\r\n        this.setState({workspace},()=>{\r\n            this.props.updateCurrWorkspace(workspace)\r\n            this.setState({isNewWorkspaceCreated:false})\r\n        })\r\n    }\r\n\r\n    isBoardInsideFolder = this.props.match.url.split('/').includes('folders')\r\n\r\n    // getCurrWorkspace = () =>{\r\n    //     const workspaceId = this.props.match.url.split('/')[2]\r\n    //     const currWorkspace = workspaceService.getById(workspaceId)\r\n    //     return currWorkspace\r\n    // }\r\n    getCurrFolder = () =>{\r\n       const isBoardInsideFolder = this.props.match.url.split('/').includes('folders')\r\n        if(!isBoardInsideFolder)return\r\n        const folderId = this.props.match.url.split('/')[4]\r\n        const currFolder = folderService.getById(this.props.workspaces,folderId)\r\n        return currFolder\r\n    }\r\n    getCurrBoard = () =>{\r\n        const isBoardInsideFolder = this.props.match.url.split('/').includes('folders')\r\n        if(isBoardInsideFolder){\r\n            const folderId = this.props.match.url.split('/')[4]\r\n            const currFolder = folderService.getById(this.props.workspaces,folderId)\r\n            const boardId = this.props.match.params.id\r\n            const currBoard = boardService.getById(this.props.workspaces,boardId,currFolder)\r\n            // return currBoard\r\n            if(currBoard){\r\n                this.setState({board:currBoard},()=>{\r\n                    this.props.history.push(`/boards/${currBoard._id}`)\r\n                })\r\n            }\r\n        }else{\r\n            // const boardId = this.props.match.url.split('/')[4]\r\n            const boardId = this.props.match.params.id\r\n            const folder=null\r\n            const currBoard = boardService.getById(this.props.workspaces,boardId,folder)\r\n            // return currBoard\r\n            if(currBoard){\r\n                this.setState({board:currBoard},()=>{\r\n                    this.props.history.push(`/boards/${currBoard._id}`)\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onToggleFolder=(folder)=>{\r\n        this.setState({isFolderOpen:!this.state.isFolderOpen})\r\n    } \r\n\r\n\r\n    onGettingCurrentBoard=async(board)=>{\r\n        this.setState({board},()=>{\r\n            this.props.history.push(`/boards/${board._id}`)\r\n        })\r\n        await this.props.updateCurrBoard(board)\r\n        this.setState({isNewWorkspaceCreated:false})\r\n    }\r\n   \r\n\r\n    onEditBoard=(updatedBoard,desc)=>{\r\n        let newBoard={}\r\n        let activitiesArray=[]\r\n\r\n        if(desc){\r\n            if( typeof desc!==\"string\" ){\r\n                desc.forEach(_desc => {\r\n                    activitiesArray.unshift({\r\n                        desc: _desc,\r\n                        userId: this.props.loggedInUser._id,\r\n                        createdAt: Date.now()\r\n                    })\r\n                })\r\n    \r\n                newBoard = {\r\n                    ...updatedBoard,\r\n                    activities:[...activitiesArray, ...updatedBoard.activities]\r\n                }\r\n    \r\n            }else{\r\n                newBoard = {\r\n                    ...updatedBoard,\r\n                    activities:[\r\n                        {\r\n                            desc: desc,\r\n                            userId: this.props.loggedInUser._id,\r\n                            createdAt: Date.now()\r\n                        },\r\n                        ...updatedBoard.activities]\r\n                }\r\n            }\r\n        }else{\r\n            newBoard = {\r\n                ...updatedBoard,\r\n            }\r\n        }\r\n        this.updateBoard(newBoard)\r\n    }\r\n\r\n    onAddNewTable=()=>{\r\n        const newBoard = boardService.addTable(this.state.board)\r\n        const desc = `added a new group`\r\n        const updatedBoard = {\r\n            ...newBoard,\r\n            activities:[\r\n                {\r\n                    desc: desc,\r\n                    userId: this.props.loggedInUser._id,\r\n                    createdAt: Date.now()\r\n                },\r\n                ...newBoard.activities]\r\n        }\r\n        this.updateBoard(updatedBoard)\r\n    }\r\n \r\n    onEditTable=(updatedTable,desc)=>{\r\n        const newBoard = boardService.updateTable(this.state.board,updatedTable)\r\n        const updatedBoard = {\r\n            ...newBoard,\r\n            activities:[\r\n                {\r\n                    desc: desc,\r\n                    userId: this.props.loggedInUser._id,\r\n                    createdAt: Date.now()\r\n                },\r\n                ...newBoard.activities]\r\n        }\r\n        this.updateBoard(updatedBoard)\r\n    }\r\n\r\n    removeTable=(tableId,boardName)=>{\r\n        const desc = `removed group \"${boardName}\" from \"${this.state.board.name}\"`\r\n        const newBoard = boardService.removeTable(tableId,this.state.board)\r\n        const updatedBoard = {\r\n            ...newBoard,\r\n            activities:[\r\n                {\r\n                    desc: desc,\r\n                    userId: this.props.loggedInUser._id,\r\n                    createdAt: Date.now()\r\n                },\r\n                ...newBoard.activities]\r\n        }\r\n        this.updateBoard(updatedBoard)\r\n    }\r\n\r\n    onAddNewTask=(currTable,newTaskName,desc)=>{\r\n        if(!newTaskName.split(' ').join(''))return\r\n        const newBoard = boardService.addTask(currTable,this.state.board,newTaskName,this.props.loggedInUser)\r\n        const updatedBoard = {\r\n            ...newBoard,\r\n            activities:[\r\n                {\r\n                    desc: desc,\r\n                    userId: this.props.loggedInUser._id,\r\n                    createdAt: Date.now()\r\n                },\r\n                ...newBoard.activities]\r\n        }\r\n        this.updateBoard(updatedBoard)\r\n    }\r\n\r\n    onEditTask=(currTable,currTask,desc)=>{\r\n        const newBoard = boardService.updateTask(currTable,this.state.board,currTask,this.props.loggedInUser)\r\n        const updatedBoard = {\r\n            ...newBoard,\r\n            activities:[\r\n                {\r\n                    desc: desc,\r\n                    userId: this.props.loggedInUser._id,\r\n                    createdAt: Date.now()\r\n                },\r\n                ...newBoard.activities]\r\n        }\r\n        this.updateBoard(updatedBoard)\r\n    }\r\n\r\n    onRemoveTask=(taskId,currTable)=>{\r\n        const newBoard = boardService.removeTask(taskId,currTable,this.state.board)\r\n        this.updateBoard(newBoard)\r\n    }\r\n\r\n    editBoard=(newBoard)=>{\r\n        this.updateBoard(newBoard)\r\n    }\r\n\r\n    updateBoard(newBoard){\r\n        this.setState({board:newBoard},()=>{\r\n            this.props.updateCurrBoard(newBoard)\r\n            let newWorkspace = this.state.workspace\r\n            // let isBoardInsideFolder = newWorkspace.folders.includes(folder=>\r\n            //  folder.boards.includes(board=>\r\n            //      board._id === newBoard._id\r\n            //  ))\r\n            let boardInsideFolder = {\r\n                isBoardInsideFolder:false,\r\n                cuurFolde:null\r\n            }\r\n            newWorkspace.folders.map(folder=>\r\n                folder.boards.map(board=>\r\n                    board._id === newBoard._id?boardInsideFolder={\r\n                        ...boardInsideFolder,\r\n                        isBoardInsideFolder:true,\r\n                        cuurFolde:folder\r\n                    }\r\n                    :null\r\n                    \r\n            ))\r\n            if(boardInsideFolder.isBoardInsideFolder){\r\n                //board insode folder\r\n                newWorkspace ={\r\n                    ...this.state.workspace, \r\n                    folders: this.state.workspace.folders.map(folder=>\r\n                        folder._id===boardInsideFolder.cuurFolde._id?\r\n                       {...folder, boards:\r\n                        folder.boards.map(board=>\r\n                            board._id === newBoard._id?\r\n                            newBoard:board\r\n                        )}\r\n                        :folder\r\n                    )\r\n                }\r\n            }else{\r\n                //board insode workspace\r\n                 //replace the currBoard whith the new Board\r\n                 newWorkspace.boards = newWorkspace.boards.map(board=>\r\n                    board._id === newBoard._id?newBoard:board\r\n                )\r\n            }\r\n     \r\n            // send to update updateWorkspace\r\n            this.props.updateCurrWorkspace(newWorkspace)\r\n            this.setState({workspace:newWorkspace},()=>{\r\n                this.props.updateWorkspace(newWorkspace)\r\n            })\r\n        })\r\n    }\r\n//move folder to another workspace\r\n    moveFolder=(newWorkspace,cuurFolder)=>{\r\n        this.removeFolder(cuurFolder._id)\r\n        const newWorkspaceToUpdate={\r\n            ...newWorkspace,\r\n            folders:[...newWorkspace.folders, cuurFolder]\r\n        }\r\n        this.props.updateWorkspace(newWorkspaceToUpdate)\r\n    }\r\n//move board to another workspace or move board in folder to the workspace\r\n    moveBoard=(newWorkspace,cuurBoard)=>{\r\n        if(this.state.workspace._id===newWorkspace._id){\r\n            const updatedWorkspace = boardService.removeBoard(this.state.workspace, cuurBoard._id)\r\n            const newWorkspaceToUpdate={\r\n                ...updatedWorkspace,\r\n                boards:[...updatedWorkspace.boards, cuurBoard]\r\n            }\r\n            this.setState({workspace:newWorkspaceToUpdate},()=>{\r\n                this.props.updateCurrWorkspace(newWorkspaceToUpdate)\r\n            })\r\n            this.props.updateWorkspace(newWorkspaceToUpdate)\r\n        }else{\r\n            this.removeBoard(cuurBoard._id)\r\n            const newWorkspaceToUpdate={\r\n                ...newWorkspace,\r\n                boards:[...newWorkspace.boards, cuurBoard]\r\n            }\r\n            this.props.updateWorkspace(newWorkspaceToUpdate)\r\n        }\r\n    }\r\n//move board to another folder\r\n    moveBoardToFolder=(folderWorkspace,newFolder,cuurBoard)=>{\r\n        const updatedWorkspace = boardService.removeBoard(this.state.workspace, cuurBoard._id)\r\n        this.setState({workspace:updatedWorkspace},()=>{\r\n            this.props.updateWorkspace(updatedWorkspace)\r\n            this.props.updateCurrWorkspace(updatedWorkspace)\r\n        })\r\n        const newFolderToUpdate={\r\n            ...newFolder,\r\n            boards:[...newFolder.boards, cuurBoard]\r\n        }\r\n        if(updatedWorkspace._id===folderWorkspace._id){\r\n            const newWorkspace = boardService.updateFolder(updatedWorkspace, newFolderToUpdate)\r\n            if( newWorkspace._id===this.state.workspace._id){\r\n                this.setState({workspace:newWorkspace},()=>{\r\n                    this.props.updateCurrWorkspace(newWorkspace)\r\n                })\r\n            }\r\n            this.props.updateWorkspace(newWorkspace)\r\n        }else{\r\n            const newWorkspace = boardService.updateFolder(folderWorkspace, newFolderToUpdate)\r\n            if( newWorkspace._id===this.state.workspace._id){\r\n                this.setState({workspace:newWorkspace},()=>{\r\n                    this.props.updateCurrWorkspace(newWorkspace)\r\n                })\r\n            }\r\n            this.props.updateWorkspace(newWorkspace)\r\n        }\r\n    }  \r\n    \r\n\r\n    removeBoard=(boardId)=>{\r\n        const newWorkspace = boardService.removeBoard(this.state.workspace, boardId)\r\n        this.setState({workspace:newWorkspace},()=>{\r\n            this.props.updateWorkspace(newWorkspace)\r\n            this.props.updateCurrWorkspace(newWorkspace)\r\n        })\r\n    }\r\n\r\n    addNewBoard=(boardName)=>{\r\n        const newWorkspace = boardService.addBoard(this.state.workspace,boardName)\r\n        this.setState({workspace:newWorkspace},()=>{\r\n            this.props.updateWorkspace(newWorkspace)\r\n            this.props.updateCurrWorkspace(newWorkspace)\r\n        })\r\n    }\r\n\r\n    addNewWorkspace=(workspaceName,workspaceColor,workspaceIcon)=>{\r\n        \r\n        const newWorkspace =   {\r\n            name:workspaceName,\r\n            isMain : false,\r\n            desc : \"description about the workspace\",\r\n            img : workspaceIcon,\r\n            color : workspaceColor,\r\n            owner:this.state.loggedInUser,//added in backend\r\n            folders : [],\r\n            boards : []\r\n            }   \r\n        const x = this.props.addWorkspace(newWorkspace)\r\n        x.then(workspace=> \r\n            this.setState({workspace:workspace},()=>{\r\n                this.setState({isNewWorkspaceCreated:true})\r\n                const newUser= {\r\n                    ...this.props.loggedInUser,\r\n                    pinnedWorkspaces:[\r\n                        ...this.props.loggedInUser.pinnedWorkspaces,\r\n                        workspace._id\r\n                    ]\r\n                }\r\n                this.props.updateUser(newUser)\r\n            })\r\n        )\r\n    }\r\n\r\n    updateWorkspace=(newWorkspace)=>{\r\n        this.props.updateWorkspace(newWorkspace)\r\n        this.setState({workspace:newWorkspace},()=>{\r\n            this.props.updateCurrWorkspace(newWorkspace)\r\n        })\r\n    }  \r\n     \r\n    deleteWorkspace=(workspaceId)=>{\r\n        this.props.removeWorkspace(workspaceId)\r\n        this.props.workspaces.map(workspace=>\r\n            workspace.boards.map(board=>\r\n                board.isLastSeen===true? \r\n                    this.setState({workspace},()=>{\r\n                        this.props.updateCurrWorkspace(workspace)\r\n                    })\r\n                    :null\r\n            )   \r\n        )\r\n    }\r\n\r\n    addBoardInFolder=(currFolder,boardName)=>{\r\n        const newWorkspace = boardService.addBoardInFolder(this.state.workspace,currFolder,boardName)\r\n        this.setState({workspace:newWorkspace},()=>{\r\n            this.props.updateWorkspace(newWorkspace)\r\n            this.props.updateCurrWorkspace(newWorkspace)\r\n        })\r\n    }\r\n    addNewFloder=()=>{\r\n        const newWorkspace = boardService.addFolder(this.state.workspace)\r\n        this.setState({workspace:newWorkspace},()=>{\r\n            this.props.updateWorkspace(newWorkspace)\r\n            this.props.updateCurrWorkspace(newWorkspace)\r\n            this.setState({isNewFolderCreated:true})\r\n        })\r\n    }\r\n    \r\n    removeFolder=(folderId)=>{\r\n        const newWorkspace = boardService.removeFolder(this.state.workspace, folderId)\r\n        this.setState({workspace:newWorkspace},()=>{\r\n            this.props.updateWorkspace(newWorkspace)\r\n            this.props.updateCurrWorkspace(newWorkspace)\r\n        })\r\n    }\r\n    updateFolder=(newFolder)=>{\r\n        const newWorkspace = boardService.updateFolder(this.state.workspace, newFolder)\r\n        this.setState({workspace:newWorkspace},()=>{\r\n            this.props.updateWorkspace(newWorkspace)\r\n            this.props.updateCurrWorkspace(newWorkspace)\r\n\r\n        })\r\n    }\r\n\r\n    openConversationModal=()=>{\r\n        this.setState({isShowModal:true})\r\n        this.setState({isOpenConversationModal:true})\r\n    }    \r\n    openActivitiesModal=()=>{\r\n        this.setState({isShowModal:true})\r\n        this.setState({isOpenActivitiesModal:true})\r\n    }\r\n\r\n    onManageWorkspace=()=>{\r\n        this.setState({isNewWorkspaceCreated:true})\r\n    }\r\n    onSetToolbarMenu=(val)=>{\r\n         this.setState({toolbarActiveBtn:val})\r\n    }\r\n\r\n    render() {\r\n        const { workspaces } = this.props\r\n        const { workspace,board ,isNewWorkspaceCreated} = this.state\r\n        if (!workspaces||!board||!workspace) return <div>Loading....</div>\r\n        return (\r\n            <div className=\"board-page-container\">\r\n                <BoardToolbar \r\n                    BsLightning={BsLightning} \r\n                    BsStar={BsStar} \r\n                    BsThreeDots={BsThreeDots}\r\n                    // workspaces={workspaces}\r\n                    onGettingCurrentWorkspace={this.onGettingCurrentWorkspace}\r\n                    addNewWorkspace={this.addNewWorkspace}\r\n                    onSetToolbarMenu={this.onSetToolbarMenu}\r\n                />\r\n                <BoardToolbarMenu \r\n                    isToolbarMenuClose={this.state.isToolbarMenuClose} \r\n                    onToggleToolbarMenu={this.onToggleToolbarMenu}\r\n                    IoIosArrowForward={IoIosArrowForward}\r\n                    IoIosArrowBack={IoIosArrowBack}\r\n                    workspace={workspace}\r\n                    onToggleFolder={this.onToggleFolder}\r\n                    isFolderOpen={this.state.isFolderOpen}\r\n                    IoMdArrowDropdown={IoMdArrowDropdown}\r\n                    CgViewComfortable={CgViewComfortable}\r\n                    onGettingCurrentBoard={this.onGettingCurrentBoard}\r\n                    onGettingCurrentBoardInWorkspace={this.onGettingCurrentBoardInWorkspace}\r\n                    addNewBoard={this.addNewBoard}\r\n                    addNewFloder={this.addNewFloder}\r\n                    addBoardInFolder={this.addBoardInFolder}\r\n                    removeFolder={this.removeFolder}\r\n                    updateFolder={this.updateFolder}\r\n                    removeBoard={this.removeBoard}\r\n                    editBoard={this.editBoard}\r\n                    moveFolder={this.moveFolder}\r\n                    moveBoard={this.moveBoard}\r\n                    moveBoardToFolder={this.moveBoardToFolder}\r\n                    isNewFolderCreated={this.state.isNewFolderCreated}\r\n                    onEndNewFolderUpdating={this.onEndNewFolderUpdating}\r\n                    updateWorkspace={this.updateWorkspace}\r\n                    deleteWorkspace={this.deleteWorkspace}\r\n                    onGettingCurrentWorkspace={this.onGettingCurrentWorkspace}\r\n                    onManageWorkspace={this.onManageWorkspace}\r\n                    toolbarActiveBtn={this.state.toolbarActiveBtn}\r\n                    onEditBoard={this.onEditBoard}\r\n                />\r\n                <BoardDetails\r\n                   isNewWorkspaceCreated={isNewWorkspaceCreated}\r\n                   onAddNewTable={this.onAddNewTable}\r\n                   onEditBoard={this.onEditBoard}\r\n                   getTaskValue={this.getTaskValue}\r\n                   removeTable={this.removeTable}\r\n                   onAddNewTask={this.onAddNewTask}\r\n                   onEditTask={this.onEditTask}\r\n                   onEditTable={this.onEditTable}\r\n                   onRemoveTask={this.onRemoveTask}\r\n                   openConversationModal={this.openConversationModal}\r\n                   updateWorkspace={this.updateWorkspace}\r\n                   deleteWorkspace={this.deleteWorkspace}\r\n                   openActivitiesModal={this.openActivitiesModal}\r\n                   updateBoard={this.updateBoard}\r\n                />\r\n                { \r\n                <div className={`conversation-modal-wrapper ${this.state.isShowModal?'':'hide'}`}>\r\n                    <div className={`conversation-modal ${this.state.isShowModal?' slide-left':'slide-right'}`}\r\n                    // tabIndex='0' \r\n                    // onBlur={()=>{\r\n                    // this.setState({isOpenConversationModal:false})}}\r\n                    >\r\n                        <GrClose className='conversation-close-btn' onClick={()=>{\r\n                        this.setState({isShowModal:false},()=>{\r\n                            this.setState({isOpenConversationModal:false})\r\n                            this.setState({isOpenActivitiesModal:false})\r\n                        })\r\n                        }}\r\n                        />\r\n                        {this.state.isOpenActivitiesModal&&<ActivitiesModal/>}\r\n                        {this.state.isOpenConversationModal&&<ConversationModal \r\n                        isOpenConversationModal={this.state.isOpenConversationModal}\r\n                        onEditTask={this.onEditTask}\r\n                        />}\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        workspaces: state.workspace.workspaces,\r\n        workspace: state.workspace.currWorkspace,\r\n        board: state.workspace.currBoard,\r\n        loggedInUser: state.user.loggedInUser,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadWorkspaces,\r\n    updateWorkspace,\r\n    updateCurrWorkspace,\r\n    getCurrBoard,\r\n    updateCurrBoard,\r\n    addWorkspace,\r\n    removeWorkspace,\r\n    updateUser\r\n}\r\nexport const Workspace = connect(mapStateToProps, mapDispatchToProps)(_Workspace)","export const cloudinaryService = {\n    uploadImg\n}\n\nasync function uploadImg(ev) {\n    const CLOUD_NAME = \"dzvebcsrp\"\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n\n    const formData = new FormData();\n    formData.append('file', ev.target.files[0])\n    formData.append('upload_preset', 'mister_toy');\n    try {\n        const res = await fetch(UPLOAD_URL, {\n            method: 'POST',\n            body: formData\n        })\n        const data = await res.json()\n        // console.log(data.secure_url);\n        return data\n\n    } catch (err) {\n        console.log(err);\n    }\n}\n","import React, { useEffect,useState } from 'react';\r\nimport { cloudinaryService } from '../services/cloudinarySerivice';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUser} from '../store/actions/userActions'\r\nimport { ImUserPlus } from \"react-icons/im\";\r\n\r\nexport function UploadImg({itemName}){\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const [img, setImg] = useState(itemName==='logo'?\r\n    'https://res.cloudinary.com/dzvebcsrp/image/upload/v1616327732/logo_xw7dyu.ico':loggedInUser.avatar\r\n    )\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n       if(itemName==='logo'&&loggedInUser&&loggedInUser.logoImg){\r\n        setImg(loggedInUser.logoImg)\r\n       }\r\n       if(itemName==='user'&&loggedInUser&&loggedInUser.avatar){\r\n        setImg(loggedInUser.avatar)\r\n       }\r\n    }, [loggedInUser,itemName])\r\n\r\n\r\n\r\n    const onUploadImg = async (ev) => {//make costume hook!!!!!!\r\n        ev.preventDefault()\r\n        const cloudImg = await cloudinaryService.uploadImg(ev)\r\n        const imgUrl = cloudImg.secure_url\r\n        if(imgUrl){\r\n            setImg(imgUrl)\r\n           if( itemName==='logo'){\r\n                const newUser= {\r\n                    ...loggedInUser,\r\n                    logoImg:imgUrl\r\n                }\r\n                dispatch(updateUser(newUser))\r\n           }\r\n           if( itemName==='user'){\r\n                const newUser= {\r\n                    ...loggedInUser,\r\n                    avatar:imgUrl\r\n                }\r\n                dispatch(updateUser(newUser))\r\n            }\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <form>\r\n            <label>\r\n                <input onChange={onUploadImg} type=\"file\"/>\r\n                <div style={{backgroundImage: `url(${img})`}}>\r\n                    {itemName==='user'&&<div className=\"before\">\r\n                            <ImUserPlus className='update-img-icon'/>\r\n                            <div className=\"text\">Change profile picture</div>\r\n                    </div>}\r\n                </div>\r\n            </label>\r\n        </form>\r\n    )\r\n}","import { Home } from './pages/Home.jsx'\r\nimport { About } from './pages/About.jsx'\r\nimport { Workspace } from './pages/Workspace.jsx'\r\nimport { UserDetails } from './pages/UserDetails.jsx'\r\n\r\nexport const routes=[\r\n  {\r\n    path: '/',\r\n    component: Home,\r\n  },\r\n  {\r\n    path: '/about',\r\n    component: About,\r\n  },\r\n  {\r\n    path: '/boards',\r\n    component: Workspace,\r\n  },\r\n  {\r\n    path: '/boards/:id',\r\n    component: Workspace,\r\n  },\r\n  {\r\n    path: '/users/:id',\r\n    component: UserDetails,\r\n  }\r\n]\r\n","import React, { useEffect,useState,useRef } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUser} from '../store/actions/userActions'\r\nimport { UploadImg } from '../cmps/UploadImg'\r\nimport { BsPencil } from 'react-icons/bs'\r\nimport { RiUser3Fill, RiPhoneFill } from 'react-icons/ri'\r\nimport { HiOutlineMail } from 'react-icons/hi'\r\nimport { AiFillSkype,AiFillGift } from 'react-icons/ai'\r\nimport { IoLocationOutline } from 'react-icons/io5'\r\nimport { BiTime } from 'react-icons/bi'\r\nimport { BiCalendarStar } from 'react-icons/bi'\r\n\r\nexport function UserDetails(){\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const [name, setName] = useState(loggedInUser.username)\r\n    const [isUpdate, setUpdate] = useState(false)\r\n    const dispatch = useDispatch();\r\n    const inputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        setName(loggedInUser.username)\r\n    }, [loggedInUser])\r\n\r\n    const onUpdating=()=>{\r\n        if(loggedInUser.username===name)return\r\n        const newUser= {\r\n            ...loggedInUser,\r\n            username:name\r\n        }\r\n        dispatch(updateUser(newUser))\r\n    }\r\n\r\n    const headerTitles = [\r\n        'Personal Info',\r\n        'Working Status',\r\n        'Password',\r\n        'Preferences',\r\n        'Notifications',\r\n        'Email Integration',\r\n        'Sessions'\r\n    ]\r\n\r\n    const icons = [\r\n        <RiUser3Fill className=\"icon\"/>,\r\n        <HiOutlineMail className=\"icon\"/>,\r\n        <RiPhoneFill className=\"icon\"/>,\r\n        <AiFillSkype className=\"icon\"/>,\r\n        <IoLocationOutline className=\"icon\"/>,\r\n        <BiTime className=\"icon\"/>,\r\n        <AiFillGift className=\"icon\"/>,\r\n        <BiCalendarStar className=\"icon\"/>,\r\n    ]\r\n\r\n    const titles=[\r\n        'Title',\r\n        'Email',\r\n        'Phone',\r\n        'Skype',\r\n        'Location',\r\n        'Timezone',\r\n        'Birthday',\r\n        'Work Anniversary',\r\n    ]\r\n\r\n    const userDetails=[\r\n        'Professional Engineer of something',\r\n        `${loggedInUser.email}`,\r\n        'Add a phone number',\r\n        'Add a Skype number',\r\n        'Dallas, TX',\r\n        'Jerusalem',\r\n        'Every day 🎉',\r\n        'Add a work anniversary'\r\n    ]\r\n\r\n   \r\n    return (\r\n        <div className=\"user-details\">\r\n            <div className=\"details-header\">\r\n                <div className=\"upload-img-wrapper\">\r\n                    <UploadImg itemName='user'/>\r\n                </div>\r\n                <div className=\"updating-user-name-wrapper\">\r\n                {!isUpdate?\r\n                    <div className=\"user-name\" onClick={()=>{\r\n                        setUpdate(true)\r\n                        setTimeout(() => {\r\n                            if(inputRef&&inputRef.current){\r\n                                inputRef.current.focus()\r\n                            }\r\n                        }, 0);\r\n                    }}>\r\n                        <div>{name}</div>\r\n                        <BsPencil className=\"BsPencil\"/>\r\n                        <span className=\"label-text edit-name\">Edit name</span>\r\n                    </div>\r\n                    :\r\n                    <input \r\n                    className=\"update-name\"\r\n                    ref={inputRef} \r\n                    type=\"text\" \r\n                    value={name} \r\n                    onChange={(e)=>setName(e.target.value)}\r\n                    onBlur={()=>\r\n                        {\r\n                            onUpdating()\r\n                            setUpdate(false)\r\n                        }\r\n                    }\r\n                    onKeyDown={(ev) => {\r\n                        if (ev.key === 'Enter') {\r\n                            ev.target.blur()\r\n                        }\r\n                    }}\r\n                    />\r\n                }\r\n                </div>\r\n                <div className=\"header-navigation\">\r\n                    {headerTitles.map(title=>\r\n                        <div className=\"title\">{title}</div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"details-main\">\r\n                <div className=\"details-main-content-wrapper\">\r\n                    <div className='title'>Overview</div>\r\n                    {titles.map((title,idx)=>\r\n                    <div className=\"overview-row-container\">\r\n                        <div className=\"icon-wrapper\">{icons[idx]}</div>\r\n                        <div className=\"user-info-wrapper\">\r\n                                <div>{title}:</div>\r\n                                <div>{userDetails[idx]}</div>\r\n                        </div>\r\n                    </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState } from 'react';\r\nimport { IoMdNotificationsOutline, IoIosSearch } from 'react-icons/io'\r\nimport { BsGrid } from 'react-icons/bs'\r\nimport { AiOutlineUserAdd } from 'react-icons/ai'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from '../store/actions/userActions'\r\nimport { FiLogOut } from \"react-icons/fi\";\r\nimport { FaRegUser } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { UploadImg } from \"./UploadImg\"\r\n\r\n\r\nexport function Navbar(){\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const [activeBtn, setActiveBtn] = useState(null)\r\n    const loggedInUser = useSelector(state => state.user.loggedInUser);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const _logout=()=>{\r\n        dispatch(logout())\r\n        window.location.assign('/')\r\n    }\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if(window.location.hash.includes('boards')){\r\n                setActiveBtn('workspaces')\r\n            }\r\n        }, 0);\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"navbar-section\">\r\n            <div className=\"navbar-first-area\">\r\n           \r\n            {/* <input onChange={onUploadImg} type=\"file\"/> */}\r\n            \r\n   \r\n                <div className=\"logo upload-img-wrapper\">\r\n                    <UploadImg itemName='logo'/>\r\n                </div>\r\n                <Link to={`/boards`} >\r\n                    <div \r\n                    className={`icon-wrapper ${activeBtn==='workspaces'?'selected':''}`}\r\n                    onClick={()=>{setActiveBtn('workspaces')}} \r\n                    >\r\n                        <BsGrid className='navbar-icon'/>\r\n                        <span className=\"label-text\">Wrokspaces</span>\r\n                    </div>\r\n                </Link>\r\n                <div \r\n                className={`icon-wrapper ${activeBtn==='notifications'?'selected':''}`}\r\n                onClick={()=>{setActiveBtn('notifications')}} \r\n                >\r\n                    <IoMdNotificationsOutline className={`navbar-icon`}/>\r\n                    <span className=\"label-text\">Notifications</span>\r\n                </div>\r\n                <div \r\n                className={`icon-wrapper ${activeBtn==='downloads'?'selected':''}`} \r\n                onClick={()=>{setActiveBtn('downloads')}} \r\n                >\r\n                    <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clipPath=\"url(#a)\"><path d=\"M11.443 6.365L8.071 9.739m0 0L4.699 6.366M8.07 9.738V.667\" stroke=\"rgb(233, 233, 233)\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path><path d=\"M4.95 11.333l.554-.23a.6.6 0 0 0-.554-.37v.6zm6.1 0v-.6a.6.6 0 0 0-.554.37l.554.23zm-6.1-.6H1.199v1.2h3.75v-1.2zm-3.751 0a1.13 1.13 0 0 0-1.132 1.133h1.2a.07.07 0 0 1-.068.067v-1.2zM.067 11.866v3.145h1.2v-3.145h-1.2zm0 3.145a1.13 1.13 0 0 0 1.132 1.132v-1.2a.07.07 0 0 1 .068.068h-1.2zm1.132 1.132H14.8v-1.2H1.199v1.2zm13.602 0a1.13 1.13 0 0 0 1.132-1.132h-1.2a.07.07 0 0 1 .068-.068v1.2zm1.132-1.132v-3.145h-1.2v3.145h1.2zm0-3.145a1.13 1.13 0 0 0-1.132-1.133v1.2a.07.07 0 0 1-.068-.067h1.2zm-1.132-1.133H11.05v1.2H14.8v-1.2zm-4.305.37c-.408.98-1.349 1.63-2.496 1.63v1.2c1.627 0 3.008-.938 3.604-2.369l-1.108-.461zM8 12.733c-1.147 0-2.089-.65-2.496-1.63l-1.108.461c.596 1.431 1.976 2.37 3.604 2.37v-1.2z\" fill=\"rgb(233, 233, 233)\"></path></g><defs><clipPath id=\"a\"><path fill=\"#fff\" d=\"M0 0h16v16H0z\"></path></clipPath></defs></svg>\r\n                    <span className=\"label-text\">text text text</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"navbar-second-area\">\r\n                <div \r\n                className={`icon-wrapper ${activeBtn==='my week'?'selected':''}`} \r\n                onClick={()=>{setActiveBtn('my week')}} \r\n                >\r\n                    <svg width=\"22\" height=\"22\" viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M177.23 32.224V7.16a7.16 7.16 0 0 1 14.322 0v25.063h41.175c12.849 0 23.273 10.424 23.273 23.273v80.559a7.16 7.16 0 0 1-14.322 0V94.88H14.322v137.846c0 4.94 4.012 8.951 8.95 8.951h96.672a7.16 7.16 0 0 1 0 14.322H23.273C10.424 256 0 245.576 0 232.727V55.497c0-12.85 10.424-23.273 23.273-23.273h41.175V7.16a7.16 7.16 0 0 1 14.321 0v25.063h98.462zm64.448 48.335V55.497c0-4.94-4.012-8.952-8.95-8.952H23.272c-4.94 0-8.951 4.013-8.951 8.952v25.062h227.356zm2.098 98.77a7.16 7.16 0 0 1 10.127 10.126l-64.448 64.448a7.16 7.16 0 0 1-10.127 0l-32.224-32.224a7.16 7.16 0 0 1 10.127-10.127l27.16 27.16 59.385-59.384z\" fill=\"rgb(233, 233, 233)\" fillRule=\"nonzero\"></path></svg>\r\n                    <span className=\"label-text\">My Week</span>\r\n                </div>\r\n                <div \r\n                className={`icon-wrapper ${activeBtn==='add user'?'selected':''}`}\r\n                onClick={()=>{setActiveBtn('add user')}} \r\n                >\r\n                    <AiOutlineUserAdd className={`navbar-icon`} />\r\n                    <span className=\"label-text\">text text text</span>\r\n                </div>\r\n                <div \r\n                className={`icon-wrapper ${activeBtn==='search'?'selected':''}`}\r\n                onClick={()=>{setActiveBtn('search')}} \r\n                >\r\n                    <IoIosSearch className={`navbar-icon`}/>\r\n                    <span className=\"label-text\">text text text</span>\r\n                </div>\r\n                <div \r\n                className={`icon-wrapper ${activeBtn==='help'?'selected':''}`}\r\n                onClick={()=>{setActiveBtn('help')}} \r\n                >\r\n                    <svg stroke=\"rgb(233, 233, 233)\" width=\"22\" height=\"22\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" className=\"icon\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"rgb(233, 233, 233)\" strokeWidth=\"2\" d=\"M12,23 C12.5522847,23 13,22.5522847 13,22 C13,21.4477153 12.5522847,21 12,21 C11.4477153,21 11,21.4477153 11,22 C11,22.5522847 11.4477153,23 12,23 Z M12,18 L12,15 C12,13 13,13 15,12 C17,11 18,9.15767339 18,7 C18,3.6862915 15.3137085,1 12,1 C8.6862915,1 6,3.6862915 6,7\"></path></svg>\r\n                    <span className=\"label-text\">text text text</span>\r\n                </div>\r\n                <div className=\"avatar-image-wrapper\" \r\n                    tabIndex='0' onBlur={()=>{setIsOpenModal(false)}}\r\n                >\r\n                    <div \r\n                    className=\"avatar-image-border\" \r\n                    onClick={()=>{setIsOpenModal(curr=>!curr)}}\r\n                    >\r\n                        {/* <AiOutlineUser className=\"AiOutlineUser\" style={{ width: '34px', height: '34px' }}/> */}\r\n                        {loggedInUser&&<div className=\"user-avatar\" style={{backgroundImage: `url(${loggedInUser.avatar})`}}></div> }\r\n\r\n                    </div>\r\n                    {isOpenModal&&<div className='modal-default-style user-modal-wrapper'>\r\n                            <div className='modal-btn' onClick={()=>\r\n                                {\r\n                                    history.push(`/users/${loggedInUser._id}`)\r\n                                    setActiveBtn(null)\r\n                                    setIsOpenModal(false)\r\n                                }}\r\n                            >\r\n                                <FaRegUser/>\r\n                                <span>Update Profile</span>\r\n                            </div>\r\n                            <div className='modal-btn' onClick={_logout}>\r\n                                <FiLogOut/>\r\n                                <span>Logout</span>\r\n                            </div>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect,useState,useRef } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport {routes} from './routes.js'\nimport { Navbar } from './cmps/Navbar'\nimport { useSelector } from \"react-redux\";\nimport { socketService } from './services/socketService'\n\nexport function App() {\n  const loggedInUser = useSelector(state => state.user.loggedInUser);\n\n  return (\n    <div className=\"App\">\n      {loggedInUser&&<Navbar/>}\n      <Switch>\n        { routes.map(route => <Route key={ route.path } exact component={ route.component } path={ route.path } />) }\n      </Switch>\n    </div>\n  )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { store } from './store/store'\nimport { App } from './App.jsx'\nimport './styles/global.scss'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}