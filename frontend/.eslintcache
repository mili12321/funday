[{"D:\\git-projects\\funday\\frontend\\src\\index.js":"1","D:\\git-projects\\funday\\frontend\\src\\App.jsx":"2","D:\\git-projects\\funday\\frontend\\src\\reportWebVitals.js":"3","D:\\git-projects\\funday\\frontend\\src\\store\\store.js":"4","D:\\git-projects\\funday\\frontend\\src\\routes.js":"5","D:\\git-projects\\funday\\frontend\\src\\store\\reducers\\index.js":"6","D:\\git-projects\\funday\\frontend\\src\\pages\\Home.jsx":"7","D:\\git-projects\\funday\\frontend\\src\\pages\\Workspace.jsx":"8","D:\\git-projects\\funday\\frontend\\src\\pages\\About.jsx":"9","D:\\git-projects\\funday\\frontend\\src\\pages\\UserDetails.jsx":"10","D:\\git-projects\\funday\\frontend\\src\\cmps\\Navbar.jsx":"11","D:\\git-projects\\funday\\frontend\\src\\store\\reducers\\userReducer.js":"12","D:\\git-projects\\funday\\frontend\\src\\store\\reducers\\systemReducer.js":"13","D:\\git-projects\\funday\\frontend\\src\\store\\reducers\\workspaceReducer.js":"14","D:\\git-projects\\funday\\frontend\\src\\store\\reducers\\boardReducer.js":"15","D:\\git-projects\\funday\\frontend\\src\\store\\actions\\workspaceActions.js":"16","D:\\git-projects\\funday\\frontend\\src\\services\\folderService.js":"17","D:\\git-projects\\funday\\frontend\\src\\store\\actions\\userActions.js":"18","D:\\git-projects\\funday\\frontend\\src\\services\\boardService.js":"19","D:\\git-projects\\funday\\frontend\\src\\services\\workspaceService.js":"20","D:\\git-projects\\funday\\frontend\\src\\cmps\\BoardToolbarMenu.jsx":"21","D:\\git-projects\\funday\\frontend\\src\\cmps\\LoginModal.jsx":"22","D:\\git-projects\\funday\\frontend\\src\\cmps\\BoardToolbar.jsx":"23","D:\\git-projects\\funday\\frontend\\src\\cmps\\BoardMain.jsx":"24","D:\\git-projects\\funday\\frontend\\src\\cmps\\BoardHeader.jsx":"25","D:\\git-projects\\funday\\frontend\\src\\cmps\\BoardDetails.jsx":"26","D:\\git-projects\\funday\\frontend\\src\\cmps\\ConversationModal.jsx":"27","D:\\git-projects\\funday\\frontend\\src\\cmps\\NewWorkspaceBoardMain.jsx":"28","D:\\git-projects\\funday\\frontend\\src\\cmps\\UploadImg.jsx":"29","D:\\git-projects\\funday\\frontend\\src\\store\\actions\\systemActions.js":"30","D:\\git-projects\\funday\\frontend\\src\\services\\userService.js":"31","D:\\git-projects\\funday\\frontend\\src\\services\\httpService.js":"32","D:\\git-projects\\funday\\frontend\\src\\services\\cloudinarySerivice.js":"33","D:\\git-projects\\funday\\frontend\\src\\cmps\\FolderList.jsx":"34","D:\\git-projects\\funday\\frontend\\src\\cmps\\BoardList.jsx":"35","D:\\git-projects\\funday\\frontend\\src\\cmps\\ToolbarMenuActionsBtn.jsx":"36","D:\\git-projects\\funday\\frontend\\src\\cmps\\UpdateWorkspace.jsx":"37","D:\\git-projects\\funday\\frontend\\src\\pages\\Login.jsx":"38","D:\\git-projects\\funday\\frontend\\src\\cmps\\FavoriteBoards.jsx":"39","D:\\git-projects\\funday\\frontend\\src\\cmps\\PopupModal.jsx":"40","D:\\git-projects\\funday\\frontend\\src\\cmps\\Search.jsx":"41","D:\\git-projects\\funday\\frontend\\src\\cmps\\ToolbarOptionsModal.jsx":"42","D:\\git-projects\\funday\\frontend\\src\\cmps\\TablePreview.jsx":"43","D:\\git-projects\\funday\\frontend\\src\\cmps\\CreateWorkspace.jsx":"44","D:\\git-projects\\funday\\frontend\\src\\cmps\\TextareaEditor.jsx":"45","D:\\git-projects\\funday\\frontend\\src\\cmps\\WorkspaceIconPicker.jsx":"46","D:\\git-projects\\funday\\frontend\\src\\data\\shortColorPicker.js":"47","D:\\git-projects\\funday\\frontend\\src\\data\\iconsPicker.js":"48","D:\\git-projects\\funday\\frontend\\src\\data\\colorPicker.js":"49","D:\\git-projects\\funday\\frontend\\src\\cmps\\FolderPreview.jsx":"50","D:\\git-projects\\funday\\frontend\\src\\cmps\\BoardPreview.jsx":"51","D:\\git-projects\\funday\\frontend\\src\\cmps\\ToolbarMenuActionsBtnModal.jsx":"52","D:\\git-projects\\funday\\frontend\\src\\cmps\\CreateBoard.jsx":"53","D:\\git-projects\\funday\\frontend\\src\\cmps\\ForwardModal.jsx":"54","D:\\git-projects\\funday\\frontend\\src\\cmps\\WorkspaceList.jsx":"55","D:\\git-projects\\funday\\frontend\\src\\cmps\\GoogleOauth.jsx":"56","D:\\git-projects\\funday\\frontend\\src\\cmps\\Task.jsx":"57","D:\\git-projects\\funday\\frontend\\src\\cmps\\TableColumnPreview.jsx":"58","D:\\git-projects\\funday\\frontend\\src\\cmps\\PinCheckbox.jsx":"59","D:\\git-projects\\funday\\frontend\\src\\cmps\\AvailableFoldersList.jsx":"60","D:\\git-projects\\funday\\frontend\\src\\cmps\\TaskStatus.jsx":"61","D:\\git-projects\\funday\\frontend\\src\\cmps\\TaskCheckBox.jsx":"62","D:\\git-projects\\funday\\frontend\\src\\cmps\\TaskText.jsx":"63","D:\\git-projects\\funday\\frontend\\src\\cmps\\TaskConversation.jsx":"64","D:\\git-projects\\funday\\frontend\\src\\cmps\\OwnerModal.jsx":"65","D:\\git-projects\\funday\\frontend\\src\\data\\stickers.js":"66","D:\\git-projects\\funday\\frontend\\src\\cmps\\StatusLabelPreview.jsx":"67","D:\\git-projects\\funday\\frontend\\src\\cmps\\UpdateLabelName.jsx":"68","D:\\git-projects\\funday\\frontend\\src\\cmps\\ActivitiesModal.jsx":"69"},{"size":728,"mtime":1611427859991,"results":"70","hashOfConfig":"71"},{"size":525,"mtime":1616168523725,"results":"72","hashOfConfig":"71"},{"size":362,"mtime":499162500000,"results":"73","hashOfConfig":"71"},{"size":333,"mtime":1611427739487,"results":"74","hashOfConfig":"71"},{"size":510,"mtime":1616325223544,"results":"75","hashOfConfig":"71"},{"size":409,"mtime":1616331122967,"results":"76","hashOfConfig":"71"},{"size":2066,"mtime":1616335741225,"results":"77","hashOfConfig":"71"},{"size":22668,"mtime":1616714063803,"results":"78","hashOfConfig":"71"},{"size":169,"mtime":1611429731211,"results":"79","hashOfConfig":"71"},{"size":4743,"mtime":1616152301080,"results":"80","hashOfConfig":"71"},{"size":7816,"mtime":1616336792390,"results":"81","hashOfConfig":"71"},{"size":858,"mtime":1616332157848,"results":"82","hashOfConfig":"71"},{"size":319,"mtime":1611427739484,"results":"83","hashOfConfig":"71"},{"size":2823,"mtime":1616690252245,"results":"84","hashOfConfig":"71"},{"size":1310,"mtime":1616330863619,"results":"85","hashOfConfig":"71"},{"size":4468,"mtime":1616330843915,"results":"86","hashOfConfig":"71"},{"size":541,"mtime":1616330659417,"results":"87","hashOfConfig":"71"},{"size":2967,"mtime":1616335093339,"results":"88","hashOfConfig":"71"},{"size":23701,"mtime":1616689342975,"results":"89","hashOfConfig":"71"},{"size":1886,"mtime":1616330697147,"results":"90","hashOfConfig":"71"},{"size":7787,"mtime":1616713796213,"results":"91","hashOfConfig":"71"},{"size":607,"mtime":1616325928630,"results":"92","hashOfConfig":"71"},{"size":5222,"mtime":1616336626512,"results":"93","hashOfConfig":"71"},{"size":10197,"mtime":1616768542166,"results":"94","hashOfConfig":"71"},{"size":13757,"mtime":1616714790095,"results":"95","hashOfConfig":"71"},{"size":1953,"mtime":1616678883536,"results":"96","hashOfConfig":"71"},{"size":9747,"mtime":1616709256601,"results":"97","hashOfConfig":"71"},{"size":7789,"mtime":1615049217855,"results":"98","hashOfConfig":"71"},{"size":2109,"mtime":1616330400762,"results":"99","hashOfConfig":"71"},{"size":137,"mtime":1611427739470,"results":"100","hashOfConfig":"71"},{"size":1892,"mtime":1616335894478,"results":"101","hashOfConfig":"71"},{"size":1026,"mtime":1613822812505,"results":"102","hashOfConfig":"71"},{"size":616,"mtime":1616330651313,"results":"103","hashOfConfig":"71"},{"size":1569,"mtime":1616713806592,"results":"104","hashOfConfig":"71"},{"size":1113,"mtime":1616713544407,"results":"105","hashOfConfig":"71"},{"size":1952,"mtime":1616255625908,"results":"106","hashOfConfig":"71"},{"size":7156,"mtime":1616676374155,"results":"107","hashOfConfig":"71"},{"size":7097,"mtime":1616335448702,"results":"108","hashOfConfig":"71"},{"size":8500,"mtime":1616713669120,"results":"109","hashOfConfig":"71"},{"size":481,"mtime":1614718130207,"results":"110","hashOfConfig":"71"},{"size":3817,"mtime":1616257419717,"results":"111","hashOfConfig":"71"},{"size":1820,"mtime":1615459824938,"results":"112","hashOfConfig":"71"},{"size":28996,"mtime":1616714815135,"results":"113","hashOfConfig":"71"},{"size":3795,"mtime":1616009233691,"results":"114","hashOfConfig":"71"},{"size":17,"mtime":1616270158957,"results":"115","hashOfConfig":"71"},{"size":2215,"mtime":1616009288797,"results":"116","hashOfConfig":"71"},{"size":498,"mtime":1616009123198,"results":"117","hashOfConfig":"71"},{"size":231,"mtime":1616008889922,"results":"118","hashOfConfig":"71"},{"size":478,"mtime":1616008609965,"results":"119","hashOfConfig":"71"},{"size":9274,"mtime":1616713661766,"results":"120","hashOfConfig":"71"},{"size":10767,"mtime":1616713962667,"results":"121","hashOfConfig":"71"},{"size":2002,"mtime":1614682059036,"results":"122","hashOfConfig":"71"},{"size":1530,"mtime":1614719740132,"results":"123","hashOfConfig":"71"},{"size":1471,"mtime":1615459998987,"results":"124","hashOfConfig":"71"},{"size":2304,"mtime":1615458123311,"results":"125","hashOfConfig":"71"},{"size":1390,"mtime":1616330056222,"results":"126","hashOfConfig":"71"},{"size":15633,"mtime":1616767062873,"results":"127","hashOfConfig":"71"},{"size":7348,"mtime":1616714805604,"results":"128","hashOfConfig":"71"},{"size":1452,"mtime":1614985874219,"results":"129","hashOfConfig":"71"},{"size":1292,"mtime":1615574752140,"results":"130","hashOfConfig":"71"},{"size":10081,"mtime":1616715026651,"results":"131","hashOfConfig":"71"},{"size":873,"mtime":1616712725878,"results":"132","hashOfConfig":"71"},{"size":4067,"mtime":1616714835198,"results":"133","hashOfConfig":"71"},{"size":1298,"mtime":1616322210741,"results":"134","hashOfConfig":"71"},{"size":4274,"mtime":1616712647652,"results":"135","hashOfConfig":"71"},{"size":4116,"mtime":1616008382010,"results":"136","hashOfConfig":"71"},{"size":4196,"mtime":1614466301130,"results":"137","hashOfConfig":"71"},{"size":1932,"mtime":1616330390199,"results":"138","hashOfConfig":"71"},{"size":3673,"mtime":1616777944195,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"25938m",{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"179"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\git-projects\\funday\\frontend\\src\\index.js",[],"D:\\git-projects\\funday\\frontend\\src\\App.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\reportWebVitals.js",[],"D:\\git-projects\\funday\\frontend\\src\\store\\store.js",[],"D:\\git-projects\\funday\\frontend\\src\\routes.js",[],"D:\\git-projects\\funday\\frontend\\src\\store\\reducers\\index.js",[],"D:\\git-projects\\funday\\frontend\\src\\pages\\Home.jsx",["281"],"D:\\git-projects\\funday\\frontend\\src\\pages\\Workspace.jsx",["282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297"],"D:\\git-projects\\funday\\frontend\\src\\pages\\About.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\pages\\UserDetails.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\cmps\\Navbar.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\store\\reducers\\userReducer.js",[],"D:\\git-projects\\funday\\frontend\\src\\store\\reducers\\systemReducer.js",["298"],"D:\\git-projects\\funday\\frontend\\src\\store\\reducers\\workspaceReducer.js",[],"D:\\git-projects\\funday\\frontend\\src\\store\\reducers\\boardReducer.js",[],"D:\\git-projects\\funday\\frontend\\src\\store\\actions\\workspaceActions.js",[],"D:\\git-projects\\funday\\frontend\\src\\services\\folderService.js",[],"D:\\git-projects\\funday\\frontend\\src\\store\\actions\\userActions.js",[],"D:\\git-projects\\funday\\frontend\\src\\services\\boardService.js",["299"],"import httpService from './httpService'\r\nexport const boardService = {\r\n    getById,\r\n    addBoard,\r\n    addBoardInFolder,\r\n    removeBoard,\r\n    addFolder,\r\n    removeFolder,\r\n    updateFolder,\r\n    addTable,\r\n    removeTable,\r\n    updateTable,\r\n    addTask,\r\n    removeTask,\r\n    updateTask\r\n}\r\n\r\n\r\n//BOARD\r\n\r\nfunction getById(workspaces,boardId){\r\n    let board ={}\r\n    workspaces.map(workspace=>\r\n        workspace.boards.map(_board=>\r\n            _board._id===boardId?board=_board:board=null\r\n        )\r\n    )\r\n    if(!board){\r\n        workspaces.map(workspace=>\r\n            workspace.folders.map(folder=>\r\n                folder.boards.map(_board=>\r\n                    _board._id===boardId?board=_board:board=null\r\n                )\r\n            )\r\n        )\r\n    }\r\n    return board\r\n}\r\n\r\nfunction addBoard(currWorkspace, boardName) {\r\n    const newBoard = {\r\n        _id : Date.now().toString(16) + Math.random().toString(16),\r\n        isLastSeen : false,\r\n        name : boardName,\r\n        desc : \"Add board description\",\r\n        createdAt : Date.now(),\r\n        lastUpdated : null,\r\n        statusLabelList: [\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#ffbe0c\",\r\n                    name:\"Working on it\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#2bd44e\",\r\n                    name:\"Done\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#c73d51\",\r\n                    name:\"Delayed\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"rgb(255 60 125)\",\r\n                    name:\"To do\"\r\n                }\r\n            ],\r\n            activities : [],\r\n            isPrivate : false,\r\n            owner : {},\r\n            tableColumns : [ \r\n                {\r\n                    _id :uniqId(),\r\n                    title : \"Group Title\",\r\n                    type : \"Group Title\",\r\n                    taskKey : \"name\"\r\n                }, \r\n                {\r\n                    _id :uniqId(),\r\n                    title : \"Person123\",\r\n                    type : \"user/users array selector/picker\",\r\n                    taskKey : \"owner\"\r\n                }, \r\n                {\r\n                    _id : uniqId(),\r\n                    title : \"Status123\",\r\n                    type : \"selector\",\r\n                    taskKey : \"status\"\r\n                }, \r\n                {\r\n                    _id : uniqId(),\r\n                    title : \"Date\",\r\n                    type : \"string\",\r\n                    taskKey : \"createdAt\"\r\n                }\r\n            ],\r\n            tables : [ \r\n                {\r\n                    _id : uniqId(),\r\n                    name : \"Group Title\",\r\n                    color : \"#0085ff\",\r\n                    createdAt : Date.now(),\r\n                    lastUpdated : \"\",\r\n                    tasks : [ \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 1\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"Done\",\r\n                                color : \"rgb(43, 212, 78)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 2\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"Working on it\",\r\n                                color : \"rgb(255, 190, 12)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id :uniqId(),\r\n                            name : \"Item 3\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }\r\n                    ]\r\n                }, \r\n                {\r\n                    _id :uniqId(),\r\n                    name : \"Group Title\",\r\n                    color : \"#b456dd\",\r\n                    createdAt : Date.now(),\r\n                    lastUpdated : \"\",\r\n                    tasks : [ \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 4\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 5\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n    }\r\n    const newWorkspace = currWorkspace\r\n    newWorkspace.boards = [...newWorkspace.boards,newBoard]\r\n    return newWorkspace\r\n}\r\n\r\nfunction addBoardInFolder(currWorkspace,folder,boardName=\"New Board\") {\r\n    const newBoard = {\r\n        _id : Date.now().toString(16) + Math.random().toString(16),\r\n        isLastSeen : false,\r\n        name : boardName,\r\n        desc : \"Add board description\",\r\n        createdAt : Date.now(),\r\n        lastUpdated : null,\r\n        statusLabelList: [\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#ffbe0c\",\r\n                    name:\"Working on it\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#2bd44e\",\r\n                    name:\"Done\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"#c73d51\",\r\n                    name:\"Delayed\"\r\n                },\r\n                {\r\n                    _id : uniqId(),\r\n                    color:\"rgb(255 60 125)\",\r\n                    name:\"To do\"\r\n                }\r\n            ],\r\n            activities : [ ],\r\n            isPrivate : false,\r\n            owner : {},\r\n            tableColumns : [ \r\n                {\r\n                    _id :uniqId(),\r\n                    title : \"Group Title\",\r\n                    type : \"Group Title\",\r\n                    taskKey : \"name\"\r\n                }, \r\n                {\r\n                    _id :uniqId(),\r\n                    title : \"Person123\",\r\n                    type : \"user/users array selector/picker\",\r\n                    taskKey : \"owner\"\r\n                }, \r\n                {\r\n                    _id : uniqId(),\r\n                    title : \"Status123\",\r\n                    type : \"selector\",\r\n                    taskKey : \"status\"\r\n                }, \r\n                {\r\n                    _id : uniqId(),\r\n                    title : \"Date\",\r\n                    type : \"string\",\r\n                    taskKey : \"createdAt\"\r\n                }\r\n            ],\r\n            tables : [ \r\n                {\r\n                    _id : uniqId(),\r\n                    name : \"Group Title\",\r\n                    color : \"#0085ff\",\r\n                    createdAt : Date.now(),\r\n                    lastUpdated : \"\",\r\n                    tasks : [ \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 1\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"Done\",\r\n                                color : \"rgb(43, 212, 78)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 2\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"Working on it\",\r\n                                color : \"rgb(255, 190, 12)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id :uniqId(),\r\n                            name : \"Item 3\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }\r\n                    ]\r\n                }, \r\n                {\r\n                    _id :uniqId(),\r\n                    name : \"Group Title\",\r\n                    color : \"#b456dd\",\r\n                    createdAt : Date.now(),\r\n                    lastUpdated : \"\",\r\n                    tasks : [ \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 4\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }, \r\n                        {\r\n                            _id : uniqId(),\r\n                            name : \"Item 5\",\r\n                            createdAt :Date.now(),\r\n                            conversations : [],\r\n                            package : \"\",\r\n                            owner : [],\r\n                            milestone : \"\",\r\n                            status : {\r\n                                name : \"\",\r\n                                color : \"rgb(180, 182, 188)\"\r\n                            },\r\n                            policyState : {\r\n                                name : \"\",\r\n                                color : \"\"\r\n                            },\r\n                            timeline : {\r\n                                from : \"\",\r\n                                to : \"\"\r\n                            },\r\n                            duration : \"\",\r\n                            tags : [],\r\n                            files : [],\r\n                            weight : \"\",\r\n                            dateCompleted : null,\r\n                            progress : \"\",\r\n                            lastUpdated : {}\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n    }\r\n    let newFolder = {...folder}\r\n    newFolder.boards = [...newFolder.boards,newBoard]\r\n\r\n    currWorkspace.folders = currWorkspace.folders.map(_folder=>\r\n        _folder._id===newFolder._id?newFolder:_folder\r\n    )\r\n    return currWorkspace\r\n}\r\n\r\nfunction removeBoard(currWorkspace, boardId) {\r\n    var boardToRemove =null\r\n    let newWorkspace = {}\r\n    currWorkspace.boards.forEach(_board=>\r\n        _board._id===boardId?\r\n        boardToRemove={..._board}\r\n        :\r\n        null\r\n    )\r\n    if(boardToRemove){\r\n        // board inside the workspace\r\n        newWorkspace={\r\n            ...currWorkspace,\r\n            boards: currWorkspace.boards.filter(_board=>\r\n                _board._id!==boardId\r\n            )\r\n        }\r\n    }else{\r\n        currWorkspace.folders.forEach(folder=>\r\n            folder.boards.forEach(_board=>\r\n                _board._id===boardId?boardToRemove=_board:null\r\n            )\r\n        )\r\n        if(boardToRemove){\r\n            // board inside the folder\r\n            let currFolder = {}\r\n            currWorkspace.folders.forEach(folder=>\r\n                folder.boards.forEach(_board=>_board._id===boardToRemove._id?\r\n                currFolder=folder\r\n                :\r\n                null\r\n                )\r\n            )\r\n            newWorkspace={\r\n                ...currWorkspace,\r\n                folders:currWorkspace.folders.map(folder=>\r\n                    folder._id===currFolder._id?\r\n                    folder = {\r\n                        ...folder,\r\n                        boards: folder.boards.filter(_board=>\r\n                            _board._id!==boardToRemove._id\r\n                        )\r\n                    }\r\n                    :\r\n                    folder\r\n                )\r\n            }\r\n        }\r\n    }\r\n    return newWorkspace\r\n    \r\n}\r\n\r\nfunction addFolder(currWorkspace) {\r\n    const newFolder = {\r\n        _id : Date.now().toString(16) + Math.random().toString(16),\r\n        name : \"New Folder\",\r\n        boards : []\r\n    }\r\n    const newWorkspace = currWorkspace\r\n    newWorkspace.folders = [...newWorkspace.folders,newFolder]\r\n    return newWorkspace\r\n}\r\n\r\nfunction removeFolder(currWorkspace, folderId) {\r\n    const newWorkspace = currWorkspace\r\n    newWorkspace.folders = newWorkspace.folders.filter(folder=>folder._id!==folderId)\r\n    return newWorkspace\r\n}\r\nfunction updateFolder(currWorkspace, newFolder) {\r\n    const newWorkspace = currWorkspace\r\n    newWorkspace.folders = newWorkspace.folders.map(folder=>folder._id===newFolder._id?newFolder:folder)\r\n    return newWorkspace\r\n}\r\n\r\n\r\n//TABLE\r\n\r\nfunction addTable(currBoard) {\r\n    const newTable = {\r\n        _id : Date.now().toString(16) + Math.random().toString(16) + '0'.repeat(16),\r\n        name : \"New Group\",\r\n        color : \"rgb(180, 182, 188)\",\r\n        createdAt : Date.now(),\r\n        lastUpdated : \"\",\r\n        tasks : []\r\n    }\r\n    const newBoard = currBoard\r\n    newBoard.tables = [ newTable,...newBoard.tables]\r\n    return newBoard\r\n}\r\n\r\nfunction removeTable(tableId,currBoard) {\r\n    const newBoard = currBoard\r\n    newBoard.tables = newBoard.tables.filter(table=>table._id!==tableId)\r\n    return newBoard\r\n}\r\n\r\nfunction updateTable(currBoard,updatedTable) {\r\n    const newBoard ={\r\n        ...currBoard, \r\n        tables: currBoard.tables.map(table=>\r\n            table._id===updatedTable._id?\r\n            updatedTable\r\n            :table\r\n        )\r\n    }\r\n    return newBoard\r\n}\r\n\r\n//TASK\r\n\r\nfunction addTask(currTable,currBoard,userInput,user) {\r\n    const newTask = {\r\n        _id : Date.now().toString(16) + Math.random().toString(16) + '0'.repeat(16),\r\n        name : userInput,\r\n        createdAt : Date.now(),\r\n        conversations : [],\r\n        package : \"\",\r\n        owner : [],\r\n        milestone : \"\",\r\n        status : {\r\n            name : \"\",\r\n            color : \"rgb(180, 182, 188)\"\r\n        },\r\n        policyState : {\r\n            name : \"\",\r\n            color : \"\"\r\n        },\r\n        timeline : {\r\n            from : \"\",\r\n            to : \"\"\r\n        },\r\n        duration : \"\",\r\n        tags : [],\r\n        files : [],\r\n        weight : \"\",\r\n        dateCompleted : null,\r\n        progress : \"\",\r\n        lastUpdated : {\r\n            byUser : user,\r\n            date : new Date().getTime() // if Date.now()-time stemp < 1 min then output \"just now\" else output 1 minute ago\r\n        }\r\n    }\r\n    newTask.owner.push(user._id)\r\n    const newBoard = currBoard\r\n    newBoard.tables.map(table=>\r\n        table._id===currTable._id?table.tasks.push(newTask):table\r\n        )\r\n    return newBoard\r\n}\r\n\r\n\r\nfunction updateTask(currTable,currBoard,updatedTask,user) {\r\n    updatedTask.lastUpdated={\r\n        byUser : user,\r\n        date :new Date().getTime()\r\n    }\r\n    const newBoard ={\r\n        ...currBoard, \r\n        tables: currBoard.tables.map(table=>\r\n            table._id===currTable._id?\r\n           {...table, tasks:\r\n            table.tasks.map(task=>\r\n                task._id===updatedTask._id?\r\n                updatedTask:task\r\n            )\r\n            }\r\n            :table\r\n        )\r\n    }\r\n    return newBoard\r\n}\r\n\r\n\r\n\r\nfunction removeTask(taskId,currTable,currBoard) {\r\n    const newTable = {\r\n        ...currTable,\r\n        tasks:currTable.tasks.filter(task=>task._id!==taskId)\r\n    }\r\n    const newBoard ={\r\n        ...currBoard, \r\n        tables: currBoard.tables.map(table=>\r\n            table._id===newTable._id?\r\n            newTable\r\n            :table\r\n        )\r\n    }\r\n\r\n    return newBoard\r\n}\r\n\r\n\r\nfunction uniqId() {\r\n    // Math.random should be unique because of its seeding algorithm.\r\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n    // after the decimal.\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n};",["300","301"],"D:\\git-projects\\funday\\frontend\\src\\services\\workspaceService.js",[],"D:\\git-projects\\funday\\frontend\\src\\cmps\\BoardToolbarMenu.jsx",["302"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\LoginModal.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\cmps\\BoardToolbar.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\cmps\\BoardMain.jsx",["303","304"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\BoardHeader.jsx",["305","306"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\BoardDetails.jsx",["307","308","309"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\ConversationModal.jsx",["310","311","312"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\NewWorkspaceBoardMain.jsx",["313","314"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\UploadImg.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\store\\actions\\systemActions.js",[],"D:\\git-projects\\funday\\frontend\\src\\services\\userService.js",["315"],"D:\\git-projects\\funday\\frontend\\src\\services\\httpService.js",["316"],"D:\\git-projects\\funday\\frontend\\src\\services\\cloudinarySerivice.js",[],"D:\\git-projects\\funday\\frontend\\src\\cmps\\FolderList.jsx",["317","318","319","320","321"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\BoardList.jsx",["322"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\ToolbarMenuActionsBtn.jsx",["323","324"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\UpdateWorkspace.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\pages\\Login.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\cmps\\FavoriteBoards.jsx",["325"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\PopupModal.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\cmps\\Search.jsx",["326"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\ToolbarOptionsModal.jsx",["327","328"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\TablePreview.jsx",["329","330"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\CreateWorkspace.jsx",["331"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\TextareaEditor.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\cmps\\WorkspaceIconPicker.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\data\\shortColorPicker.js",[],"D:\\git-projects\\funday\\frontend\\src\\data\\iconsPicker.js",[],"D:\\git-projects\\funday\\frontend\\src\\data\\colorPicker.js",[],"D:\\git-projects\\funday\\frontend\\src\\cmps\\FolderPreview.jsx",["332","333","334"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\BoardPreview.jsx",["335"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\ToolbarMenuActionsBtnModal.jsx",["336","337","338"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\CreateBoard.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\cmps\\ForwardModal.jsx",["339","340"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\WorkspaceList.jsx",["341","342"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\GoogleOauth.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\cmps\\Task.jsx",["343","344"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\TableColumnPreview.jsx",["345"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\PinCheckbox.jsx",["346"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\AvailableFoldersList.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\cmps\\TaskStatus.jsx",["347","348","349"],"import React, { Component } from 'react'\r\nimport {BsDroplet} from 'react-icons/bs'\r\nimport {StatusLabelPreview} from './StatusLabelPreview'\r\nimport {colorsPicker} from '../data/colorPicker'\r\nimport { DragDropContext,Droppable ,Draggable   } from 'react-beautiful-dnd';\r\n\r\nexport class TaskStatus extends Component {\r\n    state={\r\n        statusLabelList:[],\r\n        isStatusModalOpen:false,\r\n        isEditLabelsModalOpen:false,\r\n        newLabelColor:null,\r\n        isUpdateLabelColor:false,\r\n        currLabel:{},\r\n        hideColorPicker:false,\r\n        boardCopy:null\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const statusLabelList = [...this.props.board.statusLabelList]\r\n        this.setState({statusLabelList})\r\n        this.setState({boardCopy:this.props.board})\r\n    }\r\n\r\n    toggleStatusModal=()=>{\r\n        this.setState({isStatusModalOpen:!this.state.isStatusModalOpen})\r\n    }\r\n    closeStatusModal=()=>{\r\n        if(this.state.isEditLabelsModalOpen)return\r\n        this.setState({isStatusModalOpen:false})\r\n        this.closeEditLabelsModal()\r\n    }\r\n    updateTask=(table,task,statusLabel)=>{\r\n        const updatedTask = {\r\n            ...task,\r\n            status:statusLabel\r\n        }\r\n        const desc = `changed task \"${task.name}\" status from \"${task.status.name}\" to \"${statusLabel.name}\"`\r\n        this.props.onEditTask(table,updatedTask,desc)\r\n        this.setState({isStatusModalOpen:false})\r\n    }\r\n    openEditLabelsModal=()=>{\r\n        this.setState({isEditLabelsModalOpen:true})\r\n    }\r\n    closeEditLabelsModal=()=>{\r\n        this.setState({isEditLabelsModalOpen:false})\r\n    }\r\n    onChangeNewLabelColor=(currColor)=>{\r\n        this.setState({newLabelColor:currColor})\r\n    }\r\n    onRemoveNewLabelColor=()=>{\r\n        this.setState({newLabelColor:null})\r\n    }\r\n    onAddNewLabel=(currColor)=>{\r\n        if(this.props.board.statusLabelList.length===12)return\r\n        this.setState({\r\n            statusLabelList:[\r\n                ...this.props.board.statusLabelList,\r\n                {\r\n                    _id:(new Date()).getTime().toString(),\r\n                    color:currColor,\r\n                    name:'New Label'\r\n                }\r\n            ]\r\n        },()=>{\r\n            const newBoard = {\r\n                ...this.props.board,\r\n                 statusLabelList:[...this.props.board.statusLabelList,{\r\n                    _id:(new Date()).getTime().toString(),\r\n                    color:currColor,\r\n                    name:'New Label'\r\n                }]\r\n            }\r\n            this.props.onEditBoard(newBoard,null)\r\n        })\r\n    }\r\n    onRemoveLabel=(labelId)=>{\r\n        const newstatusLabelList = this.state.statusLabelList.filter(label=>label._id!==labelId)\r\n        this.setState({\r\n            statusLabelList:newstatusLabelList\r\n        },()=>{\r\n            const newBoard = {\r\n                ...this.props.board,\r\n                statusLabelList:newstatusLabelList\r\n            }\r\n            this.props.onEditBoard(newBoard,null)\r\n        })\r\n    }\r\n    updateLabel=(newLabel)=>{\r\n        const newstatusLabelList = this.props.board.statusLabelList.map(label=>label._id===newLabel._id?newLabel:label)\r\n        this.setState({\r\n            statusLabelList:newstatusLabelList\r\n        },()=>{\r\n            const newBoard = {...this.props.board,\r\n                statusLabelList:newstatusLabelList\r\n            }\r\n            this.props.onEditBoard(newBoard,null)\r\n        })\r\n    }\r\n    onToggleUpdateLabelColor=(currLabel)=>{\r\n        this.setState({isUpdateLabelColor:!this.state.isUpdateLabelColor})\r\n        this.setState({currLabel})\r\n    }\r\n    hideColorPicker=(toggleUpdateLabel)=>{\r\n        if(toggleUpdateLabel){\r\n            this.setState({hideColorPicker:true})\r\n        }else{\r\n            this.setState({hideColorPicker:false})\r\n        }\r\n    }\r\n    handleDragEnd=({destination, source})=>{\r\n       if(!destination){\r\n           // console.log(\"not dropped in droppable\")\r\n           return\r\n       }\r\n       if(destination.index===source.index&&destination.draggableId===source.draggableId){\r\n           // console.log(\"dropped in same place\")\r\n           return\r\n       }\r\n        //board.statusLabelList\r\n       const statusLabelListCopy = {...this.props.board.statusLabelList[source.index]}\r\n       this.setState({ // no previous or latest old state passed \r\n            boardCopy:{...this.state.boardCopy}\r\n            }, ()=>{\r\n                this.state.boardCopy.statusLabelList.splice(source.index,1);\r\n                this.state.boardCopy.statusLabelList.splice(destination.index, 0, statusLabelListCopy);\r\n                return this.state.boardCopy\r\n        })  \r\n        this.props.onEditBoard(this.state.boardCopy,null)\r\n   }\r\n    render() {\r\n        const { isStatusModalOpen,isEditLabelsModalOpen,statusLabelList,isUpdateLabelColor } = this.state\r\n        const { task , table, taskKey, FaPencilAlt,onEditTask,board } = this.props\r\n\r\n        if (!task) return <div>Loading....</div>\r\n        return (\r\n            <>\r\n            <div className='table-cell task-cell'\r\n             tabIndex=\"0\" \r\n             onBlur={this.closeStatusModal}\r\n             >\r\n            <div className='task-cell-status' style={{backgroundColor:`${task.status.color}`}} onClick={this.toggleStatusModal}>\r\n                <div className=\"cell-content-wrapper\">\r\n                {task[taskKey].name}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"status-container\">\r\n                {\r\n                isStatusModalOpen&&\r\n                    !isEditLabelsModalOpen&&\r\n                    <div className=\"status-modal-wrapper\">\r\n                        <div className=\"status-label-list-container\">\r\n                            {\r\n                            board.statusLabelList.map((statusLabel,idx)=>\r\n                                <div \r\n                                title={`${statusLabel.name}`}\r\n                                className={`stat-label ${statusLabel.name.length>13?'ellipsis-label-name':''}`}\r\n                                tabindex=\"0\"\r\n                                style={{backgroundColor:`${statusLabel.color}`}}\r\n                                onMouseDown={()=>this.updateTask(table,task,statusLabel)}\r\n                                >\r\n                                   {statusLabel.name}\r\n                                </div> \r\n                            )}\r\n                        </div>\r\n                        <div className=\"status-label-btn edit-status\" onClick={this.openEditLabelsModal}>\r\n                            <FaPencilAlt className=\"status-FaPencilAlt\"/>\r\n                            <span>Add/Edit Labels</span>\r\n                        </div>\r\n                    </div>\r\n                }{\r\n                isStatusModalOpen&&\r\n                 isEditLabelsModalOpen&&\r\n                    <div className=\"status-modal-wrapper\">\r\n                        <DragDropContext  onDragEnd={this.handleDragEnd} >\r\n                            <Droppable droppableId='statusLabelList'>\r\n                            {(provided) => (\r\n                                <div className={`status-label-list-container edit ${this.state.hideColorPicker?'updating-the-label':''}`} key='statusLabelList' {...provided.droppableProps} ref={provided.innerRef}>\r\n                                {\r\n                                    board.statusLabelList.map((statusLabel,index)=>\r\n                                        <Draggable key={statusLabel._id} draggableId={statusLabel._id} index={index}>\r\n                                            {(provided) => (\r\n                                                <StatusLabelPreview \r\n                                                provided={provided}\r\n                                                BsDroplet={BsDroplet}\r\n                                                TiDelete={BsDroplet}\r\n                                                statusLabel={statusLabel}\r\n                                                colorsPicker={colorsPicker}\r\n                                                hideColorPicker={this.hideColorPicker}\r\n                                                idx={index}\r\n                                                onRemoveLabel={this.onRemoveLabel}\r\n                                                updateLabel={this.updateLabel}\r\n                                                />\r\n                                            )}\r\n                                        </Draggable>\r\n                                    )}\r\n                                    {board.statusLabelList.length<12&&<div className={`add-new-label sec-column ${this.state.newLabelColor?'':'default'}`} style={{backgroundColor:`${this.state.newLabelColor?this.state.newLabelColor:'transparent'}`}}>\r\n                                    New Label\r\n                                    </div>}\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n                            </Droppable>\r\n                        </DragDropContext>\r\n                       { !this.state.hideColorPicker&&<div className='status-color-picker'>\r\n                            {colorsPicker.map(color=>\r\n                                <div \r\n                                className=\"color\" \r\n                                style={{backgroundColor:`${color}`}}\r\n                                onMouseEnter={() => this.onChangeNewLabelColor(color)}\r\n                                onMouseLeave={() => this.onRemoveNewLabelColor()}\r\n                                onClick={()=>this.onAddNewLabel(color)}\r\n                                ></div>\r\n                            )}\r\n                        </div>}\r\n                        <div className=\"status-label-btn\" onClick={this.closeEditLabelsModal}>\r\n                            <span>Apply</span>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\git-projects\\funday\\frontend\\src\\cmps\\TaskCheckBox.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\cmps\\TaskText.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\cmps\\TaskConversation.jsx",["350","351"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\OwnerModal.jsx",["352"],"D:\\git-projects\\funday\\frontend\\src\\data\\stickers.js",[],"D:\\git-projects\\funday\\frontend\\src\\cmps\\StatusLabelPreview.jsx",["353"],"D:\\git-projects\\funday\\frontend\\src\\cmps\\UpdateLabelName.jsx",[],"D:\\git-projects\\funday\\frontend\\src\\cmps\\ActivitiesModal.jsx",["354","355","356"],{"ruleId":"357","severity":1,"message":"358","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":17},{"ruleId":"357","severity":1,"message":"361","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":21},{"ruleId":"357","severity":1,"message":"362","line":6,"column":10,"nodeType":"359","messageId":"360","endLine":6,"endColumn":19},{"ruleId":"357","severity":1,"message":"363","line":11,"column":10,"nodeType":"359","messageId":"360","endLine":11,"endColumn":31},{"ruleId":"357","severity":1,"message":"364","line":21,"column":5,"nodeType":"359","messageId":"360","endLine":21,"endColumn":19},{"ruleId":"357","severity":1,"message":"365","line":22,"column":5,"nodeType":"359","messageId":"360","endLine":22,"endColumn":13},{"ruleId":"357","severity":1,"message":"366","line":23,"column":5,"nodeType":"359","messageId":"360","endLine":23,"endColumn":13},{"ruleId":"357","severity":1,"message":"367","line":24,"column":5,"nodeType":"359","messageId":"360","endLine":24,"endColumn":11},{"ruleId":"357","severity":1,"message":"368","line":29,"column":5,"nodeType":"359","messageId":"360","endLine":29,"endColumn":19},{"ruleId":"357","severity":1,"message":"369","line":31,"column":5,"nodeType":"359","messageId":"360","endLine":31,"endColumn":22},{"ruleId":"357","severity":1,"message":"370","line":34,"column":10,"nodeType":"359","messageId":"360","endLine":34,"endColumn":25},{"ruleId":"357","severity":1,"message":"371","line":35,"column":10,"nodeType":"359","messageId":"360","endLine":35,"endColumn":18},{"ruleId":"357","severity":1,"message":"372","line":36,"column":10,"nodeType":"359","messageId":"360","endLine":36,"endColumn":17},{"ruleId":"357","severity":1,"message":"373","line":37,"column":10,"nodeType":"359","messageId":"360","endLine":37,"endColumn":22},{"ruleId":"357","severity":1,"message":"374","line":38,"column":10,"nodeType":"359","messageId":"360","endLine":38,"endColumn":27},{"ruleId":"357","severity":1,"message":"375","line":40,"column":10,"nodeType":"359","messageId":"360","endLine":40,"endColumn":22},{"ruleId":"357","severity":1,"message":"376","line":42,"column":10,"nodeType":"359","messageId":"360","endLine":42,"endColumn":26},{"ruleId":"377","severity":1,"message":"378","line":5,"column":1,"nodeType":"379","endLine":13,"endColumn":2},{"ruleId":"357","severity":1,"message":"380","line":1,"column":8,"nodeType":"359","messageId":"360","endLine":1,"endColumn":19},{"ruleId":"381","replacedBy":"382"},{"ruleId":"383","replacedBy":"384"},{"ruleId":"357","severity":1,"message":"385","line":1,"column":36,"nodeType":"359","messageId":"360","endLine":1,"endColumn":42},{"ruleId":"357","severity":1,"message":"386","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":22},{"ruleId":"357","severity":1,"message":"387","line":8,"column":10,"nodeType":"359","messageId":"360","endLine":8,"endColumn":24},{"ruleId":"357","severity":1,"message":"386","line":6,"column":10,"nodeType":"359","messageId":"360","endLine":6,"endColumn":22},{"ruleId":"357","severity":1,"message":"388","line":7,"column":10,"nodeType":"359","messageId":"360","endLine":7,"endColumn":22},{"ruleId":"357","severity":1,"message":"389","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":26},{"ruleId":"357","severity":1,"message":"385","line":1,"column":36,"nodeType":"359","messageId":"360","endLine":1,"endColumn":42},{"ruleId":"357","severity":1,"message":"390","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":21},{"ruleId":"357","severity":1,"message":"391","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":24},{"ruleId":"357","severity":1,"message":"392","line":3,"column":31,"nodeType":"359","messageId":"360","endLine":3,"endColumn":41},{"ruleId":"357","severity":1,"message":"390","line":12,"column":10,"nodeType":"359","messageId":"360","endLine":12,"endColumn":21},{"ruleId":"357","severity":1,"message":"390","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":21},{"ruleId":"357","severity":1,"message":"393","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":17},{"ruleId":"377","severity":1,"message":"394","line":3,"column":1,"nodeType":"379","endLine":15,"endColumn":2},{"ruleId":"377","severity":1,"message":"394","line":10,"column":1,"nodeType":"379","endLine":23,"endColumn":2},{"ruleId":"357","severity":1,"message":"395","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"385","line":1,"column":26,"nodeType":"359","messageId":"360","endLine":1,"endColumn":32},{"ruleId":"357","severity":1,"message":"389","line":1,"column":33,"nodeType":"359","messageId":"360","endLine":1,"endColumn":42},{"ruleId":"357","severity":1,"message":"390","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":21},{"ruleId":"357","severity":1,"message":"396","line":2,"column":23,"nodeType":"359","messageId":"360","endLine":2,"endColumn":34},{"ruleId":"357","severity":1,"message":"395","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"389","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":26},{"ruleId":"357","severity":1,"message":"385","line":1,"column":36,"nodeType":"359","messageId":"360","endLine":1,"endColumn":42},{"ruleId":"357","severity":1,"message":"385","line":1,"column":36,"nodeType":"359","messageId":"360","endLine":1,"endColumn":42},{"ruleId":"357","severity":1,"message":"390","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":21},{"ruleId":"357","severity":1,"message":"389","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":26},{"ruleId":"357","severity":1,"message":"397","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":27},{"ruleId":"357","severity":1,"message":"398","line":6,"column":10,"nodeType":"359","messageId":"360","endLine":6,"endColumn":18},{"ruleId":"399","severity":1,"message":"400","line":87,"column":35,"nodeType":"401","messageId":"402","endLine":87,"endColumn":37},{"ruleId":"357","severity":1,"message":"403","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":19},{"ruleId":"357","severity":1,"message":"397","line":6,"column":10,"nodeType":"359","messageId":"360","endLine":6,"endColumn":27},{"ruleId":"357","severity":1,"message":"404","line":35,"column":12,"nodeType":"359","messageId":"360","endLine":35,"endColumn":29},{"ruleId":"357","severity":1,"message":"405","line":35,"column":31,"nodeType":"359","messageId":"360","endLine":35,"endColumn":51},{"ruleId":"357","severity":1,"message":"406","line":32,"column":12,"nodeType":"359","messageId":"360","endLine":32,"endColumn":25},{"ruleId":"357","severity":1,"message":"389","line":1,"column":17,"nodeType":"359","messageId":"360","endLine":1,"endColumn":26},{"ruleId":"357","severity":1,"message":"395","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":35},{"ruleId":"357","severity":1,"message":"385","line":1,"column":36,"nodeType":"359","messageId":"360","endLine":1,"endColumn":42},{"ruleId":"357","severity":1,"message":"385","line":1,"column":26,"nodeType":"359","messageId":"360","endLine":1,"endColumn":32},{"ruleId":"357","severity":1,"message":"407","line":2,"column":9,"nodeType":"359","messageId":"360","endLine":2,"endColumn":36},{"ruleId":"357","severity":1,"message":"385","line":1,"column":26,"nodeType":"359","messageId":"360","endLine":1,"endColumn":32},{"ruleId":"357","severity":1,"message":"390","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":21},{"ruleId":"357","severity":1,"message":"408","line":3,"column":29,"nodeType":"359","messageId":"360","endLine":3,"endColumn":44},{"ruleId":"409","severity":1,"message":"410","line":142,"column":10,"nodeType":"411","endLine":142,"endColumn":16,"suggestions":"412"},{"ruleId":"357","severity":1,"message":"413","line":145,"column":17,"nodeType":"359","messageId":"360","endLine":145,"endColumn":22},{"ruleId":"357","severity":1,"message":"385","line":1,"column":26,"nodeType":"359","messageId":"360","endLine":1,"endColumn":32},{"ruleId":"357","severity":1,"message":"414","line":132,"column":57,"nodeType":"359","messageId":"360","endLine":132,"endColumn":72},{"ruleId":"357","severity":1,"message":"415","line":132,"column":73,"nodeType":"359","messageId":"360","endLine":132,"endColumn":91},{"ruleId":"357","severity":1,"message":"416","line":133,"column":52,"nodeType":"359","messageId":"360","endLine":133,"endColumn":62},{"ruleId":"357","severity":1,"message":"385","line":1,"column":36,"nodeType":"359","messageId":"360","endLine":1,"endColumn":42},{"ruleId":"357","severity":1,"message":"396","line":4,"column":23,"nodeType":"359","messageId":"360","endLine":4,"endColumn":34},{"ruleId":"357","severity":1,"message":"385","line":1,"column":36,"nodeType":"359","messageId":"360","endLine":1,"endColumn":42},{"ruleId":"357","severity":1,"message":"417","line":37,"column":36,"nodeType":"359","messageId":"360","endLine":37,"endColumn":45},{"ruleId":"357","severity":1,"message":"395","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":35},{"ruleId":"357","severity":1,"message":"385","line":1,"column":36,"nodeType":"359","messageId":"360","endLine":1,"endColumn":42},{"ruleId":"418","severity":1,"message":"419","line":6,"column":33,"nodeType":"420","messageId":"421","endLine":6,"endColumn":35},"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'BoardHeader' is defined but never used.","'BoardMain' is defined but never used.","'NewWorkspaceBoardMain' is defined but never used.","'BsFillStarFill' is defined but never used.","'BsPeople' is defined but never used.","'BsFilter' is defined but never used.","'BsPlus' is defined but never used.","'IoIosArrowDown' is defined but never used.","'IoMdNotifications' is defined but never used.","'HiOutlineSearch' is defined but never used.","'SiProbot' is defined but never used.","'ImTable' is defined but never used.","'BiUserCircle' is defined but never used.","'RiArrowUpDownFill' is defined but never used.","'HiPlusCircle' is defined but never used.","'workspaceService' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'httpService' is defined but never used.","no-native-reassign",["422"],"no-negated-in-lhs",["423"],"'useRef' is defined but never used.","'getCurrBoard' is defined but never used.","'BiGridVertical' is defined but never used.","'boardService' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'TextareaEditor' is defined but never used.","'FaUserEdit' is defined but never used.","'BiCheck' is defined but never used.","Assign object to a variable before exporting as module default","'useState' is defined but never used.","'useSelector' is defined but never used.","'IoIosArrowForward' is defined but never used.","'VscTrash' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'SiPandora' is defined but never used.","'isOpenMoveToModal' is assigned a value but never used.","'setIsOpenMoveToModal' is assigned a value but never used.","'currWorkspace' is assigned a value but never used.","'IoArrowForwardCircleOutline' is defined but never used.","'TiVendorAndroid' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tick'. Either include it or remove the dependency array.","ArrayExpression",["424"],"'board' is assigned a value but never used.","'statusLabelList' is assigned a value but never used.","'isUpdateLabelColor' is assigned a value but never used.","'onEditTask' is assigned a value but never used.","'currLabel' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"425","fix":"426"},"Update the dependencies array to be: [task, tick]",{"range":"427","text":"428"},[4248,4254],"[task, tick]"]